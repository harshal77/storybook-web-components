// -----------------------------------------------------------------------------------------------------
// @ Import color palettes
// -----------------------------------------------------------------------------------------------------

@import 'palette';

// -----------------------------------------------------------------------------------------------------
// @ Define function to generate palette
// -----------------------------------------------------------------------------------------------------
// Creates a container object for a light theme to be given to individual component theme mixins.
@function mat-light-theme-generator(
  $primary,
  $accent,
  $warn: mat-palette($mat-red)
) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    application: non-destructive-map-merge($application, $application-light),
    is-dark: false,
    foreground: $mat-light-theme-foreground,
    background: $mat-light-theme-background
  );
}

// Creates a container object for a dark theme to be given to individual component theme mixins.
@function mat-dark-theme-generator(
  $primary,
  $accent,
  $warn: mat-palette($mat-red)
) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    application: non-destructive-map-merge($application, $application-dark),
    is-dark: true,
    foreground: $mat-dark-theme-foreground,
    background: $mat-dark-theme-background
  );
}

@function non-destructive-map-merge($parent-map, $child-map) {
  $result: $parent-map;
  @each $key, $value in $child-map {
    @if (not map-has-key($result, $key)) or
      (type-of(map-get($result, $key)) != type-of($value)) or
      (not (type-of(map-get($result, $key)) == map and type-of($value) == map))
    {
      $result: map-merge(
        $result,
        (
          $key: $value,
        )
      );
    } @else {
      $result: map-merge(
        $result,
        (
          $key: non-destructive-map-merge(map-get($result, $key), $value),
        )
      );
    }
  }
  @return $result;
}

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------

// Angular Material typography
$typography: mat-typography-config(
  $font-family: 'Poppins, sans-serif',
  $title: mat-typography-level(20px, 32px, 600),
  $body-2: mat-typography-level(14px, 24px, 600),
  $button: mat-typography-level(14px, 14px, 600),
  $input: mat-typography-level(16px, 1.125, 400),
);
// line-height must be unitless !!!

// Setup the typography
@include angular-material-typography($typography);

// -----------------------------------------------------------------------------------------------------
// @ Component theming
// -----------------------------------------------------------------------------------------------------

// Import library component themes here to enable theming for them
//POC
@import '../../src/lib/POC/feature-test/feature-test.theme.scss';
@import '../../src/lib/POC/card2/card2.theme.scss';
@import '../../src/lib/POC/card1/card1.theme.scss';
@import '../../src/lib/POC/map2/map2.theme.scss';
@import '../../src/lib/POC/telco-use-case/recommend-plan/recommend-plan.theme.scss';
@import '../../src/lib/POC/telco-use-case/choose-plan/choose-plan.theme.scss';
@import '../../src/lib/POC/telco-use-case/navigation/navigation.theme.scss';

// Atoms
@import '../../src/lib/atoms/data-table/data-table.theme.scss';
@import '../../src/lib/atoms/icon/icon.theme.scss';
@import '../../src/lib/atoms/icon-duotone/icon-duotone.theme.scss';
@import '../../src/lib/atoms/user-avatar/user-avatar.theme.scss';
@import '../../src/lib/atoms/toggle-switch/toggle-switch.theme.scss';
@import '../../src/lib/atoms/guage/guage.theme.scss';
@import '../../src/lib/atoms/chip/chip.theme.scss';
@import '../../src/lib/atoms/copyable-text/copyable-text.theme.scss';
@import '../../src/lib/atoms/chart-bar/chart-bar.theme.scss';
@import '../../src/lib/atoms/chart-line/chart-line.theme.scss';
@import '../../src/lib/atoms/line-chart/line-chart.theme.scss';
// @import '../../src/lib/atoms/line-chart/line-chart.theme.scss';
@import '../../src/lib/atoms/search-bar/search-bar.theme.scss';
@import '../../src/lib/atoms/toggle-switch/toggle-switch.theme.scss';
@import '../../src/lib/atoms/guage/guage.theme.scss';
@import '../../src/lib/atoms/rounded-gauge/rounde-gauge.theme.scss';
@import '../../src/lib/atoms/icon/icon.theme.scss';
@import '../../src/lib/atoms/icon-duotone/icon-duotone.theme.scss';
@import '../../src/lib/atoms/button-toggle-icon/button-toggle-icon.theme.scss';
@import '../../src/lib/atoms/copyable-text/copyable-text.theme.scss';
@import '../../src/lib/atoms/chart-pie/chart-pie.theme.scss';
@import '../../src/lib/atoms/chip/chip.theme.scss';
@import '../../src/lib/atoms/radar-chart/radar-chart.theme.scss';
@import '../../src/lib/atoms/legend-text/legend-text.theme.scss';
@import '../../../../libs/ui/src/lib/atoms/loader-bars/loader-bars.theme.scss';
@import '../../src/lib/atoms/heat-map/heat-map.theme.scss';
@import '../../src/lib/atoms/heat-map2/heat-map2.component.theme.scss';

//Molucules
@import '../../src/lib/molecules/multiline-text-1/multiline-text-1.theme.scss';
@import '../../src/lib/molecules/multiline-text-2/multiline-text-2.theme.scss';
@import '../../src/lib/molecules/multiline-text-3/multiline-text-3.theme.scss';
@import '../../src/lib/molecules/card-header-3/card-header-3.theme.scss';
@import '../../src/lib/molecules/card-header2/card-header2.theme.scss';
@import '../../src/lib/molecules/card-header1/card-header.theme.scss';
@import '../../src/lib/molecules/card-header4/card-header4.theme.scss';
@import '../../src/lib/molecules/tabs/tabs.theme.scss';
@import '../../src/lib/molecules/multiline-text-gauge/multiline-text-gauge.theme.scss';
@import '../../src/lib/molecules/muiltiline-rounded-gauge/multiline-rounded-gauge.theme.scss';
@import '../../src/lib/molecules/multiline-text-user/multiline-text-user.theme.scss';
@import '../../src/lib/molecules/tree/tree.theme.scss';
@import '../../src/lib/molecules/icon-badge/icon-badge.theme.scss';
@import '../../src/lib/molecules/timeline/timeline.theme.scss';
@import '../../src/lib/molecules/dynamic-form/dynamic-form.theme.scss';
@import '../../src/lib/molecules/timemap-data-card/timemap-data-card.theme.scss';
@import '../../src/lib/molecules/recommendation-card1/recommendation-card1.theme.scss';
@import '../../src/lib/molecules/map-header/map-header.theme.scss';
@import '../../src/lib/molecules/circular-guage-chart/circular-guage-chart.theme.scss';
@import '../../src/lib/molecules/show-more-dialog/show-more-dialog.theme.scss';

//Organisms
@import '../../src/lib/organisms/menubar/menubar.theme.scss';
@import '../../src/lib/organisms/tree-search/tree-search.theme.scss';
@import '../../src/lib/organisms/work-log/work-log.theme.scss';
@import '../../src/lib/organisms/header/header.theme.scss';
@import '../../src/lib/organisms/alarm-data1/alarm-data1.theme.scss';
@import '../../src/lib/organisms/alarm-correlation-card1/alarm-correlation-card1.theme.scss';
@import '../../src/lib/organisms/correlation-pattern/correlation-pattern.theme.scss';
@import '../../src/lib/organisms/alarm-detail-header/alarm-detail-header.theme.scss';
@import '../../src/lib/organisms/ticket-card1/ticket-card1.theme.scss';
@import '../../src/lib/organisms/ticket-distribution/ticket-distribution.theme.scss';
@import '../../src/lib/organisms/ticket-detail-card1/ticket-detail-card1.theme.scss';
@import '../../src/lib/organisms/ticket-details-card2/ticket-details-card2.theme.scss';
@import '../../src/lib/organisms/card-table/card-table.theme.scss';
@import '../../src/lib/organisms/dynamic-filter/dynamic-filter.theme.scss';
@import '../../src/lib/organisms/alarm-detail-card1/alarm-detail-card1.theme.scss';
@import '../../src/lib/organisms/ticket-distribution/ticket-distribution.theme.scss';
@import '../../src/lib/organisms/chart-container/chart-container.theme.scss';
@import '../../src/lib/organisms/network-elt-info-card1/network-elt-info-card1.theme.scss';
@import '../../src/lib/organisms/card-table-filter/card-table-filter.theme.scss';
@import '../../src/lib/organisms/card-dynamic-form/card-dynamic-form.theme.scss';
@import '../../src/lib/organisms/timemap/timemap.theme.scss';
@import '../../src/lib/organisms/all-topologies-filter/all-topologies-filter.theme.scss';
@import '../../src/lib/organisms/kpi-overview-card1/kpi-overview-card1-theme.scss';
@import '../../src/lib/organisms/kpi-cell-performance-card1/kpi-cell-performance-card1.theme.scss';
@import '../../src/lib/organisms/cell-health-prediction-card/cell-health-prediction-card.theme.scss';
@import '../../src/lib/organisms/throughput-comparision/throughput-comparision.theme.scss';
@import '../../src/lib/organisms/kpi-radar-chart/kpi-radar-chart.theme.scss';
@import '../../src/lib/organisms/kpi-line-chart/kpi-line-chart.theme.scss';
@import '../../src/lib/organisms/map-dialog/map-dialog.theme.scss';
@import '../../src/lib/organisms/no-data-found/no-data-found.theme.scss';
@import '../../src/lib/organisms/kpi-chart-container/kpi-chart-container.theme.scss';

// @import '../../src/lib/count-card/count-card.theme.scss';
// @import '../../src/lib/button-toggle/button-toggle.theme.scss';
// @import '../../src/lib/card4/card4.theme.scss';
// @import '../../src/lib/card5/card5.theme.scss';
// @import '../../src/lib/chart-card1/chart-card1.theme.scss';
// @import '../../src/lib/widget/widget.theme.scss';
// @import '../../src/lib/work-log/work-log.theme.scss';
// @import '../../src/lib/card6/card6.theme.scss';
// @import '../../src/lib/user-avatar/user-avatar.theme.scss';
// @import '../../src/lib/multi-line-text/multi-line.theme.scss';

// Define a mixin for easier access
@mixin components-theme($theme) {
  // Library components

  //POC
  @include card1-theme($theme);
  @include card2-theme($theme);
  @include feature-test-theme($theme);
  @include recommend-plan-theme($theme);
  @include choose-plan-theme($theme);
  @include map2-theme($theme);
  @include navigation-theme($theme);

  //Molecules
  @include multiline-text-1-theme($theme);
  @include multiline-text2-theme($theme);
  @include multiline-text-3-theme($theme);
  @include card-header3-theme($theme);
  @include card-header1-theme($theme);
  @include tabs-theme($theme);
  @include multiline-text-gauge-theme($theme);
  @include multiline-rounded-gauge-theme($theme);
  @include multiline-text-user-theme($theme);
  @include tree-theme($theme);
  @include icon-badge-theme($theme);
  @include card-header2-theme($theme);
  @include card-header4-theme($theme);
  @include dynamic-form-theme($theme);
  @include timemap-data-card-theme($theme);
  @include recommendation-card1-theme($theme);
  @include map-header-theme($theme);
  @include circular-guage-chart-theme($theme);
  @include show-more-dialog-theme($theme);

  // Organism
  @include timeline-theme($theme);
  @include menubar-theme($theme);
  @include work-log-theme($theme);
  @include tree-search-theme($theme);
  @include alarm-header-theme($theme);
  @include alarm-data1-theme($theme);
  @include alarm-correlation-card1-theme($theme);
  @include correlation-pattern-theme($theme);
  @include recommend-plan-theme($theme);
  @include choose-plan-theme($theme);
  @include navigation-theme($theme);
  @include data-table-theme($theme);
  @include ticket-card1-theme($theme);
  @include ticket-distribution-theme($theme);
  @include ticket-detail-card1-theme($theme);
  @include ticket-detail-card2-theme($theme);
  @include card-table-theme($theme);
  @include dynamic-filter-theme($theme);
  @include alarm-detail-card1-theme($theme);
  @include ticket-distribution-theme($theme);
  @include chart-container-theme($theme);
  @include network-element-info-card1-theme($theme);
  @include card-table-filter-theme($theme);
  @include card-dynamic-form-theme($theme);
  @include timemap-theme($theme);
  @include all-topologies-filter-theme($theme);
  @include kpi-overview-card1-theme($theme);
  @include kpi-cell-performance-card1-theme($theme);
  @include cell-health-prediction-card-theme($theme);
  @include kpi-radar-chart-theme($theme);
  @include kpi-line-chart-theme($theme);
  @include map-dialog-theme($theme);
  @include no-data-found-theme($theme);
  @include kpi-chart-container-theme($theme);

  // Atoms
  @include icon-theme($theme);
  @include icon-duotone-theme($theme);
  @include user-avatar-theme($theme);
  @include toggle-switch-theme($theme);
  @include button-toggle-icon-theme($theme);
  @include guage-theme($theme);
  @include rounded-guage-theme($theme);
  @include chip-theme($theme);
  @include copyable-text-theme($theme);
  @include chart-pie-theme($theme);
  @include chart-bar-theme($theme);
  @include chart-line-theme($theme);
  @include line-chart-theme($theme);
  @include search-theme($theme);
  @include toggle-switch-theme($theme);
  @include guage-theme($theme);
  @include icon-theme($theme);
  @include icon-duotone-theme($theme);
  @include copyable-text-theme($theme);
  @include chip-theme($theme);
  @include radar-chart-theme($theme);
  @include legend-text-theme($theme);
  @include loader-bars-theme($theme);
  @include data-table-theme($theme);
  @include heat-map-theme($theme);
  @include throuput-comparision-theme($theme);
  @include heat-map2-theme($theme);

  // @include widget-theme($theme);
  // @include work-log-theme($theme);
  // @include card6-theme($theme);
  // @include user-avatar-theme($theme);
  // @include card4-theme($theme);
  // @include card5-theme($theme);
  // @include multi-line-theme($theme);
  // @include chart-card1-theme($theme);
  // @include button-toggle-theme($theme);

  // @include count-card-theme($theme);
}

// -----------------------------------------------------------------------------------------------------
// @ Define the default theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$default-primary-palette: mat-palette($iro-primary);
$default-accent-palette: mat-palette($iro-accent);
$default-warn-palette: mat-palette($iro-warn);

// Create the Material theme object
$theme: mat-light-theme-generator(
  $default-primary-palette,
  $default-accent-palette,
  $default-warn-palette
);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-default {
  // // Uncomment this to log theme map
  // @mixin debug-map($map) {
  //     @at-root {
  //         @debug-map {
  //             __toString__: inspect($map);
  //             __length__: length($map);
  //             __depth__: depth($map);
  //             __keys__: map-keys($map);
  //             __properties__ {
  //                 @each $key, $value in $map {
  //                     #{'(' + type-of($value) + ') ' + $key}: inspect($value);
  //                 }
  //             }
  //         }
  //     }
  // }
  // @include debug-map($theme);

  // Create an Angular Material theme from the $theme map
  @include angular-material-theme($theme);

  // Apply the theme to the user components
  @include components-theme($theme);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a default dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$default-primary-palette: mat-palette($iro-primary);
$default-accent-palette: mat-palette($iro-accent);
$default-warn-palette: mat-palette($iro-warn);

// Create the Material theme object
$theme: mat-dark-theme-generator(
  $default-primary-palette,
  $default-accent-palette,
  $default-warn-palette
);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-default-dark {
  // Uncomment this to log theme map
  // @mixin debug-map($map) {
  //     @at-root {
  //         @debug-map {
  //             __toString__: inspect($map);
  //             __length__: length($map);
  //             __depth__: depth($map);
  //             __keys__: map-keys($map);
  //             __properties__ {
  //                 @each $key, $value in $map {
  //                     #{'(' + type-of($value) + ') ' + $key}: inspect($value);
  //                 }
  //             }
  //         }
  //     }
  // }
  // @include debug-map($theme);

  // Create an Angular Material theme from the $theme map
  @include angular-material-theme($theme);

  // Apply the theme to the user components
  @include components-theme($theme);
}

/*
// -----------------------------------------------------------------------------------------------------
// @ Define a yellow light theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$yellow-light-theme-primary-palette: mat-palette($mat-yellow, 600, 400, 700);
$yellow-light-theme-accent-palette: mat-palette($mat-yellow, 600, 400, 700);
$yellow-light-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$yellow-light-theme: mat-light-theme-generator($yellow-light-theme-primary-palette, $yellow-light-theme-accent-palette, $yellow-light-theme-warn-palette);

// Add ".theme-yellow-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-yellow-light {

    // Generate the Angular Material theme
    @include angular-material-theme($yellow-light-theme);

    // Apply the theme to the user components
    @include components-theme($yellow-light-theme);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a blue-gray dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$blue-gray-dark-theme-primary-palette: mat-palette($mat-blue);
$blue-gray-dark-theme-accent-palette: mat-palette($mat-blue-gray);
$blue-gray-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$blue-gray-dark-theme: mat-dark-theme-generator($blue-gray-dark-theme-primary-palette, $blue-gray-dark-theme-accent-palette, $blue-gray-dark-theme-warn-palette);

// Add ".theme-blue-gray-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-gray-dark {

    // Generate the Angular Material theme
    @include angular-material-theme($blue-gray-dark-theme);

    // Apply the theme to the user components
    @include components-theme($blue-gray-dark-theme);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a pink dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$pink-dark-theme-primary-palette: mat-palette($mat-pink);
$pink-dark-theme-accent-palette: mat-palette($mat-pink);
$pink-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$pink-dark-theme: mat-dark-theme-generator($pink-dark-theme-primary-palette, $pink-dark-theme-accent-palette, $pink-dark-theme-warn-palette);

// Add ".theme-pink-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-pink-dark {

    // Generate the Angular Material theme
    @include angular-material-theme($pink-dark-theme);

    // Apply the theme to the user components
    @include components-theme($pink-dark-theme);
}
*/
