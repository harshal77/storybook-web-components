(globalThis.webpackChunktelco_web_components=globalThis.webpackChunktelco_web_components||[]).push([[179],{"./$_lazy_route_resources lazy recursive":module=>{function webpackEmptyAsyncContext(req){return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=()=>[],webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./$_lazy_route_resources lazy recursive",module.exports=webpackEmptyAsyncContext},"./src/stories/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/stories/assets/code-brackets.svg"),_assets_colors_svg__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/stories/assets/colors.svg"),_assets_comments_svg__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/assets/comments.svg"),_assets_direction_svg__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/stories/assets/direction.svg"),_assets_flow_svg__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/stories/assets/flow.svg"),_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/stories/assets/plugin.svg"),_assets_repo_svg__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/stories/assets/repo.svg"),_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/stories/assets/stackalt.svg"),_excluded=["components"];function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Example/Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("style",null,"\n  .subheading {\n    --mediumdark: '#999999';\n    font-weight: 900;\n    font-size: 13px;\n    color: #999;\n    letter-spacing: 6px;\n    line-height: 24px;\n    text-transform: uppercase;\n    margin-bottom: 12px;\n    margin-top: 40px;\n  }\n\n  .link-list {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    row-gap: 10px;\n  }\n\n  @media (min-width: 620px) {\n    .link-list {\n      row-gap: 20px;\n      column-gap: 20px;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media all and (-ms-high-contrast:none) {\n  .link-list {\n      display: -ms-grid;\n      -ms-grid-columns: 1fr 1fr;\n      -ms-grid-rows: 1fr 1fr;\n    }\n  }\n\n  .link-item {\n    display: block;\n    padding: 20px 30px 20px 15px;\n    border: 1px solid #00000010;\n    border-radius: 5px;\n    transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n    color: #333333;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .link-item:hover {\n    border-color: #1EA7FD50;\n    transform: translate3d(0, -3px, 0);\n    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n  }\n\n  .link-item:active {\n    border-color: #1EA7FD;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .link-item strong {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 2px;\n  }\n  \n  .link-item img {\n    height: 40px;\n    width: 40px;\n    margin-right: 15px;\n    flex: none;\n  }\n\n  .link-item span {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  .tip {\n    display: inline-block;\n    border-radius: 1em;\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 700;\n    background: #E7FDD8;\n    color: #66BF3C;\n    padding: 4px 12px;\n    margin-right: 10px;\n    vertical-align: top;\n  }\n\n  .tip-wrapper {\n    font-size: 13px;\n    line-height: 20px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n\n  .tip-wrapper code {\n    font-size: 12px;\n    display: inline-block;\n  }\n\n  \n"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",{id:"welcome-to-storybook"},"Welcome to Storybook"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Storybook helps you build UI components in isolation from your app's business logic, data, and context.\nThat makes it easy to develop hard-to-reach states. Save these UI states as ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",{parentName:"p"},"stories")," to revisit during development, testing, or QA."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Browse example stories now by navigating to them in the sidebar.\nView their code in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"src/stories")," directory to learn how they work.\nWe recommend building UIs with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{parentName:"p",href:"https://componentdriven.org",target:"_blank",rel:"nofollow noopener noreferrer"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",{parentName:"a"},"component-driven"))," process starting with atomic components and ending with pages."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"subheading"},"Configure"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"link-list"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/addons/addon-types",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_8__,alt:"plugin"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Presets for popular tools"),"Easy setup for TypeScript, SCSS and more.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/configure/webpack",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_10__,alt:"Build"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Build configuration"),"How to customize webpack and Babel")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/configure/styling-and-css",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_colors_svg__WEBPACK_IMPORTED_MODULE_4__,alt:"colors"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Styling"),"How to load and configure CSS libraries")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/get-started/setup#configure-storybook-for-your-stack",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_flow_svg__WEBPACK_IMPORTED_MODULE_7__,alt:"flow"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Data"),"Providers and mocking for data libraries"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"subheading"},"Learn"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"link-list"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_repo_svg__WEBPACK_IMPORTED_MODULE_9__,alt:"repo"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Storybook documentation"),"Configure, customize, and extend")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/tutorials/",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_direction_svg__WEBPACK_IMPORTED_MODULE_6__,alt:"direction"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"In-depth guides"),"Best practices from leading teams")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://github.com/storybookjs/storybook",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_3__,alt:"code"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"GitHub project"),"View the source and add issues")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://discord.gg/storybook",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_comments_svg__WEBPACK_IMPORTED_MODULE_5__,alt:"comments"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Discord chat"),"Chat with maintainers and the community"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"tip-wrapper"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",{className:"tip"},"Tip"),"Edit the Markdown in"," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",null,"src/stories/Introduction.stories.mdx")))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Example/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{parameters:()=>parameters});var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"IMap","id":"interface-IMap-053f7dbad5c9e1e3e05e6baf1d1f58e2cf126f2c911f1d2a1d90e0e937a207dd9e5e87866b4422bed62ef25f111d3f84e042435fe3ce1c1dad0c716e61f56e51","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AfterViewInit, Component, EventEmitter, HostListener, Input, NgZone, Output, ViewChild } from \'@angular/core\';\\nimport mapIcons from \'./map-icons\';\\ndeclare let OverlappingMarkerSpiderfier: any;\\ndeclare let MarkerClusterer: any;\\n\\nexport interface IMap {\\n\\tconfig?: IMapConfig;\\n\\tmarkers: IMapMarkers;\\n}\\n\\nexport interface IMapConfig {\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n\\ticonColor?: string;\\n\\ticonAnchorX?: number;\\n\\ticonAnchorY?: number;\\n\\tzoomLevelToChangeIcon?: number;\\n\\tcenterOnMapUpdate?: boolean;\\n\\tcenterOnBounds?: boolean;\\n\\tshowMesh?: boolean;\\n\\tbounds?: IMapBound;\\n\\tfilterMarkersOutsideBounds?: boolean;\\n}\\n\\nexport interface IMapBound {\\n\\tstart: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n\\tend: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n}\\n\\nexport type IMapMarkers = Array<IMapMarker>;\\nexport interface IMapMarker {\\n\\tid: string;\\n\\tlat: string;\\n\\tlng: string;\\n\\ttitle: string;\\n\\tlabel: string;\\n\\tlink: string;\\n\\tmesh?: Array<string>;\\n\\tcolor?: string;\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n}\\n\\n@Component({\\n\\tselector: \'app-telco-maps\',\\n\\ttemplateUrl: \'./telco-maps.component.html\',\\n\\tstyleUrls: [\'./telco-maps.component.scss\'],\\n})\\nexport class TelcoMapsComponent implements AfterViewInit {\\n\\tmap: any;\\n\\toms: any;\\n\\tiw: any;\\n\\tbounds: any;\\n\\tzoomLevel = 1;\\n\\t_markers!: IMapMarkers;\\n\\tmarkersHash = {};\\n\\tmesh: any;\\n\\t_mapConfig: IMapConfig;\\n\\t_mapDefaultConfig: IMapConfig = {\\n\\t\\ticonDefault: \'SITE\',\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\n\\t\\ticonColor: \'#E04B4B\',\\n\\t\\ticonAnchorX: 31,\\n\\t\\ticonAnchorY: -33,\\n\\t\\tzoomLevelToChangeIcon: 14,\\n\\t\\tcenterOnMapUpdate: true,\\n\\t\\tcenterOnBounds: true,\\n\\t\\tshowMesh: true,\\n\\t\\tfilterMarkersOutsideBounds: false,\\n\\t};\\n\\tstaticMarker: any;\\n\\tviewInit = false;\\n\\tboundsBeforeSpiderfy: any;\\n\\tpreSpiderfyTimerref: any;\\n\\tspiderfyTimerref: any;\\n\\tunspiderfyTimerref: any;\\n\\n\\tneId = \'ne_135\';\\n\\tticketid = \'ticket-123\';\\n\\tdata2: any = [\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-123\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t];\\n\\n\\t@ViewChild(\'map\') mapElement;\\n\\t@HostListener(\'window:resize\', [\'$event\'])\\n\\tonResize() {\\n\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t}\\n\\n\\t@Input() set config(value: IMapConfig) {\\n\\t\\tthis._mapConfig = { ...this._mapDefaultConfig, ...value };\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\t@Input() set markers(value: IMapMarkers) {\\n\\t\\tlet filteredMarkers = value;\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\tfilteredMarkers = this.filterMarkers(value, this._mapConfig.bounds);\\n\\t\\t}\\n\\t\\tthis._markers = filteredMarkers;\\n\\t\\t// console.log(this._markers);\\n\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\n\\t@Output() showDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\t@Output() hideDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\tconstructor(private zone: NgZone) {}\\n\\n\\tngAfterViewInit() {\\n\\t\\tif (!(this._markers && this._markers.length > 0)) {\\n\\t\\t\\tthis.oneTimeSetup();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.oneTimeSetup();\\n\\n\\t\\tthis.resetMarkers();\\n\\n\\t\\tthis.viewInit = true;\\n\\t}\\n\\n\\toneTimeSetup() {\\n\\t\\t// Load map\\n\\t\\tconst mapProperties = {\\n\\t\\t\\tcenter: new google.maps.LatLng(0, 0),\\n\\t\\t\\tzoom: 10,\\n\\t\\t\\tmapTypeId: google.maps.MapTypeId.ROADMAP,\\n\\t\\t\\tfullscreenControl: false,\\n\\t\\t\\t// restriction: {\\n\\t\\t\\t//   latLngBounds: latLngBounds,\\n\\t\\t\\t//   strictBounds: false,\\n\\t\\t\\t// },\\n\\t\\t};\\n\\n\\t\\tconst latLngBounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds) {\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\n\\t\\t\\tmapProperties[\'restriction\'] = {\\n\\t\\t\\t\\tlatLngBounds: latLngBounds,\\n\\t\\t\\t\\tstrictBounds: false,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// HTML canvas keeps misfiring ApplicationRef.tick()\\n\\t\\t// To prevent that, initialize canvas outside angular\\n\\t\\tthis.zone.runOutsideAngular(() => {\\n\\t\\t\\tthis.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\\n\\t\\t});\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.map.fitBounds(latLngBounds);\\n\\t\\t}\\n\\n\\t\\t// Add markers array\\n\\t\\tthis.map.markers = [];\\n\\n\\t\\t// Add marker listener array\\n\\t\\tthis.map.markerListeners = [];\\n\\n\\t\\t// Add mesh array\\n\\t\\tthis.map.mesh = [];\\n\\n\\t\\t// Add cluster object\\n\\t\\tthis.map.markerCluster = null;\\n\\n\\t\\t// // Create spiderfier instance\\n\\t\\t// const options = {\\n\\t\\t//   keepSpiderfied: true, // will keep spider chart open after clicking on a marker to show Infowindow\\n\\t\\t//   markersWontMove: true, // we promise not to move any markers, allowing optimizations\\n\\t\\t//   markersWontHide: true, // we promise not to change visibility of any markers, allowing optimizations\\n\\t\\t//   basicFormatEvents: true, // allow the library to skip calculating advanced formatting information\\n\\t\\t//   minZoomLevel: this._mapConfig.zoomLevelToChangeIcon, // minimum zoom level at which cluster will spiderfy\\n\\t\\t// };\\n\\t\\t// this.oms = new OverlappingMarkerSpiderfier(this.map, options);\\n\\n\\t\\t// // Add info window\\n\\t\\t// this.iw = new google.maps.InfoWindow();\\n\\n\\t\\t// Attach zoom change listener\\n\\t\\tthis.listenToZoomChange(this.map);\\n\\t}\\n\\n\\tresetMarkers() {\\n\\t\\t// If markers already exist, remove them before plotting new ones\\n\\t\\tif (this.map && this.map.markers && this.map.markers.length > 0) {\\n\\t\\t\\t// this.oms.removeAllMarkers();\\n\\t\\t\\tthis.map.markerCluster.clearMarkers();\\n\\n\\t\\t\\tthis.map.mesh.forEach((e: any) => {\\n\\t\\t\\t\\tthis.removeLine(e);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markerListeners.forEach((e: any) => {\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseover);\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseout);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markers = [];\\n\\t\\t\\tthis.map.markerListeners = [];\\n\\t\\t\\tthis.map.mesh = [];\\n\\t\\t\\tthis.markersHash = {};\\n\\t\\t}\\n\\n\\t\\t// If exists, add markers\\n\\t\\tif (this._markers && this._markers.length > 0) {\\n\\t\\t\\t// Filter markers on map bounds\\n\\t\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\t\\tthis._markers = this.filterMarkers(this._markers, this._mapConfig.bounds);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tthis.addMarker(e, this.map, this.oms, this.iw, this.map.markers);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Create marker cluster\\n\\t\\tconst mcOptions = {\\n\\t\\t\\tstyles: [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t],\\n\\t\\t\\t// styles: [\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 53,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m1.png\',\\n\\t\\t\\t//     width: 53,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 56,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m2.png\',\\n\\t\\t\\t//     width: 56,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 66,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m3.png\',\\n\\t\\t\\t//     width: 66,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 78,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m4.png\',\\n\\t\\t\\t//     width: 78,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 90,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m5.png\',\\n\\t\\t\\t//     width: 90,\\n\\t\\t\\t//   },\\n\\t\\t\\t// ],\\n\\t\\t};\\n\\t\\tthis.map.markerCluster = new MarkerClusterer(this.map, this.map.markers, mcOptions);\\n\\n\\t\\t// If mesh enabled, add mesh\\n\\t\\tif (this._mapConfig.showMesh) {\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tif (e.mesh && e.mesh.length > 0) {\\n\\t\\t\\t\\t\\te.mesh.forEach((m) => {\\n\\t\\t\\t\\t\\t\\tthis.addLine(this.map, e.id, m);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Center\\n\\t\\tif (this._mapConfig.centerOnMapUpdate) {\\n\\t\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t\\t}\\n\\t\\t// else {\\n\\t\\t//   // fit to bounds\\n\\t\\t//   this.map.fitBounds(this.bounds);\\n\\t\\t// }\\n\\t}\\n\\n\\taddMarker(marker: any, map: any, oms = this.oms, iw: google.maps.InfoWindow = this.iw, markers: Array<google.maps.Marker>) {\\n\\t\\tconst mapMarker = this.getMapMarker(map, marker);\\n\\n\\t\\tmarkers.push(mapMarker);\\n\\n\\t\\t// Attach marker hover listener\\n\\t\\tthis.listenToMarkerHover(mapMarker);\\n\\n\\t\\tthis.markersHash[marker.id] = { lat: marker.lat, lng: marker.lng };\\n\\n\\t\\t// oms.trackMarker(mapMarker);\\n\\n\\t\\t// oms.addListener(\'click\', function (mapMarker, event: Event) {\\n\\t\\t//   iw.setContent(mapMarker.description);\\n\\t\\t//   iw.open(map, mapMarker);\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'pre-spiderfy\', (marker: Element) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, [marker], \'pre-spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'spiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'unspiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'unspiderfy\');\\n\\t\\t// });\\n\\t}\\n\\n\\taddLine(map: any, sourceId: string, destinationId: string) {\\n\\t\\tconst sMarker = this.markersHash[sourceId];\\n\\t\\tconst dMarker = this.markersHash[destinationId];\\n\\t\\tif (!sMarker || !dMarker) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst source = new google.maps.LatLng(sMarker.lat, sMarker.lng);\\n\\t\\tconst destination = new google.maps.LatLng(dMarker.lat, dMarker.lng);\\n\\n\\t\\tconst line = new google.maps.Polyline({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tpath: [source, destination],\\n\\t\\t\\tstrokeColor: \'#444\',\\n\\t\\t\\tstrokeWeight: 1.5,\\n\\t\\t\\tzIndex: +google.maps.Marker.MAX_ZINDEX + 1,\\n\\t\\t});\\n\\n\\t\\tmap.mesh.push(line);\\n\\t}\\n\\n\\tremoveLine(line) {\\n\\t\\tline.setMap(null);\\n\\t}\\n\\n\\tgetMapMarker(map, marker) {\\n\\t\\tconst locationAddressLatLng = new google.maps.LatLng(marker.lat, marker.lng);\\n\\t\\t// const infoContent =\\n\\t\\t//   \'<div class=\\"locationInfo\\">\' +\\n\\t\\t//   \'<div><strong>\' +\\n\\t\\t//   marker.title +\\n\\t\\t//   \'</strong></div>\' +\\n\\t\\t//   \'<div>\' +\\n\\t\\t//   marker.label +\\n\\t\\t//   \'</div>\' +\\n\\t\\t//   \'<a href=\\"\' +\\n\\t\\t//   marker.link +\\n\\t\\t//   \'\\">Se profil</a></div>\';\\n\\n\\t\\t// const infoContent = this.getinfoContent();\\n\\n\\t\\tconst iconDefault = this.getMapMarkerIcon(marker, marker.iconDefault ? marker.iconDefault : this._mapConfig.iconDefault);\\n\\t\\tconst iconZoomed = this.getMapMarkerIcon(marker, marker.iconZoomed ? marker.iconZoomed : this._mapConfig.iconZoomed);\\n\\t\\tconst iconSpiderfied = this.getMapMarkerIcon(marker, marker.iconSpiderfied ? marker.iconSpiderfied : this._mapConfig.iconSpiderfied);\\n\\n\\t\\tconst mapMarker = new google.maps.Marker({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tposition: locationAddressLatLng,\\n\\t\\t\\ticon: map.getZoom() < this._mapConfig.zoomLevelToChangeIcon ? iconDefault : iconZoomed,\\n\\t\\t});\\n\\t\\t// mapMarker.set(\'description\', infoContent);\\n\\t\\tmapMarker.set(\'iconDefault\', iconDefault);\\n\\t\\tmapMarker.set(\'iconZoomed\', iconZoomed);\\n\\t\\tmapMarker.set(\'iconSpiderfied\', iconSpiderfied);\\n\\n\\t\\treturn mapMarker;\\n\\t}\\n\\n\\tgetinfoContent() {\\n\\t\\tconst htmlStr =\\n\\t\\t\\t`<div id=\\"map-content-box\\">\\n      <div class=\\"header-wrapper\\">\\n        <div class=\\"left-box\\">\\n          <div class=\\"line1\\">\\n            <p id=\\"pid\\">` +\\n\\t\\t\\tthis.neId +\\n\\t\\t\\t`</p>\\n      </div>\\n      <div class=\\"line2\\">\\n        <p id=\\"pid\\" class=\\" opacity50 margin10\\"> Alarms:` +\\n\\t\\t\\t300 +\\n\\t\\t\\t`</p>\\n      <p id=\\"pid\\" class=\\"opacity50\\">Ticket:` +\\n\\t\\t\\t200 +\\n\\t\\t\\t`</p>\\n      </div>\\n    </div>\\n    <div class=\\"right-box\\">\\n      <div class=\\"icon-box margin10 \\"></div>\\n      <div class=\\"icon-box\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\"body-wrapper\\">` +\\n\\t\\t\\tthis.generateLayout() +\\n\\t\\t\\t`  </div>\\n      </div>\\n      `;\\n\\n\\t\\treturn htmlStr;\\n\\t}\\n\\n\\tgenerateLayout() {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < this.data2.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t` <div class=\\"row\\">\\n        <div class=\\"body-row\\">\\n          <p id=\\"pid\\" class=\\"text\\">` +\\n\\t\\t\\t\\tthis.data2[i].title +\\n\\t\\t\\t\\t`</p>\\n        </div>\\n        <div class=\\"right-box\\">` +\\n\\t\\t\\t\\tthis.getActions(this.data2[i].actions) +\\n\\t\\t\\t\\t`</div>\\n        </div>`;\\n\\t\\t}\\n\\t\\treturn str;\\n\\t}\\n\\n\\tgetActions(data) {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < data.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t`<div class=\\"icon-box margin10\\">\\n        ` + `</div>`;\\n\\t\\t\\treturn str;\\n\\t\\t}\\n\\t}\\n\\n\\tgetMapMarkerIcon(marker: any, icon: any) {\\n\\t\\t// var iconDot = {\\n\\t\\t//   path: \'M-3,0a3,3 0 1,0 6,0a3,3 0 1,0 -6,0\',\\n\\t\\t//   fillColor: \'red\',\\n\\t\\t//   fillOpacity: 1,\\n\\t\\t//   strokeColor: \'transparent\',\\n\\t\\t//   anchor: new google.maps.Point(0, 0),\\n\\t\\t// };\\n\\n\\t\\treturn {\\n\\t\\t\\tpath: mapIcons.markers[icon.toUpperCase()],\\n\\t\\t\\tfillColor: marker.color ? marker.color : this._mapConfig.iconColor,\\n\\t\\t\\tfillOpacity: 1,\\n\\t\\t\\tstrokeColor: \'transparent\',\\n\\t\\t\\tanchor: new google.maps.Point(this._mapConfig.iconAnchorX, this._mapConfig.iconAnchorY),\\n\\t\\t\\tscale: 1,\\n\\t\\t};\\n\\t}\\n\\n\\t// removeMarker(marker) {\\n\\t//   this.oms.removeMarker(marker);\\n\\t// }\\n\\n\\t// removeAllMarkers() {\\n\\t//   this.oms.removeAllMarkers();\\n\\t// }\\n\\n\\tonSpiderfierEvent(map: any, markers: any, type: string) {\\n\\t\\tswitch (type) {\\n\\t\\t\\tcase \'pre-spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.preSpiderfyTimerref) return;\\n\\t\\t\\t\\tthis.preSpiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.preSpiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Delete static marker if already exists\\n\\t\\t\\t\\t// (Happens when you click on a marker when another\\n\\t\\t\\t\\t// marker is already spiderfied)\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.staticMarker = new google.maps.Marker({\\n\\t\\t\\t\\t\\tmap: map,\\n\\t\\t\\t\\t\\tposition: new google.maps.LatLng(markers[0].position.lat(), markers[0].position.lng()),\\n\\t\\t\\t\\t\\ticon: markers[0].iconZoomed,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.spiderfyTimerref) return;\\n\\t\\t\\t\\tthis.spiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.spiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tmarkers.forEach((e: any) => {\\n\\t\\t\\t\\t\\te.setIcon(e.iconSpiderfied);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.boundsBeforeSpiderfy = this.bounds;\\n\\t\\t\\t\\t// this.centerMap(map, markers);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'unspiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.unspiderfyTimerref) return;\\n\\t\\t\\t\\tthis.unspiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.unspiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Remove static marker\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\tconst zoomed = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\t\\t\\t\\t\\tmarkers.forEach((e) => {\\n\\t\\t\\t\\t\\t\\te.setIcon(zoomed ? e.iconZoomed : e.iconDefault);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.bounds = this.boundsBeforeSpiderfy;\\n\\t\\t\\t\\t// map.fitBounds(this.bounds);\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\tcenterMap(map: any, markers: any) {\\n\\t\\tthis.bounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\t\\t} else {\\n\\t\\t\\tmarkers.forEach((marker: any) => {\\n\\t\\t\\t\\tconst latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());\\n\\t\\t\\t\\tthis.bounds.extend(latlng);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// fit to bounds\\n\\t\\tmap.fitBounds(this.bounds);\\n\\n\\t\\t// zoom out if greater than threshold\\n\\t\\tsetTimeout((_) => {\\n\\t\\t\\tmap.getZoom() <= this._mapConfig.zoomLevelToChangeIcon ? null : map.setZoom(this._mapConfig.zoomLevelToChangeIcon);\\n\\t\\t}, 1);\\n\\t}\\n\\n\\tlistenToZoomChange(map: any) {\\n\\t\\tgoogle.maps.event.addListener(map, \'zoom_changed\', () => {\\n\\t\\t\\tthis.updateMapIcon(map);\\n\\t\\t});\\n\\t}\\n\\n\\tlistenToMarkerHover(marker: any) {\\n\\t\\tconst mouseover = marker.addListener(\'mouseover\', (e: any) => {\\n\\t\\t\\tconst index = this._markers.findIndex((marker) => {\\n\\t\\t\\t\\treturn +marker.lat === +e.latLng.lat() && +marker.lng === +e.latLng.lng();\\n\\t\\t\\t});\\n\\t\\t\\t// console.log(\\n\\t\\t\\t//   \'Mousein\',\\n\\t\\t\\t//   e.latLng.lat(),\\n\\t\\t\\t//   e.latLng.lng(),\\n\\t\\t\\t//   this._markers,\\n\\t\\t\\t//   index,\\n\\t\\t\\t// );\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.showDialog.emit({\\n\\t\\t\\t\\t\\tmarker: this._markers[index],\\n\\t\\t\\t\\t\\tevent: e.domEvent,\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mouseout = marker.addListener(\'mouseout\', (e: any) => {\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.hideDialog.emit(e.domEvent);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tthis.map.markerListeners.push({\\n\\t\\t\\tmouseover,\\n\\t\\t\\tmouseout,\\n\\t\\t});\\n\\t}\\n\\n\\t// unlistenToMarkerClick(_markers) {\\n\\t//   google.maps.event.clearListeners(marker, \'click\', () => {\\n\\t//   });\\n\\t// }\\n\\n\\tupdateMapIcon(map) {\\n\\t\\tif (!this.map || !this.map.markers || !this.map.markers.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst prevZoomLevel = this.zoomLevel;\\n\\t\\tthis.zoomLevel = this.map.getZoom();\\n\\t\\tconst showZoomedIcon = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\n\\t\\t// Do not update icon if zoom threshold boundary is not crossed\\n\\t\\tif (\\n\\t\\t\\t(prevZoomLevel < this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon) ||\\n\\t\\t\\t(prevZoomLevel >= this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel >= this._mapConfig.zoomLevelToChangeIcon)\\n\\t\\t) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (showZoomedIcon) {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconZoomed);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconDefault);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tfilterMarkers(markers: any, bounds: any): any {\\n\\t\\tconst filteredMarkers = markers.filter((marker) => {\\n\\t\\t\\tconst latS = Math.min(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst latE = Math.max(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst lngS = Math.min(+bounds.start.lng, +bounds.end.lng);\\n\\t\\t\\tconst lngE = Math.max(+bounds.start.lng, +bounds.end.lng);\\n\\n\\t\\t\\tif (+marker.lat >= latS && +marker.lat <= latE && +marker.lng >= lngS && +marker.lng <= lngE) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn filteredMarkers;\\n\\t}\\n}\\n","properties":[{"name":"config","deprecated":false,"deprecationMessage":"","type":"IMapConfig","optional":true,"description":"","line":7},{"name":"markers","deprecated":false,"deprecationMessage":"","type":"IMapMarkers","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IMapBound","id":"interface-IMapBound-053f7dbad5c9e1e3e05e6baf1d1f58e2cf126f2c911f1d2a1d90e0e937a207dd9e5e87866b4422bed62ef25f111d3f84e042435fe3ce1c1dad0c716e61f56e51","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AfterViewInit, Component, EventEmitter, HostListener, Input, NgZone, Output, ViewChild } from \'@angular/core\';\\nimport mapIcons from \'./map-icons\';\\ndeclare let OverlappingMarkerSpiderfier: any;\\ndeclare let MarkerClusterer: any;\\n\\nexport interface IMap {\\n\\tconfig?: IMapConfig;\\n\\tmarkers: IMapMarkers;\\n}\\n\\nexport interface IMapConfig {\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n\\ticonColor?: string;\\n\\ticonAnchorX?: number;\\n\\ticonAnchorY?: number;\\n\\tzoomLevelToChangeIcon?: number;\\n\\tcenterOnMapUpdate?: boolean;\\n\\tcenterOnBounds?: boolean;\\n\\tshowMesh?: boolean;\\n\\tbounds?: IMapBound;\\n\\tfilterMarkersOutsideBounds?: boolean;\\n}\\n\\nexport interface IMapBound {\\n\\tstart: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n\\tend: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n}\\n\\nexport type IMapMarkers = Array<IMapMarker>;\\nexport interface IMapMarker {\\n\\tid: string;\\n\\tlat: string;\\n\\tlng: string;\\n\\ttitle: string;\\n\\tlabel: string;\\n\\tlink: string;\\n\\tmesh?: Array<string>;\\n\\tcolor?: string;\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n}\\n\\n@Component({\\n\\tselector: \'app-telco-maps\',\\n\\ttemplateUrl: \'./telco-maps.component.html\',\\n\\tstyleUrls: [\'./telco-maps.component.scss\'],\\n})\\nexport class TelcoMapsComponent implements AfterViewInit {\\n\\tmap: any;\\n\\toms: any;\\n\\tiw: any;\\n\\tbounds: any;\\n\\tzoomLevel = 1;\\n\\t_markers!: IMapMarkers;\\n\\tmarkersHash = {};\\n\\tmesh: any;\\n\\t_mapConfig: IMapConfig;\\n\\t_mapDefaultConfig: IMapConfig = {\\n\\t\\ticonDefault: \'SITE\',\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\n\\t\\ticonColor: \'#E04B4B\',\\n\\t\\ticonAnchorX: 31,\\n\\t\\ticonAnchorY: -33,\\n\\t\\tzoomLevelToChangeIcon: 14,\\n\\t\\tcenterOnMapUpdate: true,\\n\\t\\tcenterOnBounds: true,\\n\\t\\tshowMesh: true,\\n\\t\\tfilterMarkersOutsideBounds: false,\\n\\t};\\n\\tstaticMarker: any;\\n\\tviewInit = false;\\n\\tboundsBeforeSpiderfy: any;\\n\\tpreSpiderfyTimerref: any;\\n\\tspiderfyTimerref: any;\\n\\tunspiderfyTimerref: any;\\n\\n\\tneId = \'ne_135\';\\n\\tticketid = \'ticket-123\';\\n\\tdata2: any = [\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-123\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t];\\n\\n\\t@ViewChild(\'map\') mapElement;\\n\\t@HostListener(\'window:resize\', [\'$event\'])\\n\\tonResize() {\\n\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t}\\n\\n\\t@Input() set config(value: IMapConfig) {\\n\\t\\tthis._mapConfig = { ...this._mapDefaultConfig, ...value };\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\t@Input() set markers(value: IMapMarkers) {\\n\\t\\tlet filteredMarkers = value;\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\tfilteredMarkers = this.filterMarkers(value, this._mapConfig.bounds);\\n\\t\\t}\\n\\t\\tthis._markers = filteredMarkers;\\n\\t\\t// console.log(this._markers);\\n\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\n\\t@Output() showDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\t@Output() hideDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\tconstructor(private zone: NgZone) {}\\n\\n\\tngAfterViewInit() {\\n\\t\\tif (!(this._markers && this._markers.length > 0)) {\\n\\t\\t\\tthis.oneTimeSetup();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.oneTimeSetup();\\n\\n\\t\\tthis.resetMarkers();\\n\\n\\t\\tthis.viewInit = true;\\n\\t}\\n\\n\\toneTimeSetup() {\\n\\t\\t// Load map\\n\\t\\tconst mapProperties = {\\n\\t\\t\\tcenter: new google.maps.LatLng(0, 0),\\n\\t\\t\\tzoom: 10,\\n\\t\\t\\tmapTypeId: google.maps.MapTypeId.ROADMAP,\\n\\t\\t\\tfullscreenControl: false,\\n\\t\\t\\t// restriction: {\\n\\t\\t\\t//   latLngBounds: latLngBounds,\\n\\t\\t\\t//   strictBounds: false,\\n\\t\\t\\t// },\\n\\t\\t};\\n\\n\\t\\tconst latLngBounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds) {\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\n\\t\\t\\tmapProperties[\'restriction\'] = {\\n\\t\\t\\t\\tlatLngBounds: latLngBounds,\\n\\t\\t\\t\\tstrictBounds: false,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// HTML canvas keeps misfiring ApplicationRef.tick()\\n\\t\\t// To prevent that, initialize canvas outside angular\\n\\t\\tthis.zone.runOutsideAngular(() => {\\n\\t\\t\\tthis.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\\n\\t\\t});\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.map.fitBounds(latLngBounds);\\n\\t\\t}\\n\\n\\t\\t// Add markers array\\n\\t\\tthis.map.markers = [];\\n\\n\\t\\t// Add marker listener array\\n\\t\\tthis.map.markerListeners = [];\\n\\n\\t\\t// Add mesh array\\n\\t\\tthis.map.mesh = [];\\n\\n\\t\\t// Add cluster object\\n\\t\\tthis.map.markerCluster = null;\\n\\n\\t\\t// // Create spiderfier instance\\n\\t\\t// const options = {\\n\\t\\t//   keepSpiderfied: true, // will keep spider chart open after clicking on a marker to show Infowindow\\n\\t\\t//   markersWontMove: true, // we promise not to move any markers, allowing optimizations\\n\\t\\t//   markersWontHide: true, // we promise not to change visibility of any markers, allowing optimizations\\n\\t\\t//   basicFormatEvents: true, // allow the library to skip calculating advanced formatting information\\n\\t\\t//   minZoomLevel: this._mapConfig.zoomLevelToChangeIcon, // minimum zoom level at which cluster will spiderfy\\n\\t\\t// };\\n\\t\\t// this.oms = new OverlappingMarkerSpiderfier(this.map, options);\\n\\n\\t\\t// // Add info window\\n\\t\\t// this.iw = new google.maps.InfoWindow();\\n\\n\\t\\t// Attach zoom change listener\\n\\t\\tthis.listenToZoomChange(this.map);\\n\\t}\\n\\n\\tresetMarkers() {\\n\\t\\t// If markers already exist, remove them before plotting new ones\\n\\t\\tif (this.map && this.map.markers && this.map.markers.length > 0) {\\n\\t\\t\\t// this.oms.removeAllMarkers();\\n\\t\\t\\tthis.map.markerCluster.clearMarkers();\\n\\n\\t\\t\\tthis.map.mesh.forEach((e: any) => {\\n\\t\\t\\t\\tthis.removeLine(e);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markerListeners.forEach((e: any) => {\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseover);\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseout);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markers = [];\\n\\t\\t\\tthis.map.markerListeners = [];\\n\\t\\t\\tthis.map.mesh = [];\\n\\t\\t\\tthis.markersHash = {};\\n\\t\\t}\\n\\n\\t\\t// If exists, add markers\\n\\t\\tif (this._markers && this._markers.length > 0) {\\n\\t\\t\\t// Filter markers on map bounds\\n\\t\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\t\\tthis._markers = this.filterMarkers(this._markers, this._mapConfig.bounds);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tthis.addMarker(e, this.map, this.oms, this.iw, this.map.markers);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Create marker cluster\\n\\t\\tconst mcOptions = {\\n\\t\\t\\tstyles: [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t],\\n\\t\\t\\t// styles: [\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 53,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m1.png\',\\n\\t\\t\\t//     width: 53,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 56,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m2.png\',\\n\\t\\t\\t//     width: 56,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 66,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m3.png\',\\n\\t\\t\\t//     width: 66,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 78,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m4.png\',\\n\\t\\t\\t//     width: 78,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 90,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m5.png\',\\n\\t\\t\\t//     width: 90,\\n\\t\\t\\t//   },\\n\\t\\t\\t// ],\\n\\t\\t};\\n\\t\\tthis.map.markerCluster = new MarkerClusterer(this.map, this.map.markers, mcOptions);\\n\\n\\t\\t// If mesh enabled, add mesh\\n\\t\\tif (this._mapConfig.showMesh) {\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tif (e.mesh && e.mesh.length > 0) {\\n\\t\\t\\t\\t\\te.mesh.forEach((m) => {\\n\\t\\t\\t\\t\\t\\tthis.addLine(this.map, e.id, m);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Center\\n\\t\\tif (this._mapConfig.centerOnMapUpdate) {\\n\\t\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t\\t}\\n\\t\\t// else {\\n\\t\\t//   // fit to bounds\\n\\t\\t//   this.map.fitBounds(this.bounds);\\n\\t\\t// }\\n\\t}\\n\\n\\taddMarker(marker: any, map: any, oms = this.oms, iw: google.maps.InfoWindow = this.iw, markers: Array<google.maps.Marker>) {\\n\\t\\tconst mapMarker = this.getMapMarker(map, marker);\\n\\n\\t\\tmarkers.push(mapMarker);\\n\\n\\t\\t// Attach marker hover listener\\n\\t\\tthis.listenToMarkerHover(mapMarker);\\n\\n\\t\\tthis.markersHash[marker.id] = { lat: marker.lat, lng: marker.lng };\\n\\n\\t\\t// oms.trackMarker(mapMarker);\\n\\n\\t\\t// oms.addListener(\'click\', function (mapMarker, event: Event) {\\n\\t\\t//   iw.setContent(mapMarker.description);\\n\\t\\t//   iw.open(map, mapMarker);\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'pre-spiderfy\', (marker: Element) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, [marker], \'pre-spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'spiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'unspiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'unspiderfy\');\\n\\t\\t// });\\n\\t}\\n\\n\\taddLine(map: any, sourceId: string, destinationId: string) {\\n\\t\\tconst sMarker = this.markersHash[sourceId];\\n\\t\\tconst dMarker = this.markersHash[destinationId];\\n\\t\\tif (!sMarker || !dMarker) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst source = new google.maps.LatLng(sMarker.lat, sMarker.lng);\\n\\t\\tconst destination = new google.maps.LatLng(dMarker.lat, dMarker.lng);\\n\\n\\t\\tconst line = new google.maps.Polyline({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tpath: [source, destination],\\n\\t\\t\\tstrokeColor: \'#444\',\\n\\t\\t\\tstrokeWeight: 1.5,\\n\\t\\t\\tzIndex: +google.maps.Marker.MAX_ZINDEX + 1,\\n\\t\\t});\\n\\n\\t\\tmap.mesh.push(line);\\n\\t}\\n\\n\\tremoveLine(line) {\\n\\t\\tline.setMap(null);\\n\\t}\\n\\n\\tgetMapMarker(map, marker) {\\n\\t\\tconst locationAddressLatLng = new google.maps.LatLng(marker.lat, marker.lng);\\n\\t\\t// const infoContent =\\n\\t\\t//   \'<div class=\\"locationInfo\\">\' +\\n\\t\\t//   \'<div><strong>\' +\\n\\t\\t//   marker.title +\\n\\t\\t//   \'</strong></div>\' +\\n\\t\\t//   \'<div>\' +\\n\\t\\t//   marker.label +\\n\\t\\t//   \'</div>\' +\\n\\t\\t//   \'<a href=\\"\' +\\n\\t\\t//   marker.link +\\n\\t\\t//   \'\\">Se profil</a></div>\';\\n\\n\\t\\t// const infoContent = this.getinfoContent();\\n\\n\\t\\tconst iconDefault = this.getMapMarkerIcon(marker, marker.iconDefault ? marker.iconDefault : this._mapConfig.iconDefault);\\n\\t\\tconst iconZoomed = this.getMapMarkerIcon(marker, marker.iconZoomed ? marker.iconZoomed : this._mapConfig.iconZoomed);\\n\\t\\tconst iconSpiderfied = this.getMapMarkerIcon(marker, marker.iconSpiderfied ? marker.iconSpiderfied : this._mapConfig.iconSpiderfied);\\n\\n\\t\\tconst mapMarker = new google.maps.Marker({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tposition: locationAddressLatLng,\\n\\t\\t\\ticon: map.getZoom() < this._mapConfig.zoomLevelToChangeIcon ? iconDefault : iconZoomed,\\n\\t\\t});\\n\\t\\t// mapMarker.set(\'description\', infoContent);\\n\\t\\tmapMarker.set(\'iconDefault\', iconDefault);\\n\\t\\tmapMarker.set(\'iconZoomed\', iconZoomed);\\n\\t\\tmapMarker.set(\'iconSpiderfied\', iconSpiderfied);\\n\\n\\t\\treturn mapMarker;\\n\\t}\\n\\n\\tgetinfoContent() {\\n\\t\\tconst htmlStr =\\n\\t\\t\\t`<div id=\\"map-content-box\\">\\n      <div class=\\"header-wrapper\\">\\n        <div class=\\"left-box\\">\\n          <div class=\\"line1\\">\\n            <p id=\\"pid\\">` +\\n\\t\\t\\tthis.neId +\\n\\t\\t\\t`</p>\\n      </div>\\n      <div class=\\"line2\\">\\n        <p id=\\"pid\\" class=\\" opacity50 margin10\\"> Alarms:` +\\n\\t\\t\\t300 +\\n\\t\\t\\t`</p>\\n      <p id=\\"pid\\" class=\\"opacity50\\">Ticket:` +\\n\\t\\t\\t200 +\\n\\t\\t\\t`</p>\\n      </div>\\n    </div>\\n    <div class=\\"right-box\\">\\n      <div class=\\"icon-box margin10 \\"></div>\\n      <div class=\\"icon-box\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\"body-wrapper\\">` +\\n\\t\\t\\tthis.generateLayout() +\\n\\t\\t\\t`  </div>\\n      </div>\\n      `;\\n\\n\\t\\treturn htmlStr;\\n\\t}\\n\\n\\tgenerateLayout() {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < this.data2.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t` <div class=\\"row\\">\\n        <div class=\\"body-row\\">\\n          <p id=\\"pid\\" class=\\"text\\">` +\\n\\t\\t\\t\\tthis.data2[i].title +\\n\\t\\t\\t\\t`</p>\\n        </div>\\n        <div class=\\"right-box\\">` +\\n\\t\\t\\t\\tthis.getActions(this.data2[i].actions) +\\n\\t\\t\\t\\t`</div>\\n        </div>`;\\n\\t\\t}\\n\\t\\treturn str;\\n\\t}\\n\\n\\tgetActions(data) {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < data.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t`<div class=\\"icon-box margin10\\">\\n        ` + `</div>`;\\n\\t\\t\\treturn str;\\n\\t\\t}\\n\\t}\\n\\n\\tgetMapMarkerIcon(marker: any, icon: any) {\\n\\t\\t// var iconDot = {\\n\\t\\t//   path: \'M-3,0a3,3 0 1,0 6,0a3,3 0 1,0 -6,0\',\\n\\t\\t//   fillColor: \'red\',\\n\\t\\t//   fillOpacity: 1,\\n\\t\\t//   strokeColor: \'transparent\',\\n\\t\\t//   anchor: new google.maps.Point(0, 0),\\n\\t\\t// };\\n\\n\\t\\treturn {\\n\\t\\t\\tpath: mapIcons.markers[icon.toUpperCase()],\\n\\t\\t\\tfillColor: marker.color ? marker.color : this._mapConfig.iconColor,\\n\\t\\t\\tfillOpacity: 1,\\n\\t\\t\\tstrokeColor: \'transparent\',\\n\\t\\t\\tanchor: new google.maps.Point(this._mapConfig.iconAnchorX, this._mapConfig.iconAnchorY),\\n\\t\\t\\tscale: 1,\\n\\t\\t};\\n\\t}\\n\\n\\t// removeMarker(marker) {\\n\\t//   this.oms.removeMarker(marker);\\n\\t// }\\n\\n\\t// removeAllMarkers() {\\n\\t//   this.oms.removeAllMarkers();\\n\\t// }\\n\\n\\tonSpiderfierEvent(map: any, markers: any, type: string) {\\n\\t\\tswitch (type) {\\n\\t\\t\\tcase \'pre-spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.preSpiderfyTimerref) return;\\n\\t\\t\\t\\tthis.preSpiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.preSpiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Delete static marker if already exists\\n\\t\\t\\t\\t// (Happens when you click on a marker when another\\n\\t\\t\\t\\t// marker is already spiderfied)\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.staticMarker = new google.maps.Marker({\\n\\t\\t\\t\\t\\tmap: map,\\n\\t\\t\\t\\t\\tposition: new google.maps.LatLng(markers[0].position.lat(), markers[0].position.lng()),\\n\\t\\t\\t\\t\\ticon: markers[0].iconZoomed,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.spiderfyTimerref) return;\\n\\t\\t\\t\\tthis.spiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.spiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tmarkers.forEach((e: any) => {\\n\\t\\t\\t\\t\\te.setIcon(e.iconSpiderfied);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.boundsBeforeSpiderfy = this.bounds;\\n\\t\\t\\t\\t// this.centerMap(map, markers);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'unspiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.unspiderfyTimerref) return;\\n\\t\\t\\t\\tthis.unspiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.unspiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Remove static marker\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\tconst zoomed = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\t\\t\\t\\t\\tmarkers.forEach((e) => {\\n\\t\\t\\t\\t\\t\\te.setIcon(zoomed ? e.iconZoomed : e.iconDefault);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.bounds = this.boundsBeforeSpiderfy;\\n\\t\\t\\t\\t// map.fitBounds(this.bounds);\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\tcenterMap(map: any, markers: any) {\\n\\t\\tthis.bounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\t\\t} else {\\n\\t\\t\\tmarkers.forEach((marker: any) => {\\n\\t\\t\\t\\tconst latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());\\n\\t\\t\\t\\tthis.bounds.extend(latlng);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// fit to bounds\\n\\t\\tmap.fitBounds(this.bounds);\\n\\n\\t\\t// zoom out if greater than threshold\\n\\t\\tsetTimeout((_) => {\\n\\t\\t\\tmap.getZoom() <= this._mapConfig.zoomLevelToChangeIcon ? null : map.setZoom(this._mapConfig.zoomLevelToChangeIcon);\\n\\t\\t}, 1);\\n\\t}\\n\\n\\tlistenToZoomChange(map: any) {\\n\\t\\tgoogle.maps.event.addListener(map, \'zoom_changed\', () => {\\n\\t\\t\\tthis.updateMapIcon(map);\\n\\t\\t});\\n\\t}\\n\\n\\tlistenToMarkerHover(marker: any) {\\n\\t\\tconst mouseover = marker.addListener(\'mouseover\', (e: any) => {\\n\\t\\t\\tconst index = this._markers.findIndex((marker) => {\\n\\t\\t\\t\\treturn +marker.lat === +e.latLng.lat() && +marker.lng === +e.latLng.lng();\\n\\t\\t\\t});\\n\\t\\t\\t// console.log(\\n\\t\\t\\t//   \'Mousein\',\\n\\t\\t\\t//   e.latLng.lat(),\\n\\t\\t\\t//   e.latLng.lng(),\\n\\t\\t\\t//   this._markers,\\n\\t\\t\\t//   index,\\n\\t\\t\\t// );\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.showDialog.emit({\\n\\t\\t\\t\\t\\tmarker: this._markers[index],\\n\\t\\t\\t\\t\\tevent: e.domEvent,\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mouseout = marker.addListener(\'mouseout\', (e: any) => {\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.hideDialog.emit(e.domEvent);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tthis.map.markerListeners.push({\\n\\t\\t\\tmouseover,\\n\\t\\t\\tmouseout,\\n\\t\\t});\\n\\t}\\n\\n\\t// unlistenToMarkerClick(_markers) {\\n\\t//   google.maps.event.clearListeners(marker, \'click\', () => {\\n\\t//   });\\n\\t// }\\n\\n\\tupdateMapIcon(map) {\\n\\t\\tif (!this.map || !this.map.markers || !this.map.markers.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst prevZoomLevel = this.zoomLevel;\\n\\t\\tthis.zoomLevel = this.map.getZoom();\\n\\t\\tconst showZoomedIcon = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\n\\t\\t// Do not update icon if zoom threshold boundary is not crossed\\n\\t\\tif (\\n\\t\\t\\t(prevZoomLevel < this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon) ||\\n\\t\\t\\t(prevZoomLevel >= this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel >= this._mapConfig.zoomLevelToChangeIcon)\\n\\t\\t) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (showZoomedIcon) {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconZoomed);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconDefault);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tfilterMarkers(markers: any, bounds: any): any {\\n\\t\\tconst filteredMarkers = markers.filter((marker) => {\\n\\t\\t\\tconst latS = Math.min(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst latE = Math.max(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst lngS = Math.min(+bounds.start.lng, +bounds.end.lng);\\n\\t\\t\\tconst lngE = Math.max(+bounds.start.lng, +bounds.end.lng);\\n\\n\\t\\t\\tif (+marker.lat >= latS && +marker.lat <= latE && +marker.lng >= lngS && +marker.lng <= lngE) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn filteredMarkers;\\n\\t}\\n}\\n","properties":[{"name":"end","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":31},{"name":"start","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":27}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IMapConfig","id":"interface-IMapConfig-053f7dbad5c9e1e3e05e6baf1d1f58e2cf126f2c911f1d2a1d90e0e937a207dd9e5e87866b4422bed62ef25f111d3f84e042435fe3ce1c1dad0c716e61f56e51","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AfterViewInit, Component, EventEmitter, HostListener, Input, NgZone, Output, ViewChild } from \'@angular/core\';\\nimport mapIcons from \'./map-icons\';\\ndeclare let OverlappingMarkerSpiderfier: any;\\ndeclare let MarkerClusterer: any;\\n\\nexport interface IMap {\\n\\tconfig?: IMapConfig;\\n\\tmarkers: IMapMarkers;\\n}\\n\\nexport interface IMapConfig {\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n\\ticonColor?: string;\\n\\ticonAnchorX?: number;\\n\\ticonAnchorY?: number;\\n\\tzoomLevelToChangeIcon?: number;\\n\\tcenterOnMapUpdate?: boolean;\\n\\tcenterOnBounds?: boolean;\\n\\tshowMesh?: boolean;\\n\\tbounds?: IMapBound;\\n\\tfilterMarkersOutsideBounds?: boolean;\\n}\\n\\nexport interface IMapBound {\\n\\tstart: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n\\tend: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n}\\n\\nexport type IMapMarkers = Array<IMapMarker>;\\nexport interface IMapMarker {\\n\\tid: string;\\n\\tlat: string;\\n\\tlng: string;\\n\\ttitle: string;\\n\\tlabel: string;\\n\\tlink: string;\\n\\tmesh?: Array<string>;\\n\\tcolor?: string;\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n}\\n\\n@Component({\\n\\tselector: \'app-telco-maps\',\\n\\ttemplateUrl: \'./telco-maps.component.html\',\\n\\tstyleUrls: [\'./telco-maps.component.scss\'],\\n})\\nexport class TelcoMapsComponent implements AfterViewInit {\\n\\tmap: any;\\n\\toms: any;\\n\\tiw: any;\\n\\tbounds: any;\\n\\tzoomLevel = 1;\\n\\t_markers!: IMapMarkers;\\n\\tmarkersHash = {};\\n\\tmesh: any;\\n\\t_mapConfig: IMapConfig;\\n\\t_mapDefaultConfig: IMapConfig = {\\n\\t\\ticonDefault: \'SITE\',\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\n\\t\\ticonColor: \'#E04B4B\',\\n\\t\\ticonAnchorX: 31,\\n\\t\\ticonAnchorY: -33,\\n\\t\\tzoomLevelToChangeIcon: 14,\\n\\t\\tcenterOnMapUpdate: true,\\n\\t\\tcenterOnBounds: true,\\n\\t\\tshowMesh: true,\\n\\t\\tfilterMarkersOutsideBounds: false,\\n\\t};\\n\\tstaticMarker: any;\\n\\tviewInit = false;\\n\\tboundsBeforeSpiderfy: any;\\n\\tpreSpiderfyTimerref: any;\\n\\tspiderfyTimerref: any;\\n\\tunspiderfyTimerref: any;\\n\\n\\tneId = \'ne_135\';\\n\\tticketid = \'ticket-123\';\\n\\tdata2: any = [\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-123\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t];\\n\\n\\t@ViewChild(\'map\') mapElement;\\n\\t@HostListener(\'window:resize\', [\'$event\'])\\n\\tonResize() {\\n\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t}\\n\\n\\t@Input() set config(value: IMapConfig) {\\n\\t\\tthis._mapConfig = { ...this._mapDefaultConfig, ...value };\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\t@Input() set markers(value: IMapMarkers) {\\n\\t\\tlet filteredMarkers = value;\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\tfilteredMarkers = this.filterMarkers(value, this._mapConfig.bounds);\\n\\t\\t}\\n\\t\\tthis._markers = filteredMarkers;\\n\\t\\t// console.log(this._markers);\\n\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\n\\t@Output() showDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\t@Output() hideDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\tconstructor(private zone: NgZone) {}\\n\\n\\tngAfterViewInit() {\\n\\t\\tif (!(this._markers && this._markers.length > 0)) {\\n\\t\\t\\tthis.oneTimeSetup();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.oneTimeSetup();\\n\\n\\t\\tthis.resetMarkers();\\n\\n\\t\\tthis.viewInit = true;\\n\\t}\\n\\n\\toneTimeSetup() {\\n\\t\\t// Load map\\n\\t\\tconst mapProperties = {\\n\\t\\t\\tcenter: new google.maps.LatLng(0, 0),\\n\\t\\t\\tzoom: 10,\\n\\t\\t\\tmapTypeId: google.maps.MapTypeId.ROADMAP,\\n\\t\\t\\tfullscreenControl: false,\\n\\t\\t\\t// restriction: {\\n\\t\\t\\t//   latLngBounds: latLngBounds,\\n\\t\\t\\t//   strictBounds: false,\\n\\t\\t\\t// },\\n\\t\\t};\\n\\n\\t\\tconst latLngBounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds) {\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\n\\t\\t\\tmapProperties[\'restriction\'] = {\\n\\t\\t\\t\\tlatLngBounds: latLngBounds,\\n\\t\\t\\t\\tstrictBounds: false,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// HTML canvas keeps misfiring ApplicationRef.tick()\\n\\t\\t// To prevent that, initialize canvas outside angular\\n\\t\\tthis.zone.runOutsideAngular(() => {\\n\\t\\t\\tthis.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\\n\\t\\t});\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.map.fitBounds(latLngBounds);\\n\\t\\t}\\n\\n\\t\\t// Add markers array\\n\\t\\tthis.map.markers = [];\\n\\n\\t\\t// Add marker listener array\\n\\t\\tthis.map.markerListeners = [];\\n\\n\\t\\t// Add mesh array\\n\\t\\tthis.map.mesh = [];\\n\\n\\t\\t// Add cluster object\\n\\t\\tthis.map.markerCluster = null;\\n\\n\\t\\t// // Create spiderfier instance\\n\\t\\t// const options = {\\n\\t\\t//   keepSpiderfied: true, // will keep spider chart open after clicking on a marker to show Infowindow\\n\\t\\t//   markersWontMove: true, // we promise not to move any markers, allowing optimizations\\n\\t\\t//   markersWontHide: true, // we promise not to change visibility of any markers, allowing optimizations\\n\\t\\t//   basicFormatEvents: true, // allow the library to skip calculating advanced formatting information\\n\\t\\t//   minZoomLevel: this._mapConfig.zoomLevelToChangeIcon, // minimum zoom level at which cluster will spiderfy\\n\\t\\t// };\\n\\t\\t// this.oms = new OverlappingMarkerSpiderfier(this.map, options);\\n\\n\\t\\t// // Add info window\\n\\t\\t// this.iw = new google.maps.InfoWindow();\\n\\n\\t\\t// Attach zoom change listener\\n\\t\\tthis.listenToZoomChange(this.map);\\n\\t}\\n\\n\\tresetMarkers() {\\n\\t\\t// If markers already exist, remove them before plotting new ones\\n\\t\\tif (this.map && this.map.markers && this.map.markers.length > 0) {\\n\\t\\t\\t// this.oms.removeAllMarkers();\\n\\t\\t\\tthis.map.markerCluster.clearMarkers();\\n\\n\\t\\t\\tthis.map.mesh.forEach((e: any) => {\\n\\t\\t\\t\\tthis.removeLine(e);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markerListeners.forEach((e: any) => {\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseover);\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseout);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markers = [];\\n\\t\\t\\tthis.map.markerListeners = [];\\n\\t\\t\\tthis.map.mesh = [];\\n\\t\\t\\tthis.markersHash = {};\\n\\t\\t}\\n\\n\\t\\t// If exists, add markers\\n\\t\\tif (this._markers && this._markers.length > 0) {\\n\\t\\t\\t// Filter markers on map bounds\\n\\t\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\t\\tthis._markers = this.filterMarkers(this._markers, this._mapConfig.bounds);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tthis.addMarker(e, this.map, this.oms, this.iw, this.map.markers);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Create marker cluster\\n\\t\\tconst mcOptions = {\\n\\t\\t\\tstyles: [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t],\\n\\t\\t\\t// styles: [\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 53,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m1.png\',\\n\\t\\t\\t//     width: 53,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 56,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m2.png\',\\n\\t\\t\\t//     width: 56,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 66,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m3.png\',\\n\\t\\t\\t//     width: 66,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 78,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m4.png\',\\n\\t\\t\\t//     width: 78,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 90,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m5.png\',\\n\\t\\t\\t//     width: 90,\\n\\t\\t\\t//   },\\n\\t\\t\\t// ],\\n\\t\\t};\\n\\t\\tthis.map.markerCluster = new MarkerClusterer(this.map, this.map.markers, mcOptions);\\n\\n\\t\\t// If mesh enabled, add mesh\\n\\t\\tif (this._mapConfig.showMesh) {\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tif (e.mesh && e.mesh.length > 0) {\\n\\t\\t\\t\\t\\te.mesh.forEach((m) => {\\n\\t\\t\\t\\t\\t\\tthis.addLine(this.map, e.id, m);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Center\\n\\t\\tif (this._mapConfig.centerOnMapUpdate) {\\n\\t\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t\\t}\\n\\t\\t// else {\\n\\t\\t//   // fit to bounds\\n\\t\\t//   this.map.fitBounds(this.bounds);\\n\\t\\t// }\\n\\t}\\n\\n\\taddMarker(marker: any, map: any, oms = this.oms, iw: google.maps.InfoWindow = this.iw, markers: Array<google.maps.Marker>) {\\n\\t\\tconst mapMarker = this.getMapMarker(map, marker);\\n\\n\\t\\tmarkers.push(mapMarker);\\n\\n\\t\\t// Attach marker hover listener\\n\\t\\tthis.listenToMarkerHover(mapMarker);\\n\\n\\t\\tthis.markersHash[marker.id] = { lat: marker.lat, lng: marker.lng };\\n\\n\\t\\t// oms.trackMarker(mapMarker);\\n\\n\\t\\t// oms.addListener(\'click\', function (mapMarker, event: Event) {\\n\\t\\t//   iw.setContent(mapMarker.description);\\n\\t\\t//   iw.open(map, mapMarker);\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'pre-spiderfy\', (marker: Element) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, [marker], \'pre-spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'spiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'unspiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'unspiderfy\');\\n\\t\\t// });\\n\\t}\\n\\n\\taddLine(map: any, sourceId: string, destinationId: string) {\\n\\t\\tconst sMarker = this.markersHash[sourceId];\\n\\t\\tconst dMarker = this.markersHash[destinationId];\\n\\t\\tif (!sMarker || !dMarker) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst source = new google.maps.LatLng(sMarker.lat, sMarker.lng);\\n\\t\\tconst destination = new google.maps.LatLng(dMarker.lat, dMarker.lng);\\n\\n\\t\\tconst line = new google.maps.Polyline({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tpath: [source, destination],\\n\\t\\t\\tstrokeColor: \'#444\',\\n\\t\\t\\tstrokeWeight: 1.5,\\n\\t\\t\\tzIndex: +google.maps.Marker.MAX_ZINDEX + 1,\\n\\t\\t});\\n\\n\\t\\tmap.mesh.push(line);\\n\\t}\\n\\n\\tremoveLine(line) {\\n\\t\\tline.setMap(null);\\n\\t}\\n\\n\\tgetMapMarker(map, marker) {\\n\\t\\tconst locationAddressLatLng = new google.maps.LatLng(marker.lat, marker.lng);\\n\\t\\t// const infoContent =\\n\\t\\t//   \'<div class=\\"locationInfo\\">\' +\\n\\t\\t//   \'<div><strong>\' +\\n\\t\\t//   marker.title +\\n\\t\\t//   \'</strong></div>\' +\\n\\t\\t//   \'<div>\' +\\n\\t\\t//   marker.label +\\n\\t\\t//   \'</div>\' +\\n\\t\\t//   \'<a href=\\"\' +\\n\\t\\t//   marker.link +\\n\\t\\t//   \'\\">Se profil</a></div>\';\\n\\n\\t\\t// const infoContent = this.getinfoContent();\\n\\n\\t\\tconst iconDefault = this.getMapMarkerIcon(marker, marker.iconDefault ? marker.iconDefault : this._mapConfig.iconDefault);\\n\\t\\tconst iconZoomed = this.getMapMarkerIcon(marker, marker.iconZoomed ? marker.iconZoomed : this._mapConfig.iconZoomed);\\n\\t\\tconst iconSpiderfied = this.getMapMarkerIcon(marker, marker.iconSpiderfied ? marker.iconSpiderfied : this._mapConfig.iconSpiderfied);\\n\\n\\t\\tconst mapMarker = new google.maps.Marker({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tposition: locationAddressLatLng,\\n\\t\\t\\ticon: map.getZoom() < this._mapConfig.zoomLevelToChangeIcon ? iconDefault : iconZoomed,\\n\\t\\t});\\n\\t\\t// mapMarker.set(\'description\', infoContent);\\n\\t\\tmapMarker.set(\'iconDefault\', iconDefault);\\n\\t\\tmapMarker.set(\'iconZoomed\', iconZoomed);\\n\\t\\tmapMarker.set(\'iconSpiderfied\', iconSpiderfied);\\n\\n\\t\\treturn mapMarker;\\n\\t}\\n\\n\\tgetinfoContent() {\\n\\t\\tconst htmlStr =\\n\\t\\t\\t`<div id=\\"map-content-box\\">\\n      <div class=\\"header-wrapper\\">\\n        <div class=\\"left-box\\">\\n          <div class=\\"line1\\">\\n            <p id=\\"pid\\">` +\\n\\t\\t\\tthis.neId +\\n\\t\\t\\t`</p>\\n      </div>\\n      <div class=\\"line2\\">\\n        <p id=\\"pid\\" class=\\" opacity50 margin10\\"> Alarms:` +\\n\\t\\t\\t300 +\\n\\t\\t\\t`</p>\\n      <p id=\\"pid\\" class=\\"opacity50\\">Ticket:` +\\n\\t\\t\\t200 +\\n\\t\\t\\t`</p>\\n      </div>\\n    </div>\\n    <div class=\\"right-box\\">\\n      <div class=\\"icon-box margin10 \\"></div>\\n      <div class=\\"icon-box\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\"body-wrapper\\">` +\\n\\t\\t\\tthis.generateLayout() +\\n\\t\\t\\t`  </div>\\n      </div>\\n      `;\\n\\n\\t\\treturn htmlStr;\\n\\t}\\n\\n\\tgenerateLayout() {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < this.data2.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t` <div class=\\"row\\">\\n        <div class=\\"body-row\\">\\n          <p id=\\"pid\\" class=\\"text\\">` +\\n\\t\\t\\t\\tthis.data2[i].title +\\n\\t\\t\\t\\t`</p>\\n        </div>\\n        <div class=\\"right-box\\">` +\\n\\t\\t\\t\\tthis.getActions(this.data2[i].actions) +\\n\\t\\t\\t\\t`</div>\\n        </div>`;\\n\\t\\t}\\n\\t\\treturn str;\\n\\t}\\n\\n\\tgetActions(data) {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < data.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t`<div class=\\"icon-box margin10\\">\\n        ` + `</div>`;\\n\\t\\t\\treturn str;\\n\\t\\t}\\n\\t}\\n\\n\\tgetMapMarkerIcon(marker: any, icon: any) {\\n\\t\\t// var iconDot = {\\n\\t\\t//   path: \'M-3,0a3,3 0 1,0 6,0a3,3 0 1,0 -6,0\',\\n\\t\\t//   fillColor: \'red\',\\n\\t\\t//   fillOpacity: 1,\\n\\t\\t//   strokeColor: \'transparent\',\\n\\t\\t//   anchor: new google.maps.Point(0, 0),\\n\\t\\t// };\\n\\n\\t\\treturn {\\n\\t\\t\\tpath: mapIcons.markers[icon.toUpperCase()],\\n\\t\\t\\tfillColor: marker.color ? marker.color : this._mapConfig.iconColor,\\n\\t\\t\\tfillOpacity: 1,\\n\\t\\t\\tstrokeColor: \'transparent\',\\n\\t\\t\\tanchor: new google.maps.Point(this._mapConfig.iconAnchorX, this._mapConfig.iconAnchorY),\\n\\t\\t\\tscale: 1,\\n\\t\\t};\\n\\t}\\n\\n\\t// removeMarker(marker) {\\n\\t//   this.oms.removeMarker(marker);\\n\\t// }\\n\\n\\t// removeAllMarkers() {\\n\\t//   this.oms.removeAllMarkers();\\n\\t// }\\n\\n\\tonSpiderfierEvent(map: any, markers: any, type: string) {\\n\\t\\tswitch (type) {\\n\\t\\t\\tcase \'pre-spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.preSpiderfyTimerref) return;\\n\\t\\t\\t\\tthis.preSpiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.preSpiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Delete static marker if already exists\\n\\t\\t\\t\\t// (Happens when you click on a marker when another\\n\\t\\t\\t\\t// marker is already spiderfied)\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.staticMarker = new google.maps.Marker({\\n\\t\\t\\t\\t\\tmap: map,\\n\\t\\t\\t\\t\\tposition: new google.maps.LatLng(markers[0].position.lat(), markers[0].position.lng()),\\n\\t\\t\\t\\t\\ticon: markers[0].iconZoomed,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.spiderfyTimerref) return;\\n\\t\\t\\t\\tthis.spiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.spiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tmarkers.forEach((e: any) => {\\n\\t\\t\\t\\t\\te.setIcon(e.iconSpiderfied);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.boundsBeforeSpiderfy = this.bounds;\\n\\t\\t\\t\\t// this.centerMap(map, markers);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'unspiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.unspiderfyTimerref) return;\\n\\t\\t\\t\\tthis.unspiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.unspiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Remove static marker\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\tconst zoomed = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\t\\t\\t\\t\\tmarkers.forEach((e) => {\\n\\t\\t\\t\\t\\t\\te.setIcon(zoomed ? e.iconZoomed : e.iconDefault);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.bounds = this.boundsBeforeSpiderfy;\\n\\t\\t\\t\\t// map.fitBounds(this.bounds);\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\tcenterMap(map: any, markers: any) {\\n\\t\\tthis.bounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\t\\t} else {\\n\\t\\t\\tmarkers.forEach((marker: any) => {\\n\\t\\t\\t\\tconst latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());\\n\\t\\t\\t\\tthis.bounds.extend(latlng);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// fit to bounds\\n\\t\\tmap.fitBounds(this.bounds);\\n\\n\\t\\t// zoom out if greater than threshold\\n\\t\\tsetTimeout((_) => {\\n\\t\\t\\tmap.getZoom() <= this._mapConfig.zoomLevelToChangeIcon ? null : map.setZoom(this._mapConfig.zoomLevelToChangeIcon);\\n\\t\\t}, 1);\\n\\t}\\n\\n\\tlistenToZoomChange(map: any) {\\n\\t\\tgoogle.maps.event.addListener(map, \'zoom_changed\', () => {\\n\\t\\t\\tthis.updateMapIcon(map);\\n\\t\\t});\\n\\t}\\n\\n\\tlistenToMarkerHover(marker: any) {\\n\\t\\tconst mouseover = marker.addListener(\'mouseover\', (e: any) => {\\n\\t\\t\\tconst index = this._markers.findIndex((marker) => {\\n\\t\\t\\t\\treturn +marker.lat === +e.latLng.lat() && +marker.lng === +e.latLng.lng();\\n\\t\\t\\t});\\n\\t\\t\\t// console.log(\\n\\t\\t\\t//   \'Mousein\',\\n\\t\\t\\t//   e.latLng.lat(),\\n\\t\\t\\t//   e.latLng.lng(),\\n\\t\\t\\t//   this._markers,\\n\\t\\t\\t//   index,\\n\\t\\t\\t// );\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.showDialog.emit({\\n\\t\\t\\t\\t\\tmarker: this._markers[index],\\n\\t\\t\\t\\t\\tevent: e.domEvent,\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mouseout = marker.addListener(\'mouseout\', (e: any) => {\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.hideDialog.emit(e.domEvent);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tthis.map.markerListeners.push({\\n\\t\\t\\tmouseover,\\n\\t\\t\\tmouseout,\\n\\t\\t});\\n\\t}\\n\\n\\t// unlistenToMarkerClick(_markers) {\\n\\t//   google.maps.event.clearListeners(marker, \'click\', () => {\\n\\t//   });\\n\\t// }\\n\\n\\tupdateMapIcon(map) {\\n\\t\\tif (!this.map || !this.map.markers || !this.map.markers.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst prevZoomLevel = this.zoomLevel;\\n\\t\\tthis.zoomLevel = this.map.getZoom();\\n\\t\\tconst showZoomedIcon = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\n\\t\\t// Do not update icon if zoom threshold boundary is not crossed\\n\\t\\tif (\\n\\t\\t\\t(prevZoomLevel < this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon) ||\\n\\t\\t\\t(prevZoomLevel >= this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel >= this._mapConfig.zoomLevelToChangeIcon)\\n\\t\\t) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (showZoomedIcon) {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconZoomed);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconDefault);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tfilterMarkers(markers: any, bounds: any): any {\\n\\t\\tconst filteredMarkers = markers.filter((marker) => {\\n\\t\\t\\tconst latS = Math.min(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst latE = Math.max(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst lngS = Math.min(+bounds.start.lng, +bounds.end.lng);\\n\\t\\t\\tconst lngE = Math.max(+bounds.start.lng, +bounds.end.lng);\\n\\n\\t\\t\\tif (+marker.lat >= latS && +marker.lat <= latE && +marker.lng >= lngS && +marker.lng <= lngE) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn filteredMarkers;\\n\\t}\\n}\\n","properties":[{"name":"bounds","deprecated":false,"deprecationMessage":"","type":"IMapBound","optional":true,"description":"","line":22},{"name":"centerOnBounds","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":20},{"name":"centerOnMapUpdate","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":19},{"name":"filterMarkersOutsideBounds","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":23},{"name":"iconAnchorX","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":16},{"name":"iconAnchorY","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":17},{"name":"iconColor","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"iconDefault","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"iconSpiderfied","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"iconZoomed","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"showMesh","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":21},{"name":"zoomLevelToChangeIcon","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":18}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IMapMarker","id":"interface-IMapMarker-053f7dbad5c9e1e3e05e6baf1d1f58e2cf126f2c911f1d2a1d90e0e937a207dd9e5e87866b4422bed62ef25f111d3f84e042435fe3ce1c1dad0c716e61f56e51","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AfterViewInit, Component, EventEmitter, HostListener, Input, NgZone, Output, ViewChild } from \'@angular/core\';\\nimport mapIcons from \'./map-icons\';\\ndeclare let OverlappingMarkerSpiderfier: any;\\ndeclare let MarkerClusterer: any;\\n\\nexport interface IMap {\\n\\tconfig?: IMapConfig;\\n\\tmarkers: IMapMarkers;\\n}\\n\\nexport interface IMapConfig {\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n\\ticonColor?: string;\\n\\ticonAnchorX?: number;\\n\\ticonAnchorY?: number;\\n\\tzoomLevelToChangeIcon?: number;\\n\\tcenterOnMapUpdate?: boolean;\\n\\tcenterOnBounds?: boolean;\\n\\tshowMesh?: boolean;\\n\\tbounds?: IMapBound;\\n\\tfilterMarkersOutsideBounds?: boolean;\\n}\\n\\nexport interface IMapBound {\\n\\tstart: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n\\tend: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n}\\n\\nexport type IMapMarkers = Array<IMapMarker>;\\nexport interface IMapMarker {\\n\\tid: string;\\n\\tlat: string;\\n\\tlng: string;\\n\\ttitle: string;\\n\\tlabel: string;\\n\\tlink: string;\\n\\tmesh?: Array<string>;\\n\\tcolor?: string;\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n}\\n\\n@Component({\\n\\tselector: \'app-telco-maps\',\\n\\ttemplateUrl: \'./telco-maps.component.html\',\\n\\tstyleUrls: [\'./telco-maps.component.scss\'],\\n})\\nexport class TelcoMapsComponent implements AfterViewInit {\\n\\tmap: any;\\n\\toms: any;\\n\\tiw: any;\\n\\tbounds: any;\\n\\tzoomLevel = 1;\\n\\t_markers!: IMapMarkers;\\n\\tmarkersHash = {};\\n\\tmesh: any;\\n\\t_mapConfig: IMapConfig;\\n\\t_mapDefaultConfig: IMapConfig = {\\n\\t\\ticonDefault: \'SITE\',\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\n\\t\\ticonColor: \'#E04B4B\',\\n\\t\\ticonAnchorX: 31,\\n\\t\\ticonAnchorY: -33,\\n\\t\\tzoomLevelToChangeIcon: 14,\\n\\t\\tcenterOnMapUpdate: true,\\n\\t\\tcenterOnBounds: true,\\n\\t\\tshowMesh: true,\\n\\t\\tfilterMarkersOutsideBounds: false,\\n\\t};\\n\\tstaticMarker: any;\\n\\tviewInit = false;\\n\\tboundsBeforeSpiderfy: any;\\n\\tpreSpiderfyTimerref: any;\\n\\tspiderfyTimerref: any;\\n\\tunspiderfyTimerref: any;\\n\\n\\tneId = \'ne_135\';\\n\\tticketid = \'ticket-123\';\\n\\tdata2: any = [\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-123\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t];\\n\\n\\t@ViewChild(\'map\') mapElement;\\n\\t@HostListener(\'window:resize\', [\'$event\'])\\n\\tonResize() {\\n\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t}\\n\\n\\t@Input() set config(value: IMapConfig) {\\n\\t\\tthis._mapConfig = { ...this._mapDefaultConfig, ...value };\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\t@Input() set markers(value: IMapMarkers) {\\n\\t\\tlet filteredMarkers = value;\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\tfilteredMarkers = this.filterMarkers(value, this._mapConfig.bounds);\\n\\t\\t}\\n\\t\\tthis._markers = filteredMarkers;\\n\\t\\t// console.log(this._markers);\\n\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\n\\t@Output() showDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\t@Output() hideDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\tconstructor(private zone: NgZone) {}\\n\\n\\tngAfterViewInit() {\\n\\t\\tif (!(this._markers && this._markers.length > 0)) {\\n\\t\\t\\tthis.oneTimeSetup();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.oneTimeSetup();\\n\\n\\t\\tthis.resetMarkers();\\n\\n\\t\\tthis.viewInit = true;\\n\\t}\\n\\n\\toneTimeSetup() {\\n\\t\\t// Load map\\n\\t\\tconst mapProperties = {\\n\\t\\t\\tcenter: new google.maps.LatLng(0, 0),\\n\\t\\t\\tzoom: 10,\\n\\t\\t\\tmapTypeId: google.maps.MapTypeId.ROADMAP,\\n\\t\\t\\tfullscreenControl: false,\\n\\t\\t\\t// restriction: {\\n\\t\\t\\t//   latLngBounds: latLngBounds,\\n\\t\\t\\t//   strictBounds: false,\\n\\t\\t\\t// },\\n\\t\\t};\\n\\n\\t\\tconst latLngBounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds) {\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\n\\t\\t\\tmapProperties[\'restriction\'] = {\\n\\t\\t\\t\\tlatLngBounds: latLngBounds,\\n\\t\\t\\t\\tstrictBounds: false,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// HTML canvas keeps misfiring ApplicationRef.tick()\\n\\t\\t// To prevent that, initialize canvas outside angular\\n\\t\\tthis.zone.runOutsideAngular(() => {\\n\\t\\t\\tthis.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\\n\\t\\t});\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.map.fitBounds(latLngBounds);\\n\\t\\t}\\n\\n\\t\\t// Add markers array\\n\\t\\tthis.map.markers = [];\\n\\n\\t\\t// Add marker listener array\\n\\t\\tthis.map.markerListeners = [];\\n\\n\\t\\t// Add mesh array\\n\\t\\tthis.map.mesh = [];\\n\\n\\t\\t// Add cluster object\\n\\t\\tthis.map.markerCluster = null;\\n\\n\\t\\t// // Create spiderfier instance\\n\\t\\t// const options = {\\n\\t\\t//   keepSpiderfied: true, // will keep spider chart open after clicking on a marker to show Infowindow\\n\\t\\t//   markersWontMove: true, // we promise not to move any markers, allowing optimizations\\n\\t\\t//   markersWontHide: true, // we promise not to change visibility of any markers, allowing optimizations\\n\\t\\t//   basicFormatEvents: true, // allow the library to skip calculating advanced formatting information\\n\\t\\t//   minZoomLevel: this._mapConfig.zoomLevelToChangeIcon, // minimum zoom level at which cluster will spiderfy\\n\\t\\t// };\\n\\t\\t// this.oms = new OverlappingMarkerSpiderfier(this.map, options);\\n\\n\\t\\t// // Add info window\\n\\t\\t// this.iw = new google.maps.InfoWindow();\\n\\n\\t\\t// Attach zoom change listener\\n\\t\\tthis.listenToZoomChange(this.map);\\n\\t}\\n\\n\\tresetMarkers() {\\n\\t\\t// If markers already exist, remove them before plotting new ones\\n\\t\\tif (this.map && this.map.markers && this.map.markers.length > 0) {\\n\\t\\t\\t// this.oms.removeAllMarkers();\\n\\t\\t\\tthis.map.markerCluster.clearMarkers();\\n\\n\\t\\t\\tthis.map.mesh.forEach((e: any) => {\\n\\t\\t\\t\\tthis.removeLine(e);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markerListeners.forEach((e: any) => {\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseover);\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseout);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markers = [];\\n\\t\\t\\tthis.map.markerListeners = [];\\n\\t\\t\\tthis.map.mesh = [];\\n\\t\\t\\tthis.markersHash = {};\\n\\t\\t}\\n\\n\\t\\t// If exists, add markers\\n\\t\\tif (this._markers && this._markers.length > 0) {\\n\\t\\t\\t// Filter markers on map bounds\\n\\t\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\t\\tthis._markers = this.filterMarkers(this._markers, this._mapConfig.bounds);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tthis.addMarker(e, this.map, this.oms, this.iw, this.map.markers);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Create marker cluster\\n\\t\\tconst mcOptions = {\\n\\t\\t\\tstyles: [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t],\\n\\t\\t\\t// styles: [\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 53,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m1.png\',\\n\\t\\t\\t//     width: 53,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 56,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m2.png\',\\n\\t\\t\\t//     width: 56,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 66,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m3.png\',\\n\\t\\t\\t//     width: 66,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 78,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m4.png\',\\n\\t\\t\\t//     width: 78,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 90,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m5.png\',\\n\\t\\t\\t//     width: 90,\\n\\t\\t\\t//   },\\n\\t\\t\\t// ],\\n\\t\\t};\\n\\t\\tthis.map.markerCluster = new MarkerClusterer(this.map, this.map.markers, mcOptions);\\n\\n\\t\\t// If mesh enabled, add mesh\\n\\t\\tif (this._mapConfig.showMesh) {\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tif (e.mesh && e.mesh.length > 0) {\\n\\t\\t\\t\\t\\te.mesh.forEach((m) => {\\n\\t\\t\\t\\t\\t\\tthis.addLine(this.map, e.id, m);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Center\\n\\t\\tif (this._mapConfig.centerOnMapUpdate) {\\n\\t\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t\\t}\\n\\t\\t// else {\\n\\t\\t//   // fit to bounds\\n\\t\\t//   this.map.fitBounds(this.bounds);\\n\\t\\t// }\\n\\t}\\n\\n\\taddMarker(marker: any, map: any, oms = this.oms, iw: google.maps.InfoWindow = this.iw, markers: Array<google.maps.Marker>) {\\n\\t\\tconst mapMarker = this.getMapMarker(map, marker);\\n\\n\\t\\tmarkers.push(mapMarker);\\n\\n\\t\\t// Attach marker hover listener\\n\\t\\tthis.listenToMarkerHover(mapMarker);\\n\\n\\t\\tthis.markersHash[marker.id] = { lat: marker.lat, lng: marker.lng };\\n\\n\\t\\t// oms.trackMarker(mapMarker);\\n\\n\\t\\t// oms.addListener(\'click\', function (mapMarker, event: Event) {\\n\\t\\t//   iw.setContent(mapMarker.description);\\n\\t\\t//   iw.open(map, mapMarker);\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'pre-spiderfy\', (marker: Element) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, [marker], \'pre-spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'spiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'unspiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'unspiderfy\');\\n\\t\\t// });\\n\\t}\\n\\n\\taddLine(map: any, sourceId: string, destinationId: string) {\\n\\t\\tconst sMarker = this.markersHash[sourceId];\\n\\t\\tconst dMarker = this.markersHash[destinationId];\\n\\t\\tif (!sMarker || !dMarker) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst source = new google.maps.LatLng(sMarker.lat, sMarker.lng);\\n\\t\\tconst destination = new google.maps.LatLng(dMarker.lat, dMarker.lng);\\n\\n\\t\\tconst line = new google.maps.Polyline({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tpath: [source, destination],\\n\\t\\t\\tstrokeColor: \'#444\',\\n\\t\\t\\tstrokeWeight: 1.5,\\n\\t\\t\\tzIndex: +google.maps.Marker.MAX_ZINDEX + 1,\\n\\t\\t});\\n\\n\\t\\tmap.mesh.push(line);\\n\\t}\\n\\n\\tremoveLine(line) {\\n\\t\\tline.setMap(null);\\n\\t}\\n\\n\\tgetMapMarker(map, marker) {\\n\\t\\tconst locationAddressLatLng = new google.maps.LatLng(marker.lat, marker.lng);\\n\\t\\t// const infoContent =\\n\\t\\t//   \'<div class=\\"locationInfo\\">\' +\\n\\t\\t//   \'<div><strong>\' +\\n\\t\\t//   marker.title +\\n\\t\\t//   \'</strong></div>\' +\\n\\t\\t//   \'<div>\' +\\n\\t\\t//   marker.label +\\n\\t\\t//   \'</div>\' +\\n\\t\\t//   \'<a href=\\"\' +\\n\\t\\t//   marker.link +\\n\\t\\t//   \'\\">Se profil</a></div>\';\\n\\n\\t\\t// const infoContent = this.getinfoContent();\\n\\n\\t\\tconst iconDefault = this.getMapMarkerIcon(marker, marker.iconDefault ? marker.iconDefault : this._mapConfig.iconDefault);\\n\\t\\tconst iconZoomed = this.getMapMarkerIcon(marker, marker.iconZoomed ? marker.iconZoomed : this._mapConfig.iconZoomed);\\n\\t\\tconst iconSpiderfied = this.getMapMarkerIcon(marker, marker.iconSpiderfied ? marker.iconSpiderfied : this._mapConfig.iconSpiderfied);\\n\\n\\t\\tconst mapMarker = new google.maps.Marker({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tposition: locationAddressLatLng,\\n\\t\\t\\ticon: map.getZoom() < this._mapConfig.zoomLevelToChangeIcon ? iconDefault : iconZoomed,\\n\\t\\t});\\n\\t\\t// mapMarker.set(\'description\', infoContent);\\n\\t\\tmapMarker.set(\'iconDefault\', iconDefault);\\n\\t\\tmapMarker.set(\'iconZoomed\', iconZoomed);\\n\\t\\tmapMarker.set(\'iconSpiderfied\', iconSpiderfied);\\n\\n\\t\\treturn mapMarker;\\n\\t}\\n\\n\\tgetinfoContent() {\\n\\t\\tconst htmlStr =\\n\\t\\t\\t`<div id=\\"map-content-box\\">\\n      <div class=\\"header-wrapper\\">\\n        <div class=\\"left-box\\">\\n          <div class=\\"line1\\">\\n            <p id=\\"pid\\">` +\\n\\t\\t\\tthis.neId +\\n\\t\\t\\t`</p>\\n      </div>\\n      <div class=\\"line2\\">\\n        <p id=\\"pid\\" class=\\" opacity50 margin10\\"> Alarms:` +\\n\\t\\t\\t300 +\\n\\t\\t\\t`</p>\\n      <p id=\\"pid\\" class=\\"opacity50\\">Ticket:` +\\n\\t\\t\\t200 +\\n\\t\\t\\t`</p>\\n      </div>\\n    </div>\\n    <div class=\\"right-box\\">\\n      <div class=\\"icon-box margin10 \\"></div>\\n      <div class=\\"icon-box\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\"body-wrapper\\">` +\\n\\t\\t\\tthis.generateLayout() +\\n\\t\\t\\t`  </div>\\n      </div>\\n      `;\\n\\n\\t\\treturn htmlStr;\\n\\t}\\n\\n\\tgenerateLayout() {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < this.data2.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t` <div class=\\"row\\">\\n        <div class=\\"body-row\\">\\n          <p id=\\"pid\\" class=\\"text\\">` +\\n\\t\\t\\t\\tthis.data2[i].title +\\n\\t\\t\\t\\t`</p>\\n        </div>\\n        <div class=\\"right-box\\">` +\\n\\t\\t\\t\\tthis.getActions(this.data2[i].actions) +\\n\\t\\t\\t\\t`</div>\\n        </div>`;\\n\\t\\t}\\n\\t\\treturn str;\\n\\t}\\n\\n\\tgetActions(data) {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < data.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t`<div class=\\"icon-box margin10\\">\\n        ` + `</div>`;\\n\\t\\t\\treturn str;\\n\\t\\t}\\n\\t}\\n\\n\\tgetMapMarkerIcon(marker: any, icon: any) {\\n\\t\\t// var iconDot = {\\n\\t\\t//   path: \'M-3,0a3,3 0 1,0 6,0a3,3 0 1,0 -6,0\',\\n\\t\\t//   fillColor: \'red\',\\n\\t\\t//   fillOpacity: 1,\\n\\t\\t//   strokeColor: \'transparent\',\\n\\t\\t//   anchor: new google.maps.Point(0, 0),\\n\\t\\t// };\\n\\n\\t\\treturn {\\n\\t\\t\\tpath: mapIcons.markers[icon.toUpperCase()],\\n\\t\\t\\tfillColor: marker.color ? marker.color : this._mapConfig.iconColor,\\n\\t\\t\\tfillOpacity: 1,\\n\\t\\t\\tstrokeColor: \'transparent\',\\n\\t\\t\\tanchor: new google.maps.Point(this._mapConfig.iconAnchorX, this._mapConfig.iconAnchorY),\\n\\t\\t\\tscale: 1,\\n\\t\\t};\\n\\t}\\n\\n\\t// removeMarker(marker) {\\n\\t//   this.oms.removeMarker(marker);\\n\\t// }\\n\\n\\t// removeAllMarkers() {\\n\\t//   this.oms.removeAllMarkers();\\n\\t// }\\n\\n\\tonSpiderfierEvent(map: any, markers: any, type: string) {\\n\\t\\tswitch (type) {\\n\\t\\t\\tcase \'pre-spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.preSpiderfyTimerref) return;\\n\\t\\t\\t\\tthis.preSpiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.preSpiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Delete static marker if already exists\\n\\t\\t\\t\\t// (Happens when you click on a marker when another\\n\\t\\t\\t\\t// marker is already spiderfied)\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.staticMarker = new google.maps.Marker({\\n\\t\\t\\t\\t\\tmap: map,\\n\\t\\t\\t\\t\\tposition: new google.maps.LatLng(markers[0].position.lat(), markers[0].position.lng()),\\n\\t\\t\\t\\t\\ticon: markers[0].iconZoomed,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.spiderfyTimerref) return;\\n\\t\\t\\t\\tthis.spiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.spiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tmarkers.forEach((e: any) => {\\n\\t\\t\\t\\t\\te.setIcon(e.iconSpiderfied);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.boundsBeforeSpiderfy = this.bounds;\\n\\t\\t\\t\\t// this.centerMap(map, markers);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'unspiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.unspiderfyTimerref) return;\\n\\t\\t\\t\\tthis.unspiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.unspiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Remove static marker\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\tconst zoomed = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\t\\t\\t\\t\\tmarkers.forEach((e) => {\\n\\t\\t\\t\\t\\t\\te.setIcon(zoomed ? e.iconZoomed : e.iconDefault);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.bounds = this.boundsBeforeSpiderfy;\\n\\t\\t\\t\\t// map.fitBounds(this.bounds);\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\tcenterMap(map: any, markers: any) {\\n\\t\\tthis.bounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\t\\t} else {\\n\\t\\t\\tmarkers.forEach((marker: any) => {\\n\\t\\t\\t\\tconst latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());\\n\\t\\t\\t\\tthis.bounds.extend(latlng);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// fit to bounds\\n\\t\\tmap.fitBounds(this.bounds);\\n\\n\\t\\t// zoom out if greater than threshold\\n\\t\\tsetTimeout((_) => {\\n\\t\\t\\tmap.getZoom() <= this._mapConfig.zoomLevelToChangeIcon ? null : map.setZoom(this._mapConfig.zoomLevelToChangeIcon);\\n\\t\\t}, 1);\\n\\t}\\n\\n\\tlistenToZoomChange(map: any) {\\n\\t\\tgoogle.maps.event.addListener(map, \'zoom_changed\', () => {\\n\\t\\t\\tthis.updateMapIcon(map);\\n\\t\\t});\\n\\t}\\n\\n\\tlistenToMarkerHover(marker: any) {\\n\\t\\tconst mouseover = marker.addListener(\'mouseover\', (e: any) => {\\n\\t\\t\\tconst index = this._markers.findIndex((marker) => {\\n\\t\\t\\t\\treturn +marker.lat === +e.latLng.lat() && +marker.lng === +e.latLng.lng();\\n\\t\\t\\t});\\n\\t\\t\\t// console.log(\\n\\t\\t\\t//   \'Mousein\',\\n\\t\\t\\t//   e.latLng.lat(),\\n\\t\\t\\t//   e.latLng.lng(),\\n\\t\\t\\t//   this._markers,\\n\\t\\t\\t//   index,\\n\\t\\t\\t// );\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.showDialog.emit({\\n\\t\\t\\t\\t\\tmarker: this._markers[index],\\n\\t\\t\\t\\t\\tevent: e.domEvent,\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mouseout = marker.addListener(\'mouseout\', (e: any) => {\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.hideDialog.emit(e.domEvent);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tthis.map.markerListeners.push({\\n\\t\\t\\tmouseover,\\n\\t\\t\\tmouseout,\\n\\t\\t});\\n\\t}\\n\\n\\t// unlistenToMarkerClick(_markers) {\\n\\t//   google.maps.event.clearListeners(marker, \'click\', () => {\\n\\t//   });\\n\\t// }\\n\\n\\tupdateMapIcon(map) {\\n\\t\\tif (!this.map || !this.map.markers || !this.map.markers.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst prevZoomLevel = this.zoomLevel;\\n\\t\\tthis.zoomLevel = this.map.getZoom();\\n\\t\\tconst showZoomedIcon = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\n\\t\\t// Do not update icon if zoom threshold boundary is not crossed\\n\\t\\tif (\\n\\t\\t\\t(prevZoomLevel < this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon) ||\\n\\t\\t\\t(prevZoomLevel >= this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel >= this._mapConfig.zoomLevelToChangeIcon)\\n\\t\\t) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (showZoomedIcon) {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconZoomed);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconDefault);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tfilterMarkers(markers: any, bounds: any): any {\\n\\t\\tconst filteredMarkers = markers.filter((marker) => {\\n\\t\\t\\tconst latS = Math.min(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst latE = Math.max(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst lngS = Math.min(+bounds.start.lng, +bounds.end.lng);\\n\\t\\t\\tconst lngE = Math.max(+bounds.start.lng, +bounds.end.lng);\\n\\n\\t\\t\\tif (+marker.lat >= latS && +marker.lat <= latE && +marker.lng >= lngS && +marker.lng <= lngE) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn filteredMarkers;\\n\\t}\\n}\\n","properties":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":46},{"name":"iconDefault","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":47},{"name":"iconSpiderfied","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":49},{"name":"iconZoomed","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":48},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43},{"name":"lat","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40},{"name":"link","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44},{"name":"lng","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41},{"name":"mesh","deprecated":false,"deprecationMessage":"","type":"Array<string>","optional":true,"description":"","line":45},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"InputDataInterFace","id":"interface-InputDataInterFace-54d0450abe8ea96d246a7660e00977645f02a684c315b88ef91cdbafb44035d2a5893c4754502983e75e4e64c475ec98092c6426e07fe078d5e62ccd953d50c0","file":"src/app/telco-table/telco-table.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { LiveAnnouncer } from \'@angular/cdk/a11y\';\\nimport { AfterViewInit, Component, Input, OnInit, ViewChild } from \'@angular/core\';\\nimport { MatPaginator } from \'@angular/material/paginator\';\\nimport { MatTableDataSource } from \'@angular/material/table\';\\nimport { MatSort, Sort } from \'@angular/material/sort\';\\n\\nexport interface InputDataInterFace {\\n\\tSiteName: string;\\n\\tCountofAlarm: string;\\n\\tTimestamp: { date: string; time: string };\\n\\tRCA: { iconImg: string; status: string };\\n}\\n\\nconst ELEMENT_DATA: InputDataInterFace[] = [\\n\\t{\\n\\t\\tSiteName: \'Site Name 1\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2022\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 2\',\\n\\t\\tCountofAlarm: \'09\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'Cell Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 4\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 5\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 6\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 7\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n];\\n\\n@Component({\\n\\tselector: \'app-telco-table\',\\n\\ttemplateUrl: \'./telco-table.component.html\',\\n\\tstyleUrls: [\'./telco-table.component.scss\'],\\n})\\nexport class TelcoTableComponent implements OnInit {\\n\\t@Input() PaginationShow: boolean = false;\\n\\tdisplayedColumns = [\'SiteName\', \'CountofAlarm\', \'Timestamp\', \'RCA\'];\\n\\tdataSource = new MatTableDataSource<InputDataInterFace>(ELEMENT_DATA);\\n\\n\\t@ViewChild(MatSort) sort: MatSort;\\n\\t@ViewChild(MatPaginator) paginator: MatPaginator;\\n\\n\\tconstructor(private _liveAnnouncer: LiveAnnouncer) {}\\n\\n\\t// here is the code trial\\n\\n\\tngOnInit() {\\n\\t\\tthis.dataSource.paginator = this.paginator;\\n\\t\\tthis.dataSource.sort = this.sort;\\n\\t\\tthis.dataSource.sortingDataAccessor = (item, property) => {\\n\\t\\t\\tswitch (property) {\\n\\t\\t\\t\\tcase \'RCA\': {\\n\\t\\t\\t\\t\\treturn item.RCA.status;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcase \'Timestamp\': {\\n\\t\\t\\t\\t\\tlet newDate = new Date(item.Timestamp.date);\\n\\t\\t\\t\\t\\treturn newDate;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdefault: {\\n\\t\\t\\t\\t\\treturn item[property];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\t// for sorting\\n\\tannounceSortChange(sortState: Sort) {\\n\\t\\tif (sortState.direction) {\\n\\t\\t\\tthis._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\\n\\t\\t} else {\\n\\t\\t\\tthis._liveAnnouncer.announce(\'Sorting cleared\');\\n\\t\\t}\\n\\t}\\n}\\n","properties":[{"name":"CountofAlarm","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"RCA","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":11},{"name":"SiteName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"Timestamp","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]}],"injectables":[],"guards":[],"interceptors":[],"classes":[{"name":"mapIcons","id":"class-mapIcons-22c0d490a354c1e6edd6f61c882b7c003c8ca9b90dd8697b2a5b6ab8cc54a8664d30e411e489f2ccb478910531c1e0e00d5c3b7ff4fa1ebc60103af426a41cce","file":"src/app/telco-maps/map-icons.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"class mapIcons {\\n  markers: any = {\\n    SITE: \'M 4, 11 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0\',\\n    SITE_ACTIVE:\\n      \'M155,90 C161.627417,90 167,95.372583 167,102 C167,108.627417 161.627417,114 155,114 C148.372583,114 143,108.627417 143,102 C143,95.372583 148.372583,90 155,90 Z M155.126316,92.2736842 C149.684858,92.2736842 145.273684,96.6848576 145.273684,102.126316 C145.273684,107.567774 149.684858,111.978947 155.126316,111.978947 C160.567774,111.978947 164.978947,107.567774 164.978947,102.126316 C164.978947,96.6848576 160.567774,92.2736842 155.126316,92.2736842 Z M155.126316,95.3052632 C158.893479,95.3052632 161.947368,98.3591524 161.947368,102.126316 C161.947368,105.893479 158.893479,108.947368 155.126316,108.947368 C151.359152,108.947368 148.305263,105.893479 148.305263,102.126316 C148.305263,98.3591524 151.359152,95.3052632 155.126316,95.3052632 Z\',\\n    SITE_ZOOMED_ALT:\\n      \'M19.644 24.168C19.156 26.35 17.035 28 14.5 28s-4.656-1.65-5.143-3.832h10.287zM15.9 0c4.74.623 8.4 4.344 8.4 8.84v3.56c0 2.529 1.214 4.915 3.33 6.547.558.436.87 1.054.87 1.708 0 1.233-1.099 2.236-2.45 2.236H2.95C1.6 22.89.5 21.888.5 20.655c0-.654.312-1.272.857-1.698C3.487 17.315 4.7 14.93 4.7 12.401V8.839C4.7 4.344 8.358.623 13.1 0h2.8z\',\\n    // \'M16.0415007,19.9890404 C15.6586101,21.7042068 13.992099,23 12.0001007,23 C10.007901,23 8.34138998,21.7042068 7.95870067,19.9890404 L7.95870067,19.9890404 Z M13.1000302,1 C16.8246038,1.48975874 19.7000101,4.41342558 19.7000101,7.94520182 L19.7000101,7.94520182 L19.7000101,10.7433507 C19.7000101,12.7295843 20.653712,14.6044507 22.3170004,15.8871959 C22.7546761,16.2293839 23,16.7150996 23,17.2289328 C23,18.1976076 22.1365322,18.9854484 21.075073,18.9854484 L21.075073,18.9854484 L2.92512843,18.9854484 C1.86346784,18.9854484 1,18.1976076 1,17.2289328 C1,16.7150996 1.24532398,16.2293839 1.6733317,15.8950982 C3.34628804,14.6044507 4.29998993,12.7295843 4.29998993,10.7433507 L4.29998993,10.7433507 L4.29998993,7.94520182 C4.29998993,4.41342558 7.17438913,1.48975874 10.8999698,1 L10.8999698,1 Z\',\\n    SITE_ZOOMED: \'M 0, 11 a 11,11 0 1,0 22,0 a 11,11 0 1,0 -22,0\',\\n    NETWORK_ELEMENT:\\n      \'M17.2301946,0.366381323 C17.6684825,-0.0719066148 18.3259144,-0.0719066148 18.7642023,0.366381323 C23.0375097,5.07797665 23.0375097,12.6384436 18.7642023,17.2404669 C18.3259144,17.7883268 17.5589105,17.7883268 17.2301946,17.2404669 C16.7919066,16.802179 16.7919066,16.0351751 17.2301946,15.5968872 C20.6269261,11.8714397 20.6269261,5.84498054 17.2301946,2.00996109 C16.7919066,1.57167315 16.7919066,0.804669261 17.2301946,0.366381323 Z M3.20498054,0.366381323 C3.64326848,-0.0719066148 4.30070039,-0.0719066148 4.73898833,0.366381323 C5.17727626,0.804669261 5.17727626,1.57167315 4.73898833,2.00996109 C1.34225681,5.73540856 1.34225681,11.7618677 4.73898833,15.5968872 C5.17727626,16.0351751 5.17727626,16.802179 4.73898833,17.2404669 C4.41027237,17.7883268 3.64326848,17.7883268 3.20498054,17.2404669 C-1.06832685,12.6384436 -1.06832685,4.96840467 3.20498054,0.366381323 Z M14.052607,3.76311284 C14.4908949,3.3248249 15.1483268,3.3248249 15.5866148,3.76311284 C18.1067704,6.61198444 18.1067704,11.1044358 15.5866148,13.9533074 C15.2578988,14.3915953 14.4908949,14.3915953 14.052607,13.8437354 C13.6143191,13.4054475 13.6143191,12.6384436 14.052607,12.2001556 C15.8057588,10.3374319 15.8057588,7.26941634 14.052607,5.40669261 C13.6143191,4.96840467 13.6143191,4.20140078 14.052607,3.76311284 Z M6.38256809,3.65354086 C6.82085603,3.21525292 7.47828794,3.21525292 7.91657588,3.65354086 C8.35486381,4.09182879 8.35486381,4.85883268 7.91657588,5.29712062 C6.16342412,7.15984436 6.16342412,10.2278599 7.91657588,12.0905837 C8.35486381,12.5288716 8.35486381,13.2958755 7.91657588,13.7341634 C7.47828794,14.3915953 6.71128405,14.3915953 6.38256809,13.8437354 C3.86241245,10.9948638 3.86241245,6.50241245 6.38256809,3.65354086 Z M10.9845914,6.61198443 C12.1948901,6.61198443 13.1760311,7.5931254 13.1760311,8.80342412 C13.1760311,10.0137228 12.1948901,10.9948638 10.9845914,10.9948638 C9.77429268,10.9948638 8.79315171,10.0137228 8.79315171,8.80342412 C8.79315171,7.5931254 9.77429268,6.61198443 10.9845914,6.61198443 Z\',\\n  };\\n}\\n\\nexport default new mapIcons();\\n","properties":[{"name":"markers","defaultValue":"{\\n    SITE: \'M 4, 11 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0\',\\n    SITE_ACTIVE:\\n      \'M155,90 C161.627417,90 167,95.372583 167,102 C167,108.627417 161.627417,114 155,114 C148.372583,114 143,108.627417 143,102 C143,95.372583 148.372583,90 155,90 Z M155.126316,92.2736842 C149.684858,92.2736842 145.273684,96.6848576 145.273684,102.126316 C145.273684,107.567774 149.684858,111.978947 155.126316,111.978947 C160.567774,111.978947 164.978947,107.567774 164.978947,102.126316 C164.978947,96.6848576 160.567774,92.2736842 155.126316,92.2736842 Z M155.126316,95.3052632 C158.893479,95.3052632 161.947368,98.3591524 161.947368,102.126316 C161.947368,105.893479 158.893479,108.947368 155.126316,108.947368 C151.359152,108.947368 148.305263,105.893479 148.305263,102.126316 C148.305263,98.3591524 151.359152,95.3052632 155.126316,95.3052632 Z\',\\n    SITE_ZOOMED_ALT:\\n      \'M19.644 24.168C19.156 26.35 17.035 28 14.5 28s-4.656-1.65-5.143-3.832h10.287zM15.9 0c4.74.623 8.4 4.344 8.4 8.84v3.56c0 2.529 1.214 4.915 3.33 6.547.558.436.87 1.054.87 1.708 0 1.233-1.099 2.236-2.45 2.236H2.95C1.6 22.89.5 21.888.5 20.655c0-.654.312-1.272.857-1.698C3.487 17.315 4.7 14.93 4.7 12.401V8.839C4.7 4.344 8.358.623 13.1 0h2.8z\',\\n    // \'M16.0415007,19.9890404 C15.6586101,21.7042068 13.992099,23 12.0001007,23 C10.007901,23 8.34138998,21.7042068 7.95870067,19.9890404 L7.95870067,19.9890404 Z M13.1000302,1 C16.8246038,1.48975874 19.7000101,4.41342558 19.7000101,7.94520182 L19.7000101,7.94520182 L19.7000101,10.7433507 C19.7000101,12.7295843 20.653712,14.6044507 22.3170004,15.8871959 C22.7546761,16.2293839 23,16.7150996 23,17.2289328 C23,18.1976076 22.1365322,18.9854484 21.075073,18.9854484 L21.075073,18.9854484 L2.92512843,18.9854484 C1.86346784,18.9854484 1,18.1976076 1,17.2289328 C1,16.7150996 1.24532398,16.2293839 1.6733317,15.8950982 C3.34628804,14.6044507 4.29998993,12.7295843 4.29998993,10.7433507 L4.29998993,10.7433507 L4.29998993,7.94520182 C4.29998993,4.41342558 7.17438913,1.48975874 10.8999698,1 L10.8999698,1 Z\',\\n    SITE_ZOOMED: \'M 0, 11 a 11,11 0 1,0 22,0 a 11,11 0 1,0 -22,0\',\\n    NETWORK_ELEMENT:\\n      \'M17.2301946,0.366381323 C17.6684825,-0.0719066148 18.3259144,-0.0719066148 18.7642023,0.366381323 C23.0375097,5.07797665 23.0375097,12.6384436 18.7642023,17.2404669 C18.3259144,17.7883268 17.5589105,17.7883268 17.2301946,17.2404669 C16.7919066,16.802179 16.7919066,16.0351751 17.2301946,15.5968872 C20.6269261,11.8714397 20.6269261,5.84498054 17.2301946,2.00996109 C16.7919066,1.57167315 16.7919066,0.804669261 17.2301946,0.366381323 Z M3.20498054,0.366381323 C3.64326848,-0.0719066148 4.30070039,-0.0719066148 4.73898833,0.366381323 C5.17727626,0.804669261 5.17727626,1.57167315 4.73898833,2.00996109 C1.34225681,5.73540856 1.34225681,11.7618677 4.73898833,15.5968872 C5.17727626,16.0351751 5.17727626,16.802179 4.73898833,17.2404669 C4.41027237,17.7883268 3.64326848,17.7883268 3.20498054,17.2404669 C-1.06832685,12.6384436 -1.06832685,4.96840467 3.20498054,0.366381323 Z M14.052607,3.76311284 C14.4908949,3.3248249 15.1483268,3.3248249 15.5866148,3.76311284 C18.1067704,6.61198444 18.1067704,11.1044358 15.5866148,13.9533074 C15.2578988,14.3915953 14.4908949,14.3915953 14.052607,13.8437354 C13.6143191,13.4054475 13.6143191,12.6384436 14.052607,12.2001556 C15.8057588,10.3374319 15.8057588,7.26941634 14.052607,5.40669261 C13.6143191,4.96840467 13.6143191,4.20140078 14.052607,3.76311284 Z M6.38256809,3.65354086 C6.82085603,3.21525292 7.47828794,3.21525292 7.91657588,3.65354086 C8.35486381,4.09182879 8.35486381,4.85883268 7.91657588,5.29712062 C6.16342412,7.15984436 6.16342412,10.2278599 7.91657588,12.0905837 C8.35486381,12.5288716 8.35486381,13.2958755 7.91657588,13.7341634 C7.47828794,14.3915953 6.71128405,14.3915953 6.38256809,13.8437354 C3.86241245,10.9948638 3.86241245,6.50241245 6.38256809,3.65354086 Z M10.9845914,6.61198443 C12.1948901,6.61198443 13.1760311,7.5931254 13.1760311,8.80342412 C13.1760311,10.0137228 12.1948901,10.9948638 10.9845914,10.9948638 C9.77429268,10.9948638 8.79315171,10.0137228 8.79315171,8.80342412 C8.79315171,7.5931254 9.77429268,6.61198443 10.9845914,6.61198443 Z\',\\n  }","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":3}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"AppComponent","id":"component-AppComponent-70caa7971187ea42adc33d479aee19909f306fbac090cda703725407947453107c36bc35e922e56b12fbad3b5667e7603883c2854df494d5723ff04ebabfaf23","file":"src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"title","defaultValue":"\'telco-web-components\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-root\',\\r\\n  templateUrl: \'./app.component.html\',\\r\\n  styleUrls: [\'./app.component.scss\']\\r\\n})\\r\\nexport class AppComponent {\\r\\n  title = \'telco-web-components\';\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app.component.scss"}],"stylesData":"","templateData":"<app-telco-table></app-telco-table>\\r\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-2af8b7b0f4016de00a83e0d6ff4ac2d367e4074fe234da6fd609733d70c69f410d0c55b0c23b14b17a5a1cb1009acc2e1b2da32539240e5179d86b2f2b0a33b1","file":"src/app/button/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"telco-button","styleUrls":["./button.component.scss"],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"inputsClass":[{"name":"backgroundColor","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"buttonFontSize","defaultValue":"\'10px\'","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"displayIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]},{"name":"iconLink","defaultValue":"\'../../assets/perm_identity_white_48dp.svg\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"iconRight","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"primaryButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"roundedButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"title","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]}],"outputsClass":[{"name":"buttonClick","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":17,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"buttonClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'telco-button\',\\r\\n  templateUrl: \'./button.component.html\',\\r\\n  styleUrls: [\'./button.component.scss\'],\\r\\n})\\r\\n\\r\\nexport class ButtonComponent {\\r\\n  @Input() title: string = \'\';\\r\\n  @Input() backgroundColor?: string;\\r\\n  @Input() primaryButton?: boolean = false;\\r\\n  @Input() displayIcon: boolean = false;\\r\\n  @Input() roundedButton: boolean = true;\\r\\n  @Input() iconLink: string = \'../../assets/perm_identity_white_48dp.svg\';\\r\\n  @Input() iconRight: boolean = false;\\r\\n  @Output() buttonClick = new EventEmitter<any>();\\r\\n  @Input() buttonFontSize: string = \'10px\';\\r\\n\\r\\n\\r\\n\\r\\n  buttonClicked() {\\r\\n    this.buttonClick.emit();\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"button {\\r\\n\\tpadding: 0 0.5rem;\\r\\n}\\r\\n.primary {\\r\\n\\tbackground-color: #660099;\\r\\n\\tcolor: white;\\r\\n}\\r\\n.basicStyle {\\r\\n\\tcolor: black;\\r\\n\\tbackground-color: aqua;\\r\\n}\\r\\n\\r\\n.basic-layout {\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: space-between;\\r\\n\\talign-items: center;\\r\\n}\\r\\n\\r\\n.rounded {\\r\\n\\tborder-radius: 4rem;\\r\\n}\\r\\n\\r\\n.iconRightClass {\\r\\n\\tflex-direction: row-reverse;\\r\\n}\\r\\n","styleUrl":"./button.component.scss"}],"stylesData":"","templateData":"<button\\r\\n\\t[ngStyle]=\\"{\\r\\n\\t\\t\'background-color\': backgroundColor\\r\\n\\t}\\"\\r\\n\\t(click)=\\"buttonClicked()\\"\\r\\n\\tclass=\\"material-icons-outlined basic-layout pointer\\"\\r\\n\\t[ngClass]=\\"{\\r\\n\\t\\tprimary: primaryButton,\\r\\n\\t\\trounded: roundedButton,\\r\\n\\t\\tbasicStyle: !primaryButton,\\r\\n\\t\\ticonRightClass: iconRight\\r\\n\\t}\\"\\r\\n>\\r\\n\\r\\n\\r\\n\\t<img [src]=\\"iconLink\\" alt=\\"\\" [ngClass]=\\"{ hidden: !displayIcon }\\" />\\r\\n\\r\\n\\r\\n\\t<h2 [ngStyle]=\\"{ \'font-size\': buttonFontSize }\\">{{ title }}</h2>\\r\\n\\r\\n\\r\\n</button>\\r\\n\\r\\n\\r\\n"},{"name":"TelcoBarChartComponent","id":"component-TelcoBarChartComponent-8e4cfdd46d40bb485a09c07abf9291fd7191b1352b45131bc492efdd1780abdce9c6192ff06452298d6e4f8aa869767f6d7f0b19777720d44209c216701c5c45","file":"src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-telco-bar-chart","styleUrls":["./telco-bar-chart.component.scss"],"styles":[],"templateUrl":["./telco-bar-chart.component.html"],"viewProviders":[],"inputsClass":[{"name":"barChartData","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":13,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { PlotlyModule } from \'angular-plotly.js\';\\nimport * as PlotlyJS from \'plotly.js-dist-min\';\\n\\nPlotlyModule.plotlyjs = PlotlyJS;\\n\\n@Component({\\n\\tselector: \'app-telco-bar-chart\',\\n\\ttemplateUrl: \'./telco-bar-chart.component.html\',\\n\\tstyleUrls: [\'./telco-bar-chart.component.scss\'],\\n})\\nexport class TelcoBarChartComponent implements OnInit {\\n\\t@Input() barChartData: any = {};\\n\\tconstructor() {}\\n\\n\\tngOnInit(): void {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./telco-bar-chart.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"implements":["OnInit"],"templateData":"<plotly-plot [data]=\\"barChartData.data\\" [layout]=\\"barChartData.layout\\"></plotly-plot>\\n"},{"name":"TelcoCardsComponent","id":"component-TelcoCardsComponent-20fe95ddbbeb7a434cc11c58beddd175539b951e002006715b3d1e85b54b5304ff7f9af5caf4a31760deddc28f92218730427576cecbddb61fc56e100124991d","file":"src/app/telco-cards/telco-cards.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-telco-cards","styleUrls":["./telco-cards.component.scss"],"styles":[],"templateUrl":["./telco-cards.component.html"],"viewProviders":[],"inputsClass":[{"name":"cardIcon","defaultValue":"\'../../assets/cards-icon/Social_notifications.svg\'","deprecated":false,"deprecationMessage":"","line":9,"type":"string","decorators":[]},{"name":"cardSubtitle","defaultValue":"\'1390\'","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"cardSubtitlePercentage","defaultValue":"12","deprecated":false,"deprecationMessage":"","line":12,"type":"number","decorators":[]},{"name":"cardTitle","defaultValue":"\'Total Alarm\'","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"negativePercentageIcon","defaultValue":"\'../../assets/cards-icon/red-arrow-up.svg\'","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"positivePercentageIcon","defaultValue":"\'../../assets/cards-icon/green-thumbs-up.svg\'","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]}],"outputsClass":[{"name":"viewAllClicked","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":16,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"viewAllClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\n\\n@Component({\\n\\tselector: \'app-telco-cards\',\\n\\ttemplateUrl: \'./telco-cards.component.html\',\\n\\tstyleUrls: [\'./telco-cards.component.scss\'],\\n})\\nexport class TelcoCardsComponent {\\n\\t@Input() cardIcon: string = \'../../assets/cards-icon/Social_notifications.svg\';\\n\\t@Input() cardTitle: string = \'Total Alarm\';\\n\\t@Input() cardSubtitle: string = \'1390\';\\n\\t@Input() cardSubtitlePercentage: number = 12;\\n\\t@Input() positivePercentageIcon: string = \'../../assets/cards-icon/green-thumbs-up.svg\';\\n\\t@Input() negativePercentageIcon: string = \'../../assets/cards-icon/red-arrow-up.svg\';\\n\\n\\t@Output() viewAllClicked = new EventEmitter<any>();\\n\\n\\tconstructor() {}\\n\\n\\tviewAllClick() {\\n\\t\\tthis.viewAllClicked.emit();\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"html {\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-family: \'Noto Sans\', sans-serif;\\r\\n\\tfont-style: normal;\\r\\n}\\r\\np {\\r\\n\\tmargin: 0;\\r\\n}\\r\\n\\r\\n.card {\\r\\n\\tpadding: 1rem 1.5rem;\\r\\n\\tbackground: #ffffff;\\r\\n\\tborder: 1px solid #e2e7ef;\\r\\n\\tborder-radius: 0.2rem;\\r\\n\\twidth: 291px;\\r\\n\\theight: 86px;\\r\\n}\\r\\n\\r\\n.item-1-upper {\\r\\n\\theight: fit-content;\\r\\n\\tp {\\r\\n\\t\\tfont-size: 1rem;\\r\\n\\t\\tfont-weight: 400;\\r\\n\\t\\tcolor: #636a75;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.lower-left {\\r\\n\\tp {\\r\\n\\t\\tfont-weight: 700;\\r\\n\\t\\tfont-size: 1.5rem;\\r\\n\\t\\tcolor: #660099;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.lower-right {\\r\\n\\tbackground: #e0f2ee;\\r\\n\\tborder-radius: 0.1rem;\\r\\n\\theight: 1.8rem;\\r\\n\\tp {\\r\\n\\t\\tfont-weight: 700;\\r\\n\\t\\tfont-size: 1rem;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\tcolor: #36947d;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.red {\\r\\n\\tbackground: rgba(225, 38, 38, 0.1);\\r\\n\\tp {\\r\\n\\t\\tcolor: #e12626;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.card-item-3 {\\r\\n\\tmin-height: 54px;\\r\\n\\tp {\\r\\n\\t\\tpadding: 0.2rem;\\r\\n\\t\\tfont-weight: 400;\\r\\n\\t\\tfont-size: 1rem;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\tcolor: #2f54eb;\\r\\n\\t}\\r\\n}\\r\\n","styleUrl":"./telco-cards.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":16},"templateData":"<div fxLayout=\\"row\\" fxLayoutAlign=\\"center center\\" class=\\"card\\">\\n\\t<div fxLayout=\\"row\\" fxFlex=\\"100\\" fxLayoutAlign=\\"start center\\" class=\\"card-items\\">\\n\\t\\t<div class=\\"card-item-1\\" fxFlex=\\"20\\" fxLayoutAlign=\\"center center\\">\\n\\t\\t\\t<img [src]=\\"cardIcon\\" alt=\\"\\" />\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\"card-item-2\\" fxFlex=\\"48\\" fxLayout=\\"column\\" fxLayoutGap=\\"4px\\">\\n\\t\\t\\t<div class=\\"item-1-upper\\" fxFlex=\\"53\\">\\n\\t\\t\\t\\t<p>{{ cardTitle }}</p>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\"item-2-lower\\" fxLayout=\\"row\\" fxLayoutGap=\\"6px\\" fxFlex=\\"47\\" fxLayoutAlign=\\"start center\\">\\n\\t\\t\\t\\t<div fxFlex=\\"46\\" class=\\"lower-left\\" fxLayout=\\"start center\\">\\n\\t\\t\\t\\t\\t<p>{{ cardSubtitle }}</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\x3c!-- if the given percentage is greater than 0 --\x3e\\n\\t\\t\\t\\t<div fxFlex=\\"52\\" class=\\"lower-right\\" fxLayout=\\"row\\" fxLayoutAlign=\\"space-evenly center\\" *ngIf=\\"cardSubtitlePercentage >= 0\\">\\n\\t\\t\\t\\t\\t<p>{{ cardSubtitlePercentage }}%</p>\\n\\t\\t\\t\\t\\t<img [src]=\\"positivePercentageIcon\\" alt=\\"\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\x3c!-- if it is less than 0 --\x3e\\n\\t\\t\\t\\t<div fxFlex=\\"52\\" class=\\"lower-right red\\" fxLayout=\\"row\\" fxLayoutAlign=\\"space-evenly center\\" *ngIf=\\"cardSubtitlePercentage < 0\\">\\n\\t\\t\\t\\t\\t<p>{{ cardSubtitlePercentage }}%</p>\\n\\t\\t\\t\\t\\t<img [src]=\\"negativePercentageIcon\\" alt=\\"\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\"card-item-3\\" fxFlex=\\"32\\" fxLayout=\\"row\\" fxLayoutAlign=\\"end end\\">\\n\\t\\t\\t<p (click)=\\"viewAllClick()\\">View All</p>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n"},{"name":"TelcoListComponent","id":"component-TelcoListComponent-a6fe6c581e20703ff43aca38c2bbd706f1f58db9a4aa3c95da7c3822ee1b1d641e8b988f2e0f5be70e118eeb3d382617f72bb85bfb62a99e757fe58b86fafb1e","file":"src/app/telco-list/telco-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-telco-list","styleUrls":["./telco-list.component.scss"],"styles":[],"templateUrl":["./telco-list.component.html"],"viewProviders":[],"inputsClass":[{"name":"addTag","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]},{"name":"bindLabel","defaultValue":"\'name\'","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]},{"name":"bindLabelArray","defaultValue":"[\'name\', \'value\']","deprecated":false,"deprecationMessage":"","line":21,"type":"any","decorators":[]},{"name":"customDropdownIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":23,"type":"boolean","decorators":[]},{"name":"disableInput","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"dropdownlist","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":11,"type":"any[]","decorators":[]},{"name":"fontFamily","defaultValue":"\'Noto Sans, sans-serif\'","deprecated":false,"deprecationMessage":"","line":25,"type":"string","decorators":[]},{"name":"itemsLimit","defaultValue":"1","deprecated":false,"deprecationMessage":"","line":19,"type":"number","decorators":[]},{"name":"multiLabelBinding","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"multiselect","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"selectedDropdownlist","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":15,"type":"any[]","decorators":[]},{"name":"showCustomOption","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"withInitial","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":18,"type":"boolean","decorators":[]},{"name":"withLimitInitial","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":24,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"autocompleteChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter"},{"name":"autocompleteOptionSelect","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter"},{"name":"onAdd","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":27,"type":"EventEmitter"},{"name":"onChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":29,"type":"EventEmitter"},{"name":"onClear","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":30,"type":"EventEmitter"},{"name":"onPasteSearchedItem","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":33,"type":"EventEmitter"},{"name":"onRemove","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":28,"type":"EventEmitter"},{"name":"onSearch","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":31,"type":"EventEmitter"},{"name":"searchedItem","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":32,"type":"EventEmitter"}],"propertiesClass":[{"name":"actionSource","defaultValue":"new Subject<any>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[121]},{"name":"currentAction","defaultValue":"this.actionSource.asObservable()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41},{"name":"insertSearchIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":37},{"name":"isPaste","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39},{"name":"subscription","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":38}],"methodsClass":[{"name":"bindCustomLabel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":""},{"name":"customSearch","args":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":""},{"name":"item","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnChanges","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"onAddValue","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onAutoCompleteChange","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onChangeValue","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onDropdownSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOptionSelected","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onPasteSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onRemoveValue","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSearchValue","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggleDisabled","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from \'@angular/core\';\\nimport { Subject } from \'rxjs\';\\nimport { debounceTime } from \'rxjs/operators\';\\n\\n@Component({\\n\\tselector: \'app-telco-list\',\\n\\ttemplateUrl: \'./telco-list.component.html\',\\n\\tstyleUrls: [\'./telco-list.component.scss\'],\\n})\\nexport class TelcoListComponent {\\n\\t@Input() dropdownlist: any[] = [];\\n\\t@Input() multiselect = true;\\n\\t@Input() addTag = true;\\n\\t@Input() disableInput = false;\\n\\t@Input() selectedDropdownlist: any[] = [];\\n\\t@Input() showCustomOption = false;\\n\\t@Input() bindLabel: any = \'name\';\\n\\t@Input() withInitial = false;\\n\\t@Input() itemsLimit = 1;\\n\\t@Input() multiLabelBinding = false;\\n\\t@Input() bindLabelArray: any = [\'name\', \'value\'];\\n\\t@Input() placeholder = \'\';\\n\\t@Input() customDropdownIcon = false;\\n\\t@Input() withLimitInitial = false;\\n\\t@Input() fontFamily = \'Noto Sans, sans-serif\';\\n\\n\\t@Output() onAdd = new EventEmitter<any>();\\n\\t@Output() onRemove = new EventEmitter<any>();\\n\\t@Output() onChange = new EventEmitter<any>();\\n\\t@Output() onClear = new EventEmitter<any>();\\n\\t@Output() onSearch = new EventEmitter<any>();\\n\\t@Output() searchedItem = new EventEmitter<any>();\\n\\t@Output() onPasteSearchedItem = new EventEmitter<any>();\\n\\t@Output() autocompleteChange = new EventEmitter<any>();\\n\\t@Output() autocompleteOptionSelect = new EventEmitter<any>();\\n\\n\\tinsertSearchIcon = \'\';\\n\\tsubscription: any;\\n\\tisPaste = false;\\n\\tprivate actionSource = new Subject<any>();\\n\\tcurrentAction = this.actionSource.asObservable();\\n\\n\\tpublic get classes(): string[] {\\n\\t\\treturn [this.withInitial ? \'with-initial\' : \'\'];\\n\\t}\\n\\n\\tngOnInit() {\\n\\t\\tthis.subscription = this.currentAction.pipe(debounceTime(500)).subscribe((value: string) => {\\n\\t\\t\\tthis.searchedItem.emit(value);\\n\\t\\t\\tthis.onSearch.emit(value);\\n\\t\\t});\\n\\t}\\n\\n\\tngOnDestroy(): void {\\n\\t\\tthis.subscription.unsubscribe();\\n\\t}\\n\\n\\tngOnChanges() {\\n\\t\\tthis.bindCustomLabel();\\n\\t\\tswitch (this.bindLabelArray.length) {\\n\\t\\t\\tcase 1: {\\n\\t\\t\\t\\tthis.bindLabelArray = [this.bindLabelArray[0], \'name\', \'value\'];\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tcase 2: {\\n\\t\\t\\t\\tthis.bindLabelArray = [this.bindLabelArray[0], this.bindLabelArray[1], \'value\'];\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\tthis.bindLabelArray = [\'name\', \'value\', \'id\'];\\n\\t\\t}\\n\\t}\\n\\n\\ttoggleDisabled() {\\n\\t\\tconst item: any = this.dropdownlist[0];\\n\\t\\titem.disabled = !item.disabled;\\n\\t}\\n\\n\\tonAddValue(event: any) {\\n\\t\\tthis.onAdd.emit(event);\\n\\t}\\n\\n\\tonRemoveValue(event: any) {\\n\\t\\tthis.onRemove.emit(event);\\n\\t}\\n\\n\\tonChangeValue(event: any) {\\n\\t\\tthis.onChange.emit(event);\\n\\t}\\n\\n\\tonSearchValue(event: any) {\\n\\t\\tif (!this.isPaste) {\\n\\t\\t\\tthis.onSearch.emit(event);\\n\\t\\t} else {\\n\\t\\t\\tthis.isPaste = false;\\n\\t\\t}\\n\\t}\\n\\n\\tonPasteSearch(event: any) {\\n\\t\\tthis.isPaste = true;\\n\\t\\tthis.onPasteSearchedItem.emit(event.clipboardData.getData(\'Text\'));\\n\\t\\tsetTimeout(() => {\\n\\t\\t\\tevent.target.value = null;\\n\\t\\t}, 0);\\n\\t}\\n\\n\\tonDropdownSearch(event: any) {\\n\\t\\tif (!this.isPaste) {\\n\\t\\t\\tthis.actionSource.next(event.term);\\n\\t\\t} else {\\n\\t\\t\\tthis.isPaste = false;\\n\\t\\t}\\n\\t}\\n\\n\\tonAutoCompleteChange(event: any) {\\n\\t\\tthis.autocompleteChange.emit(event);\\n\\t}\\n\\n\\tonOptionSelected(event: any) {\\n\\t\\tthis.bindCustomLabel();\\n\\t\\tthis.autocompleteOptionSelect.emit(event);\\n\\t}\\n\\n\\tbindCustomLabel() {\\n\\t\\tif (this.multiLabelBinding && this.showCustomOption && this.bindLabelArray?.length > 0 && this.dropdownlist?.length > 0) {\\n\\t\\t\\tthis.dropdownlist = this.dropdownlist.map((bindLabelValue: any) => {\\n\\t\\t\\t\\tbindLabelValue.bindLabel = \'\';\\n\\t\\t\\t\\tbindLabelValue.bindLabel = this.bindLabelArray.map((element: any) => bindLabelValue[element]).join(\'\');\\n\\t\\t\\t\\treturn bindLabelValue;\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tcustomSearch(term: string, item: any) {\\n\\t\\t// Creating and array of space saperated term and removing the empty values using filter\\n\\t\\tconst terms: string[] = term.toLowerCase().split(\' \').filter(Boolean);\\n\\t\\tconst search = item.bindLabel ? item.bindLabel.toLowerCase() : \'\';\\n\\t\\t// every term should be present in the search string\\n\\t\\treturn terms.every((termValue: string) => search.indexOf(termValue) !== -1);\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container {\\r\\n\\tflex-flow: nowrap row !important;\\r\\n\\t-webkit-flex-direction: row-reverse !important;\\r\\n\\tflex-direction: row-reverse !important;\\r\\n}\\r\\n\\r\\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value {\\r\\n\\tdisplay: flex;\\r\\n\\tbackground: #e6e6e6;\\r\\n\\tborder-radius: 4px;\\r\\n}\\r\\n\\r\\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right {\\r\\n\\torder: 2;\\r\\n\\tborder-left: 0;\\r\\n}\\r\\n\\r\\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right:hover {\\r\\n\\tbackground: #e6e6e6;\\r\\n}\\r\\n\\r\\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-label {\\r\\n\\torder: 1;\\r\\n\\tpadding: 1px 3px;\\r\\n\\tcolor: #000000;\\r\\n}\\r\\n\\r\\n::ng-deep .ng-select.insertSearchIcon.ng-select-multiple .ng-select-container .ng-arrow-wrapper .ng-arrow,\\r\\n::ng-deep .ng-select.insertSearchIcon.ng-select-single .ng-select-container .ng-arrow-wrapper .ng-arrow {\\r\\n\\tborder-color: none;\\r\\n\\tborder-style: none;\\r\\n\\tborder-width: 0;\\r\\n}\\r\\n\\r\\n::ng-deep .ng-select.insertSearchIcon.ng-select-multiple .ng-select-container .ng-arrow-wrapper,\\r\\n::ng-deep .ng-select.insertSearchIcon.ng-select-single .ng-select-container .ng-arrow-wrapper {\\r\\n\\tbackground-image: url(\'https://assets.dds.iata.org/assets/icons/SearchIcon.svg\');\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tbackground-size: 14px 14px;\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n\\r\\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder {\\r\\n\\ttop: 8px;\\r\\n\\tleft: 5px;\\r\\n}\\r\\n\\r\\n::ng-deep .multiselect-autocomplete.ng-select .ng-select-container {\\r\\n\\toverflow: inherit !important;\\r\\n}\\r\\n\\r\\n::ng-deep .multiselect-autocomplete .exclude-items-container {\\r\\n\\tdisplay: none;\\r\\n\\tposition: absolute;\\r\\n\\tjustify-content: space-between;\\r\\n\\tpadding-left: 0.4rem;\\r\\n\\tpadding-right: 0.4rem;\\r\\n\\tleft: auto;\\r\\n\\tright: -20px;\\r\\n\\ttop: 30px;\\r\\n\\tz-index: 9999;\\r\\n}\\r\\n\\r\\n::ng-deep .multiselect-autocomplete .ng-value.item-length .inner-wrap {\\r\\n\\tposition: relative;\\r\\n}\\r\\n\\r\\n::ng-deep .multiselect-autocomplete .ng-value.item-length {\\r\\n\\tcursor: pointer;\\r\\n\\tz-index: 9;\\r\\n}\\r\\n\\r\\n::ng-deep .multiselect-autocomplete .ng-value.item-length:hover .exclude-items-container {\\r\\n\\tdisplay: flex;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container > ul.items-other {\\r\\n\\tpadding: 0.1rem;\\r\\n\\tbackground: rgba(0, 0, 0, 0.8);\\r\\n\\tborder-radius: 8px;\\r\\n\\tbox-shadow: 0px 0px 4px 0px #c3c3c3;\\r\\n\\tcolor: #fff;\\r\\n\\tmin-width: 153px;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container > ul.items-other:after {\\r\\n\\tposition: absolute;\\r\\n\\tcontent: \' \';\\r\\n\\ttop: -8px;\\r\\n\\tright: 14%;\\r\\n\\tmargin-left: -4px;\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\tborder-left: 8px solid transparent;\\r\\n\\tborder-right: 8px solid transparent;\\r\\n\\tborder-bottom: 8px solid rgba(0, 0, 0, 0.8);\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container > ul.items-other li > span {\\r\\n\\tfont-size: 12px;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container > ul.items-other li {\\r\\n\\tlist-style: none;\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: space-evenly;\\r\\n\\tpadding: 8px 0px;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container > ul.items-other li span {\\r\\n\\tmargin-left: 0.2rem;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container > .tags.tags-blue:hover ~ ul.items-other {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container ul.items-other .items-title {\\r\\n\\tword-break: break-word;\\r\\n\\tmin-width: 100px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\tline-height: 22px;\\r\\n\\tmargin-left: 0px;\\r\\n\\ttext-overflow: ellipsis;\\r\\n\\tmargin-right: 4px;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container .tags {\\r\\n\\twidth: 24px;\\r\\n\\theight: 24px;\\r\\n\\tline-height: 22px;\\r\\n\\ttext-align: center;\\r\\n\\tfont-size: 9.6px !important;\\r\\n\\tborder-radius: 50px;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container .tags.tags-red {\\r\\n\\tcolor: #b34195;\\r\\n\\tbackground-color: #fdeef9;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container .tags.tags-green {\\r\\n\\tcolor: #23702a;\\r\\n\\tbackground-color: #eaf4eb;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container .tags.tags-purple {\\r\\n\\tcolor: #511c8e;\\r\\n\\tbackground-color: #efe9f5;\\r\\n}\\r\\n\\r\\n::ng-deep .exclude-items-container .tags.tags-blue {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tcolor: #0f197b;\\r\\n\\tfont-weight: 500;\\r\\n\\tfont-size: 12px !important;\\r\\n\\tline-height: 30px;\\r\\n\\tmargin-top: -4px;\\r\\n\\tbackground-color: #f4f5ff;\\r\\n}\\r\\n\\r\\n.option-label-size {\\r\\n\\tfont-size: 12px;\\r\\n}\\r\\n\\r\\n.option-line-height {\\r\\n\\tline-height: 10px;\\r\\n}\\r\\n\\r\\n.item-length {\\r\\n\\tposition: absolute;\\r\\n\\tright: 45px;\\r\\n}\\r\\n\\r\\n.wrap-text {\\r\\n\\tdisplay: block;\\r\\n\\twhite-space: nowrap;\\r\\n\\twidth: 70px;\\r\\n\\toverflow: hidden;\\r\\n\\ttext-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.initial {\\r\\n\\tdisplay: none;\\r\\n}\\r\\n\\r\\n.with-initial .initial {\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\tborder-radius: 100px;\\r\\n\\tbackground-color: #fdeef9;\\r\\n\\tcolor: #c162a8;\\r\\n\\tfont-size: 7px;\\r\\n\\tpadding: 0;\\r\\n\\theight: 18px;\\r\\n\\twidth: 18px;\\r\\n\\tmargin: 2px;\\r\\n\\tfont-style: normal;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n.with-initial .ng-value {\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\tborder: 1px solid #0f197b;\\r\\n\\tborder-radius: 50px !important;\\r\\n\\tbackground: #fff !important;\\r\\n}\\r\\n\\r\\n.with-initial .ng-value .ng-value-label {\\r\\n\\tdisplay: flex;\\r\\n}\\r\\n\\r\\n.with-initial .item-length {\\r\\n\\tbackground-color: #f4f5ff !important;\\r\\n\\tborder-color: #f4f5ff;\\r\\n\\tfont-size: 10px !important;\\r\\n\\tmin-width: 27px;\\r\\n}\\r\\n\\r\\n.with-initial .ng-value.item-length .ng-value-label {\\r\\n\\tpadding: 0;\\r\\n\\tcolor: #0f197b;\\r\\n}\\r\\n\\r\\n.with-initial .ng-value .ng-value-icon.right {\\r\\n\\tbackground-color: #0f197b;\\r\\n\\tborder-radius: 50px;\\r\\n\\tcolor: #fff;\\r\\n\\twidth: 14px;\\r\\n\\theight: 14px;\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\tmargin-right: 4px;\\r\\n\\tfont-size: 13px;\\r\\n\\tpadding: 0;\\r\\n}\\r\\n\\r\\n.option-line-height-code {\\r\\n\\tfont-weight: 400;\\r\\n\\tfont-size: 13px;\\r\\n\\tmargin-top: 2px;\\r\\n}\\r\\n\\r\\n.user-detail {\\r\\n\\tdisplay: flex;\\r\\n\\tmargin-right: 2em;\\r\\n}\\r\\n\\r\\n@media (max-width: 480px) {\\r\\n\\t.with-initial .item-length {\\r\\n\\t\\tright: 30px;\\r\\n\\t}\\r\\n}\\r\\n","styleUrl":"./telco-list.component.scss"}],"stylesData":"","accessors":{"classes":{"name":"classes","getSignature":{"name":"classes","type":"[]","returnType":"string[]","line":43}}},"templateData":"<ng-container *ngIf=\\"!showCustomOption\\" >\\n  <ng-select (add)=\\"onAddValue($event)\\" (change)=\\"onChangeValue($event)\\" (paste)=\\"onPasteSearch($event)\\"\\n    (remove)=\\"onRemoveValue($event)\\" (search)=\\"onSearchValue($event)\\" [(ngModel)]=\\"selectedDropdownlist\\"\\n    [addTag]=\\"addTag\\" [bindLabel]=\\"bindLabel\\" [items]=\\"dropdownlist\\" [multiple]=\\"multiselect\\"\\n    [ngClass]=\\"{classes: true,insertSearchIcon:customDropdownIcon}\\" [placeholder]=\\"placeholder\\" [virtualScroll]=\\"true\\"\\n    [readonly]=\\"disableInput\\" class=\\"multiselect-autocomplete\\" [ngStyle]=\\"{\'font-family\':fontFamily }\\">\\n    <ng-template let-clear=\\"clear\\" let-items=\\"items\\" ng-multi-label-tmp>\\n      <div class=\\"user-detail\\">\\n        <div *ngFor=\\"let item of items | slice:0:itemsLimit\\" class=\\"ng-value\\">\\n          <span class=\\"ng-value-label\\" title=\\"{{$any(item)[bindLabelArray[0]]}}\\"\\n            [ngClass]=\\"{\'wrap-text\':$any(item)[bindLabelArray[0]].length>4}\\"><em class=\\"initial\\">\\n              {{$any(item).symbol}}</em>\\n            <span>{{$any(item)[bindLabelArray[0]]}}</span></span>\\n          <span (click)=\\"clear(item)\\" aria-hidden=\\"true\\" class=\\"ng-value-icon right\\">×</span>\\n        </div>\\n      </div>\\n      <div *ngIf=\\"items.length > itemsLimit\\" class=\\"ng-value item-length\\">\\n        <div class=\\"inner-wrap\\">\\n          <span class=\\"ng-value-label\\">+{{items.length - itemsLimit}}</span>\\n          <div class=\\"exclude-items-container\\">\\n            <ul class=\\"items-other\\">\\n              <li *ngFor=\\"let item of items | slice:itemsLimit\\">\\n                <div class=\\"d-flex\\">\\n                  <span *ngIf=\\"withLimitInitial\\" class=\\"tags tags-green mr-2\\">{{$any(item).symbol}}</span><span\\n                    class=\\"items-title\\">{{$any(item)[bindLabelArray[0]]}}</span>\\n                  <span (click)=\\"clear(item)\\" aria-hidden=\\"true\\" class=\\"ng-value-icon right\\">×</span>\\n                </div>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </ng-select>\\n</ng-container>\\n<ng-container *ngIf=\\"showCustomOption\\">\\n  <ng-select (change)=\\"onAutoCompleteChange($event)\\" (click)=\\"onOptionSelected($event)\\" (paste)=\\"onPasteSearch($event)\\"\\n    (search)=\\"onDropdownSearch($event)\\" [(ngModel)]=\\"selectedDropdownlist\\" [bindLabel]=\\"bindLabel\\"\\n    [items]=\\"dropdownlist\\" [multiple]=\\"multiselect\\" [ngClass]=\\"{classes: true,insertSearchIcon:customDropdownIcon}\\"\\n    [placeholder]=\\"placeholder\\" [searchFn]=\\"customSearch\\" [searchWhileComposing]=\\"false\\" [virtualScroll]=\\"true\\"\\n    class=\\"multiselect-autocomplete\\" [ngStyle]=\\"{\'font-family\':fontFamily }\\">\\n    <ng-template #labelTemplate *ngIf=\\"showCustomOption\\" let-item=\\"item\\" ng-option-tmp>\\n      <div class=\\"option-line-height\\">\\n        <div>\\n          <h6 class=\\"font-weight-bold d-flex\\">{{item[bindLabelArray[0]]}}\\n            <span *ngIf=\\"multiLabelBinding && bindLabelArray?.length > 1\\" class=\\"ml-2 option-line-height-code\\">({{\\n              item[bindLabelArray[1]] }})</span>\\n          </h6>\\n        </div>\\n        <span class=\\"option-label-size\\">{{ item[bindLabelArray[2]] }}</span>\\n      </div>\\n    </ng-template>\\n    <ng-template let-clear=\\"clear\\" let-items=\\"items\\" ng-multi-label-tmp>\\n      <div class=\\"user-detail\\">\\n        <div *ngFor=\\"let item of items | slice:0:itemsLimit\\" class=\\"ng-value\\">\\n          <span class=\\"ng-value-label\\" title=\\"{{$any(item)[bindLabelArray[0]]}}\\"\\n            [ngClass]=\\"{\'wrap-text\':$any(item)[bindLabelArray[0]].length>4}\\"><em class=\\"initial\\">\\n              {{$any(item).symbol}}</em>\\n            <span>{{$any(item)[bindLabelArray[0]]}}</span></span>\\n          <span (click)=\\"clear(item)\\" aria-hidden=\\"true\\" class=\\"ng-value-icon right\\">×</span>\\n        </div>\\n      </div>\\n      <div *ngIf=\\"items.length > itemsLimit\\" class=\\"ng-value item-length\\">\\n        <div class=\\"inner-wrap\\">\\n          <span class=\\"ng-value-label\\">+{{items.length - itemsLimit}}</span>\\n          <div class=\\"exclude-items-container\\">\\n            <ul class=\\"items-other\\">\\n              <li *ngFor=\\"let item of items | slice:itemsLimit\\">\\n                <div class=\\"d-flex\\">\\n                  <span *ngIf=\\"withLimitInitial\\" class=\\"tags tags-green mr-2\\">{{$any(item).symbol}}</span><span\\n                    class=\\"items-title\\">{{$any(item)[bindLabelArray[0]]}}</span>\\n                  <span (click)=\\"clear(item)\\" aria-hidden=\\"true\\" class=\\"ng-value-icon right\\">×</span>\\n                </div>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </ng-select>\\n</ng-container>\\n"},{"name":"TelcoMapsComponent","id":"component-TelcoMapsComponent-053f7dbad5c9e1e3e05e6baf1d1f58e2cf126f2c911f1d2a1d90e0e937a207dd9e5e87866b4422bed62ef25f111d3f84e042435fe3ce1c1dad0c716e61f56e51","file":"src/app/telco-maps/telco-maps.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-telco-maps","styleUrls":["./telco-maps.component.scss"],"styles":[],"templateUrl":["./telco-maps.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":138,"type":"IMapConfig","decorators":[]},{"name":"markers","deprecated":false,"deprecationMessage":"","line":143,"type":"IMapMarkers","decorators":[]}],"outputsClass":[{"name":"hideDialog","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":157,"type":"EventEmitter<any>"},{"name":"showDialog","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":155,"type":"EventEmitter<any>"}],"propertiesClass":[{"name":"_mapConfig","deprecated":false,"deprecationMessage":"","type":"IMapConfig","optional":false,"description":"","line":66},{"name":"_mapDefaultConfig","defaultValue":"{\\n\\t\\ticonDefault: \'SITE\',\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\n\\t\\ticonColor: \'#E04B4B\',\\n\\t\\ticonAnchorX: 31,\\n\\t\\ticonAnchorY: -33,\\n\\t\\tzoomLevelToChangeIcon: 14,\\n\\t\\tcenterOnMapUpdate: true,\\n\\t\\tcenterOnBounds: true,\\n\\t\\tshowMesh: true,\\n\\t\\tfilterMarkersOutsideBounds: false,\\n\\t}","deprecated":false,"deprecationMessage":"","type":"IMapConfig","optional":false,"description":"","line":67},{"name":"_markers","deprecated":false,"deprecationMessage":"","type":"IMapMarkers","optional":false,"description":"","line":63},{"name":"bounds","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":61},{"name":"boundsBeforeSpiderfy","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":82},{"name":"data2","defaultValue":"[\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-123\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t]","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":89},{"name":"iw","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":60},{"name":"map","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":58},{"name":"mapElement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":132,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'map\'"}]},{"name":"markersHash","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":64},{"name":"mesh","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":65},{"name":"neId","defaultValue":"\'ne_135\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":87},{"name":"oms","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59},{"name":"preSpiderfyTimerref","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":83},{"name":"spiderfyTimerref","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":84},{"name":"staticMarker","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":80},{"name":"ticketid","defaultValue":"\'ticket-123\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":88},{"name":"unspiderfyTimerref","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":85},{"name":"viewInit","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":81},{"name":"zoomLevel","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":62}],"methodsClass":[{"name":"addLine","args":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":""},{"name":"sourceId","type":"string","deprecated":false,"deprecationMessage":""},{"name":"destinationId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":392,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sourceId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destinationId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addMarker","args":[{"name":"marker","type":"any","deprecated":false,"deprecationMessage":""},{"name":"map","type":"any","deprecated":false,"deprecationMessage":""},{"name":"oms","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"this.oms"},{"name":"iw","type":"google.maps.InfoWindow","deprecated":false,"deprecationMessage":"","defaultValue":"this.iw"},{"name":"markers","type":"Array<google.maps.Marker>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":360,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"marker","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"map","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"oms","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"this.oms","tagName":{"text":"param"}},{"name":"iw","type":"google.maps.InfoWindow","deprecated":false,"deprecationMessage":"","defaultValue":"this.iw","tagName":{"text":"param"}},{"name":"markers","type":"Array<google.maps.Marker>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"centerMap","args":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":""},{"name":"markers","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":607,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"markers","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"filterMarkers","args":[{"name":"markers","type":"any","deprecated":false,"deprecationMessage":""},{"name":"bounds","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":701,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"markers","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"bounds","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateLayout","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":483,"deprecated":false,"deprecationMessage":""},{"name":"getActions","args":[{"name":"data","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":501,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getinfoContent","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":450,"deprecated":false,"deprecationMessage":""},{"name":"getMapMarker","args":[{"name":"map","type":"","deprecated":false,"deprecationMessage":""},{"name":"marker","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":417,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"map","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"marker","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getMapMarkerIcon","args":[{"name":"marker","type":"any","deprecated":false,"deprecationMessage":""},{"name":"icon","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{ path: any; fillColor: any; fillOpacity: number; strokeColor: string; anchor: any; scale: number; }","typeParameters":[],"line":511,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"marker","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"icon","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"listenToMarkerHover","args":[{"name":"marker","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":636,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"marker","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"listenToZoomChange","args":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":630,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":""},{"name":"oneTimeSetup","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":""},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\', [\'$event\']"}]},{"name":"onSpiderfierEvent","args":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":""},{"name":"markers","type":"any","deprecated":false,"deprecationMessage":""},{"name":"type","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":538,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"map","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"markers","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"type","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeLine","args":[{"name":"line","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":413,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"line","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"resetMarkers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":""},{"name":"updateMapIcon","args":[{"name":"map","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":673,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"map","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":134}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, EventEmitter, HostListener, Input, NgZone, Output, ViewChild } from \'@angular/core\';\\nimport mapIcons from \'./map-icons\';\\ndeclare let OverlappingMarkerSpiderfier: any;\\ndeclare let MarkerClusterer: any;\\n\\nexport interface IMap {\\n\\tconfig?: IMapConfig;\\n\\tmarkers: IMapMarkers;\\n}\\n\\nexport interface IMapConfig {\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n\\ticonColor?: string;\\n\\ticonAnchorX?: number;\\n\\ticonAnchorY?: number;\\n\\tzoomLevelToChangeIcon?: number;\\n\\tcenterOnMapUpdate?: boolean;\\n\\tcenterOnBounds?: boolean;\\n\\tshowMesh?: boolean;\\n\\tbounds?: IMapBound;\\n\\tfilterMarkersOutsideBounds?: boolean;\\n}\\n\\nexport interface IMapBound {\\n\\tstart: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n\\tend: {\\n\\t\\tlat: string;\\n\\t\\tlng: string;\\n\\t};\\n}\\n\\nexport type IMapMarkers = Array<IMapMarker>;\\nexport interface IMapMarker {\\n\\tid: string;\\n\\tlat: string;\\n\\tlng: string;\\n\\ttitle: string;\\n\\tlabel: string;\\n\\tlink: string;\\n\\tmesh?: Array<string>;\\n\\tcolor?: string;\\n\\ticonDefault?: string;\\n\\ticonZoomed?: string;\\n\\ticonSpiderfied?: string;\\n}\\n\\n@Component({\\n\\tselector: \'app-telco-maps\',\\n\\ttemplateUrl: \'./telco-maps.component.html\',\\n\\tstyleUrls: [\'./telco-maps.component.scss\'],\\n})\\nexport class TelcoMapsComponent implements AfterViewInit {\\n\\tmap: any;\\n\\toms: any;\\n\\tiw: any;\\n\\tbounds: any;\\n\\tzoomLevel = 1;\\n\\t_markers!: IMapMarkers;\\n\\tmarkersHash = {};\\n\\tmesh: any;\\n\\t_mapConfig: IMapConfig;\\n\\t_mapDefaultConfig: IMapConfig = {\\n\\t\\ticonDefault: \'SITE\',\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\n\\t\\ticonColor: \'#E04B4B\',\\n\\t\\ticonAnchorX: 31,\\n\\t\\ticonAnchorY: -33,\\n\\t\\tzoomLevelToChangeIcon: 14,\\n\\t\\tcenterOnMapUpdate: true,\\n\\t\\tcenterOnBounds: true,\\n\\t\\tshowMesh: true,\\n\\t\\tfilterMarkersOutsideBounds: false,\\n\\t};\\n\\tstaticMarker: any;\\n\\tviewInit = false;\\n\\tboundsBeforeSpiderfy: any;\\n\\tpreSpiderfyTimerref: any;\\n\\tspiderfyTimerref: any;\\n\\tunspiderfyTimerref: any;\\n\\n\\tneId = \'ne_135\';\\n\\tticketid = \'ticket-123\';\\n\\tdata2: any = [\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-123\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-124\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-125\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttitle: \'CE-id-126\',\\n\\t\\t\\tactions: [\'Edit\', \'Delete\'],\\n\\t\\t},\\n\\t];\\n\\n\\t@ViewChild(\'map\') mapElement;\\n\\t@HostListener(\'window:resize\', [\'$event\'])\\n\\tonResize() {\\n\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t}\\n\\n\\t@Input() set config(value: IMapConfig) {\\n\\t\\tthis._mapConfig = { ...this._mapDefaultConfig, ...value };\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\t@Input() set markers(value: IMapMarkers) {\\n\\t\\tlet filteredMarkers = value;\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\tfilteredMarkers = this.filterMarkers(value, this._mapConfig.bounds);\\n\\t\\t}\\n\\t\\tthis._markers = filteredMarkers;\\n\\t\\t// console.log(this._markers);\\n\\n\\t\\tif (!this.viewInit) return;\\n\\t\\tthis.resetMarkers();\\n\\t}\\n\\n\\t@Output() showDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\t@Output() hideDialog: EventEmitter<any> = new EventEmitter<any>();\\n\\n\\tconstructor(private zone: NgZone) {}\\n\\n\\tngAfterViewInit() {\\n\\t\\tif (!(this._markers && this._markers.length > 0)) {\\n\\t\\t\\tthis.oneTimeSetup();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.oneTimeSetup();\\n\\n\\t\\tthis.resetMarkers();\\n\\n\\t\\tthis.viewInit = true;\\n\\t}\\n\\n\\toneTimeSetup() {\\n\\t\\t// Load map\\n\\t\\tconst mapProperties = {\\n\\t\\t\\tcenter: new google.maps.LatLng(0, 0),\\n\\t\\t\\tzoom: 10,\\n\\t\\t\\tmapTypeId: google.maps.MapTypeId.ROADMAP,\\n\\t\\t\\tfullscreenControl: false,\\n\\t\\t\\t// restriction: {\\n\\t\\t\\t//   latLngBounds: latLngBounds,\\n\\t\\t\\t//   strictBounds: false,\\n\\t\\t\\t// },\\n\\t\\t};\\n\\n\\t\\tconst latLngBounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds) {\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tlatLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\n\\t\\t\\tmapProperties[\'restriction\'] = {\\n\\t\\t\\t\\tlatLngBounds: latLngBounds,\\n\\t\\t\\t\\tstrictBounds: false,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// HTML canvas keeps misfiring ApplicationRef.tick()\\n\\t\\t// To prevent that, initialize canvas outside angular\\n\\t\\tthis.zone.runOutsideAngular(() => {\\n\\t\\t\\tthis.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\\n\\t\\t});\\n\\n\\t\\tif (this._mapConfig && this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.map.fitBounds(latLngBounds);\\n\\t\\t}\\n\\n\\t\\t// Add markers array\\n\\t\\tthis.map.markers = [];\\n\\n\\t\\t// Add marker listener array\\n\\t\\tthis.map.markerListeners = [];\\n\\n\\t\\t// Add mesh array\\n\\t\\tthis.map.mesh = [];\\n\\n\\t\\t// Add cluster object\\n\\t\\tthis.map.markerCluster = null;\\n\\n\\t\\t// // Create spiderfier instance\\n\\t\\t// const options = {\\n\\t\\t//   keepSpiderfied: true, // will keep spider chart open after clicking on a marker to show Infowindow\\n\\t\\t//   markersWontMove: true, // we promise not to move any markers, allowing optimizations\\n\\t\\t//   markersWontHide: true, // we promise not to change visibility of any markers, allowing optimizations\\n\\t\\t//   basicFormatEvents: true, // allow the library to skip calculating advanced formatting information\\n\\t\\t//   minZoomLevel: this._mapConfig.zoomLevelToChangeIcon, // minimum zoom level at which cluster will spiderfy\\n\\t\\t// };\\n\\t\\t// this.oms = new OverlappingMarkerSpiderfier(this.map, options);\\n\\n\\t\\t// // Add info window\\n\\t\\t// this.iw = new google.maps.InfoWindow();\\n\\n\\t\\t// Attach zoom change listener\\n\\t\\tthis.listenToZoomChange(this.map);\\n\\t}\\n\\n\\tresetMarkers() {\\n\\t\\t// If markers already exist, remove them before plotting new ones\\n\\t\\tif (this.map && this.map.markers && this.map.markers.length > 0) {\\n\\t\\t\\t// this.oms.removeAllMarkers();\\n\\t\\t\\tthis.map.markerCluster.clearMarkers();\\n\\n\\t\\t\\tthis.map.mesh.forEach((e: any) => {\\n\\t\\t\\t\\tthis.removeLine(e);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markerListeners.forEach((e: any) => {\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseover);\\n\\t\\t\\t\\tgoogle.maps.event.clearInstanceListeners(e.mouseout);\\n\\t\\t\\t});\\n\\t\\t\\tthis.map.markers = [];\\n\\t\\t\\tthis.map.markerListeners = [];\\n\\t\\t\\tthis.map.mesh = [];\\n\\t\\t\\tthis.markersHash = {};\\n\\t\\t}\\n\\n\\t\\t// If exists, add markers\\n\\t\\tif (this._markers && this._markers.length > 0) {\\n\\t\\t\\t// Filter markers on map bounds\\n\\t\\t\\tif (this._mapConfig.bounds && this._mapConfig.filterMarkersOutsideBounds) {\\n\\t\\t\\t\\tthis._markers = this.filterMarkers(this._markers, this._mapConfig.bounds);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tthis.addMarker(e, this.map, this.oms, this.iw, this.map.markers);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Create marker cluster\\n\\t\\tconst mcOptions = {\\n\\t\\t\\tstyles: [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttextColor: \'white\',\\n\\t\\t\\t\\t\\theight: 32,\\n\\t\\t\\t\\t\\turl: \'assets/images/map-markers/marker.png\',\\n\\t\\t\\t\\t\\twidth: 32,\\n\\t\\t\\t\\t},\\n\\t\\t\\t],\\n\\t\\t\\t// styles: [\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 53,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m1.png\',\\n\\t\\t\\t//     width: 53,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 56,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m2.png\',\\n\\t\\t\\t//     width: 56,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 66,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m3.png\',\\n\\t\\t\\t//     width: 66,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 78,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m4.png\',\\n\\t\\t\\t//     width: 78,\\n\\t\\t\\t//   },\\n\\t\\t\\t//   {\\n\\t\\t\\t//     textColor: \'white\',\\n\\t\\t\\t//     height: 90,\\n\\t\\t\\t//     url: \'assets/images/map-markers/m5.png\',\\n\\t\\t\\t//     width: 90,\\n\\t\\t\\t//   },\\n\\t\\t\\t// ],\\n\\t\\t};\\n\\t\\tthis.map.markerCluster = new MarkerClusterer(this.map, this.map.markers, mcOptions);\\n\\n\\t\\t// If mesh enabled, add mesh\\n\\t\\tif (this._mapConfig.showMesh) {\\n\\t\\t\\tthis._markers.forEach((e) => {\\n\\t\\t\\t\\tif (e.mesh && e.mesh.length > 0) {\\n\\t\\t\\t\\t\\te.mesh.forEach((m) => {\\n\\t\\t\\t\\t\\t\\tthis.addLine(this.map, e.id, m);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Center\\n\\t\\tif (this._mapConfig.centerOnMapUpdate) {\\n\\t\\t\\tthis.centerMap(this.map, this.map.markers);\\n\\t\\t}\\n\\t\\t// else {\\n\\t\\t//   // fit to bounds\\n\\t\\t//   this.map.fitBounds(this.bounds);\\n\\t\\t// }\\n\\t}\\n\\n\\taddMarker(marker: any, map: any, oms = this.oms, iw: google.maps.InfoWindow = this.iw, markers: Array<google.maps.Marker>) {\\n\\t\\tconst mapMarker = this.getMapMarker(map, marker);\\n\\n\\t\\tmarkers.push(mapMarker);\\n\\n\\t\\t// Attach marker hover listener\\n\\t\\tthis.listenToMarkerHover(mapMarker);\\n\\n\\t\\tthis.markersHash[marker.id] = { lat: marker.lat, lng: marker.lng };\\n\\n\\t\\t// oms.trackMarker(mapMarker);\\n\\n\\t\\t// oms.addListener(\'click\', function (mapMarker, event: Event) {\\n\\t\\t//   iw.setContent(mapMarker.description);\\n\\t\\t//   iw.open(map, mapMarker);\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'pre-spiderfy\', (marker: Element) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, [marker], \'pre-spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'spiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'spiderfy\');\\n\\t\\t//   iw.close();\\n\\t\\t// });\\n\\n\\t\\t// oms.addListener(\'unspiderfy\', (markers: Array<Element>) => {\\n\\t\\t//   this.onSpiderfierEvent(this.map, markers, \'unspiderfy\');\\n\\t\\t// });\\n\\t}\\n\\n\\taddLine(map: any, sourceId: string, destinationId: string) {\\n\\t\\tconst sMarker = this.markersHash[sourceId];\\n\\t\\tconst dMarker = this.markersHash[destinationId];\\n\\t\\tif (!sMarker || !dMarker) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst source = new google.maps.LatLng(sMarker.lat, sMarker.lng);\\n\\t\\tconst destination = new google.maps.LatLng(dMarker.lat, dMarker.lng);\\n\\n\\t\\tconst line = new google.maps.Polyline({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tpath: [source, destination],\\n\\t\\t\\tstrokeColor: \'#444\',\\n\\t\\t\\tstrokeWeight: 1.5,\\n\\t\\t\\tzIndex: +google.maps.Marker.MAX_ZINDEX + 1,\\n\\t\\t});\\n\\n\\t\\tmap.mesh.push(line);\\n\\t}\\n\\n\\tremoveLine(line) {\\n\\t\\tline.setMap(null);\\n\\t}\\n\\n\\tgetMapMarker(map, marker) {\\n\\t\\tconst locationAddressLatLng = new google.maps.LatLng(marker.lat, marker.lng);\\n\\t\\t// const infoContent =\\n\\t\\t//   \'<div class=\\"locationInfo\\">\' +\\n\\t\\t//   \'<div><strong>\' +\\n\\t\\t//   marker.title +\\n\\t\\t//   \'</strong></div>\' +\\n\\t\\t//   \'<div>\' +\\n\\t\\t//   marker.label +\\n\\t\\t//   \'</div>\' +\\n\\t\\t//   \'<a href=\\"\' +\\n\\t\\t//   marker.link +\\n\\t\\t//   \'\\">Se profil</a></div>\';\\n\\n\\t\\t// const infoContent = this.getinfoContent();\\n\\n\\t\\tconst iconDefault = this.getMapMarkerIcon(marker, marker.iconDefault ? marker.iconDefault : this._mapConfig.iconDefault);\\n\\t\\tconst iconZoomed = this.getMapMarkerIcon(marker, marker.iconZoomed ? marker.iconZoomed : this._mapConfig.iconZoomed);\\n\\t\\tconst iconSpiderfied = this.getMapMarkerIcon(marker, marker.iconSpiderfied ? marker.iconSpiderfied : this._mapConfig.iconSpiderfied);\\n\\n\\t\\tconst mapMarker = new google.maps.Marker({\\n\\t\\t\\tmap: map,\\n\\t\\t\\tposition: locationAddressLatLng,\\n\\t\\t\\ticon: map.getZoom() < this._mapConfig.zoomLevelToChangeIcon ? iconDefault : iconZoomed,\\n\\t\\t});\\n\\t\\t// mapMarker.set(\'description\', infoContent);\\n\\t\\tmapMarker.set(\'iconDefault\', iconDefault);\\n\\t\\tmapMarker.set(\'iconZoomed\', iconZoomed);\\n\\t\\tmapMarker.set(\'iconSpiderfied\', iconSpiderfied);\\n\\n\\t\\treturn mapMarker;\\n\\t}\\n\\n\\tgetinfoContent() {\\n\\t\\tconst htmlStr =\\n\\t\\t\\t`<div id=\\"map-content-box\\">\\n      <div class=\\"header-wrapper\\">\\n        <div class=\\"left-box\\">\\n          <div class=\\"line1\\">\\n            <p id=\\"pid\\">` +\\n\\t\\t\\tthis.neId +\\n\\t\\t\\t`</p>\\n      </div>\\n      <div class=\\"line2\\">\\n        <p id=\\"pid\\" class=\\" opacity50 margin10\\"> Alarms:` +\\n\\t\\t\\t300 +\\n\\t\\t\\t`</p>\\n      <p id=\\"pid\\" class=\\"opacity50\\">Ticket:` +\\n\\t\\t\\t200 +\\n\\t\\t\\t`</p>\\n      </div>\\n    </div>\\n    <div class=\\"right-box\\">\\n      <div class=\\"icon-box margin10 \\"></div>\\n      <div class=\\"icon-box\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\"body-wrapper\\">` +\\n\\t\\t\\tthis.generateLayout() +\\n\\t\\t\\t`  </div>\\n      </div>\\n      `;\\n\\n\\t\\treturn htmlStr;\\n\\t}\\n\\n\\tgenerateLayout() {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < this.data2.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t` <div class=\\"row\\">\\n        <div class=\\"body-row\\">\\n          <p id=\\"pid\\" class=\\"text\\">` +\\n\\t\\t\\t\\tthis.data2[i].title +\\n\\t\\t\\t\\t`</p>\\n        </div>\\n        <div class=\\"right-box\\">` +\\n\\t\\t\\t\\tthis.getActions(this.data2[i].actions) +\\n\\t\\t\\t\\t`</div>\\n        </div>`;\\n\\t\\t}\\n\\t\\treturn str;\\n\\t}\\n\\n\\tgetActions(data) {\\n\\t\\tlet str = \'\';\\n\\t\\tfor (let i = 0; i < data.length; i += 1) {\\n\\t\\t\\tstr +=\\n\\t\\t\\t\\t`<div class=\\"icon-box margin10\\">\\n        ` + `</div>`;\\n\\t\\t\\treturn str;\\n\\t\\t}\\n\\t}\\n\\n\\tgetMapMarkerIcon(marker: any, icon: any) {\\n\\t\\t// var iconDot = {\\n\\t\\t//   path: \'M-3,0a3,3 0 1,0 6,0a3,3 0 1,0 -6,0\',\\n\\t\\t//   fillColor: \'red\',\\n\\t\\t//   fillOpacity: 1,\\n\\t\\t//   strokeColor: \'transparent\',\\n\\t\\t//   anchor: new google.maps.Point(0, 0),\\n\\t\\t// };\\n\\n\\t\\treturn {\\n\\t\\t\\tpath: mapIcons.markers[icon.toUpperCase()],\\n\\t\\t\\tfillColor: marker.color ? marker.color : this._mapConfig.iconColor,\\n\\t\\t\\tfillOpacity: 1,\\n\\t\\t\\tstrokeColor: \'transparent\',\\n\\t\\t\\tanchor: new google.maps.Point(this._mapConfig.iconAnchorX, this._mapConfig.iconAnchorY),\\n\\t\\t\\tscale: 1,\\n\\t\\t};\\n\\t}\\n\\n\\t// removeMarker(marker) {\\n\\t//   this.oms.removeMarker(marker);\\n\\t// }\\n\\n\\t// removeAllMarkers() {\\n\\t//   this.oms.removeAllMarkers();\\n\\t// }\\n\\n\\tonSpiderfierEvent(map: any, markers: any, type: string) {\\n\\t\\tswitch (type) {\\n\\t\\t\\tcase \'pre-spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.preSpiderfyTimerref) return;\\n\\t\\t\\t\\tthis.preSpiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.preSpiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Delete static marker if already exists\\n\\t\\t\\t\\t// (Happens when you click on a marker when another\\n\\t\\t\\t\\t// marker is already spiderfied)\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.staticMarker = new google.maps.Marker({\\n\\t\\t\\t\\t\\tmap: map,\\n\\t\\t\\t\\t\\tposition: new google.maps.LatLng(markers[0].position.lat(), markers[0].position.lng()),\\n\\t\\t\\t\\t\\ticon: markers[0].iconZoomed,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'spiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.spiderfyTimerref) return;\\n\\t\\t\\t\\tthis.spiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.spiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tmarkers.forEach((e: any) => {\\n\\t\\t\\t\\t\\te.setIcon(e.iconSpiderfied);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.boundsBeforeSpiderfy = this.bounds;\\n\\t\\t\\t\\t// this.centerMap(map, markers);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase \'unspiderfy\':\\n\\t\\t\\t\\t// Block multiple events\\n\\t\\t\\t\\tif (this.unspiderfyTimerref) return;\\n\\t\\t\\t\\tthis.unspiderfyTimerref = setTimeout(() => {\\n\\t\\t\\t\\t\\tthis.unspiderfyTimerref = null;\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// Remove static marker\\n\\t\\t\\t\\tif (this.staticMarker) {\\n\\t\\t\\t\\t\\tthis.staticMarker.setMap(null);\\n\\t\\t\\t\\t\\tthis.staticMarker = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Change icon\\n\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\tconst zoomed = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\t\\t\\t\\t\\tmarkers.forEach((e) => {\\n\\t\\t\\t\\t\\t\\te.setIcon(zoomed ? e.iconZoomed : e.iconDefault);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}, 1);\\n\\n\\t\\t\\t\\t// // Center\\n\\t\\t\\t\\t// this.bounds = this.boundsBeforeSpiderfy;\\n\\t\\t\\t\\t// map.fitBounds(this.bounds);\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\tcenterMap(map: any, markers: any) {\\n\\t\\tthis.bounds = new google.maps.LatLngBounds();\\n\\n\\t\\tif (this._mapConfig.bounds && this._mapConfig.centerOnBounds) {\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat, +this._mapConfig.bounds.start.lng));\\n\\n\\t\\t\\tthis.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat, +this._mapConfig.bounds.end.lng));\\n\\t\\t} else {\\n\\t\\t\\tmarkers.forEach((marker: any) => {\\n\\t\\t\\t\\tconst latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());\\n\\t\\t\\t\\tthis.bounds.extend(latlng);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// fit to bounds\\n\\t\\tmap.fitBounds(this.bounds);\\n\\n\\t\\t// zoom out if greater than threshold\\n\\t\\tsetTimeout((_) => {\\n\\t\\t\\tmap.getZoom() <= this._mapConfig.zoomLevelToChangeIcon ? null : map.setZoom(this._mapConfig.zoomLevelToChangeIcon);\\n\\t\\t}, 1);\\n\\t}\\n\\n\\tlistenToZoomChange(map: any) {\\n\\t\\tgoogle.maps.event.addListener(map, \'zoom_changed\', () => {\\n\\t\\t\\tthis.updateMapIcon(map);\\n\\t\\t});\\n\\t}\\n\\n\\tlistenToMarkerHover(marker: any) {\\n\\t\\tconst mouseover = marker.addListener(\'mouseover\', (e: any) => {\\n\\t\\t\\tconst index = this._markers.findIndex((marker) => {\\n\\t\\t\\t\\treturn +marker.lat === +e.latLng.lat() && +marker.lng === +e.latLng.lng();\\n\\t\\t\\t});\\n\\t\\t\\t// console.log(\\n\\t\\t\\t//   \'Mousein\',\\n\\t\\t\\t//   e.latLng.lat(),\\n\\t\\t\\t//   e.latLng.lng(),\\n\\t\\t\\t//   this._markers,\\n\\t\\t\\t//   index,\\n\\t\\t\\t// );\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.showDialog.emit({\\n\\t\\t\\t\\t\\tmarker: this._markers[index],\\n\\t\\t\\t\\t\\tevent: e.domEvent,\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mouseout = marker.addListener(\'mouseout\', (e: any) => {\\n\\t\\t\\tthis.zone.run(() => {\\n\\t\\t\\t\\tthis.hideDialog.emit(e.domEvent);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tthis.map.markerListeners.push({\\n\\t\\t\\tmouseover,\\n\\t\\t\\tmouseout,\\n\\t\\t});\\n\\t}\\n\\n\\t// unlistenToMarkerClick(_markers) {\\n\\t//   google.maps.event.clearListeners(marker, \'click\', () => {\\n\\t//   });\\n\\t// }\\n\\n\\tupdateMapIcon(map) {\\n\\t\\tif (!this.map || !this.map.markers || !this.map.markers.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst prevZoomLevel = this.zoomLevel;\\n\\t\\tthis.zoomLevel = this.map.getZoom();\\n\\t\\tconst showZoomedIcon = this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon ? false : true;\\n\\n\\t\\t// Do not update icon if zoom threshold boundary is not crossed\\n\\t\\tif (\\n\\t\\t\\t(prevZoomLevel < this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel < this._mapConfig.zoomLevelToChangeIcon) ||\\n\\t\\t\\t(prevZoomLevel >= this._mapConfig.zoomLevelToChangeIcon && this.zoomLevel >= this._mapConfig.zoomLevelToChangeIcon)\\n\\t\\t) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (showZoomedIcon) {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconZoomed);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tmap.markers.forEach((e: any) => {\\n\\t\\t\\t\\te.setIcon(e.iconDefault);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tfilterMarkers(markers: any, bounds: any): any {\\n\\t\\tconst filteredMarkers = markers.filter((marker) => {\\n\\t\\t\\tconst latS = Math.min(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst latE = Math.max(+bounds.start.lat, +bounds.end.lat);\\n\\t\\t\\tconst lngS = Math.min(+bounds.start.lng, +bounds.end.lng);\\n\\t\\t\\tconst lngE = Math.max(+bounds.start.lng, +bounds.end.lng);\\n\\n\\t\\t\\tif (+marker.lat >= latS && +marker.lat <= latE && +marker.lng >= lngS && +marker.lng <= lngE) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn filteredMarkers;\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"// html,\\r\\n// body,\\r\\n// #map_canvas {\\r\\n//   height: 100%;\\r\\n//   width: 100%;\\r\\n//   margin: 0px;\\r\\n// }\\r\\n\\r\\n// #map_canvas {\\r\\n//   position: relative;\\r\\n// }\\r\\n\\r\\n// .angular-google-map-container {\\r\\n//   position: absolute;\\r\\n//   top: 0;\\r\\n//   bottom: 0;\\r\\n//   right: 0;\\r\\n//   left: 0;\\r\\n// }\\r\\n.map-wrapper {\\r\\n\\t.map-container {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tpadding: 0px;\\r\\n\\t\\tborder-radius: 8px;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// .map-container ::after {\\r\\n//   position: relative;\\r\\n//   height: 100%;\\r\\n//   width: 100%;\\r\\n//   padding: 0px;\\r\\n// }\\r\\n","styleUrl":"./telco-maps.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":""}],"line":157,"jsdoctags":[{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"accessors":{"config":{"name":"config","setSignature":{"name":"config","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IMapConfig","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":138,"jsdoctags":[{"name":"value","type":"IMapConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"markers":{"name":"markers","setSignature":{"name":"markers","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IMapMarkers","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":143,"jsdoctags":[{"name":"value","type":"IMapMarkers","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div class=\\"map-wrapper\\">\\n\\t<div fxFlex=\\"1 1 100%\\" #map class=\\"map-container\\"></div>\\n</div>\\n"},{"name":"TelcoPieChartComponent","id":"component-TelcoPieChartComponent-2023060dc025a471f3bc433424eb2287c04bd59767428b65a7c4ef3cd057d1a8d79f78a8da56be62ed74aec8acbf0d65860ae616edc2441269d812e5f9825c43","file":"src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-telco-pie-chart","styleUrls":["./telco-pie-chart.component.scss"],"styles":[],"templateUrl":["./telco-pie-chart.component.html"],"viewProviders":[],"inputsClass":[{"name":"pieChartData","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":9,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n\\tselector: \'app-telco-pie-chart\',\\n\\ttemplateUrl: \'./telco-pie-chart.component.html\',\\n\\tstyleUrls: [\'./telco-pie-chart.component.scss\'],\\n})\\nexport class TelcoPieChartComponent {\\n\\t@Input() pieChartData: any = {};\\n\\n\\tconstructor() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./telco-pie-chart.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":9},"templateData":"<div class=\\"anvil-role-semi_pie_chart\\">\\n\\t<plotly-plot\\n\\t\\t[data]=\\"pieChartData.data\\"\\n\\t\\t[layout]=\\"pieChartData.layout\\"\\n\\t\\t[useResizeHandler]=\\"true\\"\\n\\t\\t[style]=\\"{ position: \'relative\', width: \'100%\', height: \'100%\' }\\"></plotly-plot>\\n</div>\\n"},{"name":"TelcoSearchComponent","id":"component-TelcoSearchComponent-956c136ad63830c11ac736b00871ea1ca4f8847b272ad9430e39489eac2abba5910f4d4be3085dab179df9f6da63211a20a33ece5ea2e6273e5654759e8da9ee","file":"src/app/telco-search/telco-search.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-telco-search","styleUrls":["./telco-search.component.scss"],"styles":[],"templateUrl":["./telco-search.component.html"],"viewProviders":[],"inputsClass":[{"name":"backgroundColor","defaultValue":"\'#f5f7fb\'","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"borderColor","defaultValue":"\'#e2e7ef\'","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"borderRadius","defaultValue":"\'0px 4px 4px 0px\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"fontFamily","defaultValue":"\'Noto Sans, sans-serif\'","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'Search\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]}],"outputsClass":[{"name":"searchClicked","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":18,"type":"EventEmitter"}],"propertiesClass":[{"name":"iconUrl","defaultValue":"\'../../assets/search-icon.svg\'","deprecated":false,"deprecationMessage":"","type":"String","optional":false,"description":"","line":9},{"name":"searchText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""},{"name":"searchClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\n\\n@Component({\\n\\tselector: \'app-telco-search\',\\n\\ttemplateUrl: \'./telco-search.component.html\',\\n\\tstyleUrls: [\'./telco-search.component.scss\'],\\n})\\nexport class TelcoSearchComponent implements OnInit {\\n\\ticonUrl: String = \'../../assets/search-icon.svg\';\\n\\tsearchText: string = \'\';\\n\\n\\t@Input() backgroundColor: string = \'#f5f7fb\';\\n\\t@Input() borderColor: string = \'#e2e7ef\';\\n\\t@Input() fontFamily: string = \'Noto Sans, sans-serif\';\\n\\t@Input() placeholder: string = \'Search\';\\n\\t@Input() borderRadius: string = \'0px 4px 4px 0px\';\\n\\n\\t@Output() searchClicked = new EventEmitter<any>();\\n\\n\\tconstructor() {}\\n\\tngOnInit(): void {}\\n\\n\\tsearchClick() {\\n\\t\\tthis.searchClicked.emit();\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".search {\\r\\n\\tdisplay: flex;\\r\\n\\talign-items: center;\\r\\n\\tborder: 1px solid;\\r\\n\\twidth: 100%;\\r\\n\\theight: 2rem;\\r\\n\\timg {\\r\\n\\t\\twidth: 10%;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\tinput {\\r\\n\\t\\twidth: 90%;\\r\\n\\t\\tborder: none;\\r\\n\\t\\tfont-size: 1rem;\\r\\n\\t}\\r\\n\\tinput:focus {\\r\\n\\t\\toutline: none;\\r\\n\\t}\\r\\n}\\r\\n","styleUrl":"./telco-search.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":18},"implements":["OnInit"],"templateData":"<div class=\\"search\\" [ngStyle]=\\"{\'background\': backgroundColor,\'border-color\':borderColor,\'border-radius\':borderRadius}\\">\\n  <img [src]=\\"iconUrl\\" alt=\\"icon\\" (click)=\\"searchClick()\\">\\n  <input type=\\"text\\" [placeholder]=\\"placeholder\\" [(ngModel)]=\\"searchText\\" [ngStyle]=\\"{\'background\': backgroundColor,\'font-family\':fontFamily}\\">\\n</div>\\n"},{"name":"TelcoTableComponent","id":"component-TelcoTableComponent-54d0450abe8ea96d246a7660e00977645f02a684c315b88ef91cdbafb44035d2a5893c4754502983e75e4e64c475ec98092c6426e07fe078d5e62ccd953d50c0","file":"src/app/telco-table/telco-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-telco-table","styleUrls":["./telco-table.component.scss"],"styles":[],"templateUrl":["./telco-table.component.html"],"viewProviders":[],"inputsClass":[{"name":"PaginationShow","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":119,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"dataSource","defaultValue":"new MatTableDataSource<InputDataInterFace>(ELEMENT_DATA)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":121},{"name":"displayedColumns","defaultValue":"[\'SiteName\', \'CountofAlarm\', \'Timestamp\', \'RCA\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":120},{"name":"paginator","deprecated":false,"deprecationMessage":"","type":"MatPaginator","optional":false,"description":"","line":124,"decorators":[{"name":"ViewChild","stringifiedArguments":"MatPaginator"}]},{"name":"sort","deprecated":false,"deprecationMessage":"","type":"MatSort","optional":false,"description":"","line":123,"decorators":[{"name":"ViewChild","stringifiedArguments":"MatSort"}]}],"methodsClass":[{"name":"announceSortChange","args":[{"name":"sortState","type":"Sort","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sortState","type":"Sort","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { LiveAnnouncer } from \'@angular/cdk/a11y\';\\nimport { AfterViewInit, Component, Input, OnInit, ViewChild } from \'@angular/core\';\\nimport { MatPaginator } from \'@angular/material/paginator\';\\nimport { MatTableDataSource } from \'@angular/material/table\';\\nimport { MatSort, Sort } from \'@angular/material/sort\';\\n\\nexport interface InputDataInterFace {\\n\\tSiteName: string;\\n\\tCountofAlarm: string;\\n\\tTimestamp: { date: string; time: string };\\n\\tRCA: { iconImg: string; status: string };\\n}\\n\\nconst ELEMENT_DATA: InputDataInterFace[] = [\\n\\t{\\n\\t\\tSiteName: \'Site Name 1\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2022\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 2\',\\n\\t\\tCountofAlarm: \'09\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'Cell Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 4\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 5\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 6\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 7\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n];\\n\\n@Component({\\n\\tselector: \'app-telco-table\',\\n\\ttemplateUrl: \'./telco-table.component.html\',\\n\\tstyleUrls: [\'./telco-table.component.scss\'],\\n})\\nexport class TelcoTableComponent implements OnInit {\\n\\t@Input() PaginationShow: boolean = false;\\n\\tdisplayedColumns = [\'SiteName\', \'CountofAlarm\', \'Timestamp\', \'RCA\'];\\n\\tdataSource = new MatTableDataSource<InputDataInterFace>(ELEMENT_DATA);\\n\\n\\t@ViewChild(MatSort) sort: MatSort;\\n\\t@ViewChild(MatPaginator) paginator: MatPaginator;\\n\\n\\tconstructor(private _liveAnnouncer: LiveAnnouncer) {}\\n\\n\\t// here is the code trial\\n\\n\\tngOnInit() {\\n\\t\\tthis.dataSource.paginator = this.paginator;\\n\\t\\tthis.dataSource.sort = this.sort;\\n\\t\\tthis.dataSource.sortingDataAccessor = (item, property) => {\\n\\t\\t\\tswitch (property) {\\n\\t\\t\\t\\tcase \'RCA\': {\\n\\t\\t\\t\\t\\treturn item.RCA.status;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcase \'Timestamp\': {\\n\\t\\t\\t\\t\\tlet newDate = new Date(item.Timestamp.date);\\n\\t\\t\\t\\t\\treturn newDate;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdefault: {\\n\\t\\t\\t\\t\\treturn item[property];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\t// for sorting\\n\\tannounceSortChange(sortState: Sort) {\\n\\t\\tif (sortState.direction) {\\n\\t\\t\\tthis._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\\n\\t\\t} else {\\n\\t\\t\\tthis._liveAnnouncer.announce(\'Sorting cleared\');\\n\\t\\t}\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"html {\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-family: \'Noto Sans\', sans-serif;\\r\\n\\tfont-style: normal;\\r\\n}\\r\\n\\r\\nth.mat-sort-header-sorted {\\r\\n\\tcolor: black;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n}\\r\\n.hidden {\\r\\n\\tdisplay: none;\\r\\n}\\r\\n\\r\\n.mat-body p,\\r\\n.mat-body-1 p,\\r\\n::ng-deep.mat-typography p {\\r\\n\\tmargin: revert !important;\\r\\n}\\r\\n\\r\\n.mat-header-cell {\\r\\n\\tcolor: #333333;\\r\\n\\tfont-weight: 600;\\r\\n\\tfont-size: 1rem;\\r\\n}\\r\\n\\r\\n.mat-cell {\\r\\n\\tcolor: #594e4e;\\r\\n\\tfont-weight: 400;\\r\\n\\tfont-size: 1rem;\\r\\n}\\r\\n.mat-column-select {\\r\\n\\toverflow: initial;\\r\\n}\\r\\n\\r\\n.RCA1-cell {\\r\\n\\t// display: flex;\\r\\n}\\r\\n\\r\\n.mat-paginator-sticky {\\r\\n\\tbottom: 0;\\r\\n\\tposition: sticky;\\r\\n\\tz-index: 10;\\r\\n}\\r\\n","styleUrl":"./telco-table.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_liveAnnouncer","type":"LiveAnnouncer","deprecated":false,"deprecationMessage":""}],"line":124,"jsdoctags":[{"name":"_liveAnnouncer","type":"LiveAnnouncer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"mat-elevation-z8\\" *ngIf=\\"dataSource\\">\\r\\n\\t<table mat-table [dataSource]=\\"dataSource\\" matSort (matSortChange)=\\"announceSortChange($event)\\">\\r\\n\\t\\t<ng-container matColumnDef=\\"SiteName\\">\\r\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\\"Sort by SiteName\\">SiteName</th>\\r\\n\\t\\t\\t<td mat-cell *matCellDef=\\"let element\\">\\r\\n\\t\\t\\t\\t{{ element.SiteName }}\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t<ng-container matColumnDef=\\"CountofAlarm\\">\\r\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\\"Sort by CountofAlarm\\">Count of Alarm</th>\\r\\n\\t\\t\\t<td mat-cell *matCellDef=\\"let element\\">{{ element.CountofAlarm }}</td>\\r\\n\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t<ng-container matColumnDef=\\"Timestamp\\">\\r\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\\"Sort by Timestamp\\">Timestamp</th>\\r\\n\\t\\t\\t<td mat-cell *matCellDef=\\"let element\\">\\r\\n\\t\\t\\t\\t<p>{{ element.Timestamp.date }}</p>\\r\\n\\t\\t\\t\\t<p>{{ element.Timestamp.time }}</p>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t<ng-container matColumnDef=\\"RCA\\">\\r\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\\"Sort by RCA\\">RCA</th>\\r\\n\\t\\t\\t<td mat-cell *matCellDef=\\"let element\\" class=\\"RCA1-cell\\">\\r\\n\\t\\t\\t\\t<img [src]=\\"element.RCA.iconImg\\" alt=\\"\\" />\\r\\n\\t\\t\\t\\t<p>{{ element.RCA.status }}</p>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t<tr mat-header-row *matHeaderRowDef=\\"displayedColumns; sticky: true\\"></tr>\\r\\n\\t\\t<tr mat-row *matRowDef=\\"let row; columns: displayedColumns\\"></tr>\\r\\n\\t</table>\\r\\n\\r\\n\\t<mat-paginator [pageSizeOptions]=\\"[5, 10, 20]\\" showFirstLastButtons aria-label=\\"Select page of periodic elements\\"> </mat-paginator>\\r\\n</div>\\r\\n"}],"modules":[{"name":"AppModule","id":"module-AppModule-62e9f9462b243d6714b92648145c83d5af991ef82cf9990fd01daaaa5ce26dd86c7d71a249e26a176320aecd375a7990bed2136c03a3b03a78804cbdc10eeed5","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app.module.ts","methods":[],"sourceCode":"import { AppComponent } from \'./app.component\';\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { FormsModule } from \'@angular/forms\';\\r\\nimport { BrowserModule } from \'@angular/platform-browser\';\\r\\nimport { NgSelectModule } from \'@ng-select/ng-select\';\\r\\nimport { ButtonComponent } from \'./button/button.component\';\\r\\nimport { TelcoListComponent } from \'./telco-list/telco-list.component\';\\r\\nimport { TelcoSearchComponent } from \'./telco-search/telco-search.component\';\\r\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\r\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\r\\nimport { MatIconModule } from \'@angular/material/icon\';\\r\\nimport { TelcoCardsComponent } from \'./telco-cards/telco-cards.component\';\\r\\nimport { TelcoMapsComponent } from \'./telco-maps/telco-maps.component\';\\r\\nimport {} from \'google-maps\';\\r\\nimport { TelcoBarChartComponent } from \'./telco-charts/telco-bar-chart/telco-bar-chart.component\';\\r\\nimport { TelcoPieChartComponent } from \'./telco-charts/telco-pie-chart/telco-pie-chart.component\';\\r\\nimport { PlotlyViaCDNModule, PlotlyViaWindowModule } from \'angular-plotly.js\';\\r\\nimport { TelcoTableComponent } from \'./telco-table/telco-table.component\';\\r\\n\\r\\n// for table component\\r\\nimport { MatTableModule } from \'@angular/material/table\';\\r\\nimport { MatPaginatorModule } from \'@angular/material/paginator\';\\r\\nimport { MatChipsModule } from \'@angular/material/chips\';\\r\\nimport { MatSortModule } from \'@angular/material/sort\';\\r\\n\\r\\n@NgModule({\\r\\n\\tdeclarations: [\\r\\n\\t\\tAppComponent,\\r\\n\\t\\tButtonComponent,\\r\\n\\t\\tTelcoListComponent,\\r\\n\\t\\tTelcoSearchComponent,\\r\\n\\t\\tTelcoCardsComponent,\\r\\n\\t\\tTelcoMapsComponent,\\r\\n\\t\\tTelcoBarChartComponent,\\r\\n\\t\\tTelcoPieChartComponent,\\r\\n\\t\\tTelcoTableComponent,\\r\\n\\t],\\r\\n\\timports: [\\r\\n\\t\\tBrowserModule,\\r\\n\\t\\tNgSelectModule,\\r\\n\\t\\tFormsModule,\\r\\n\\t\\tBrowserAnimationsModule,\\r\\n\\t\\tMatIconModule,\\r\\n\\t\\tPlotlyViaCDNModule,\\r\\n\\t\\tPlotlyViaWindowModule,\\r\\n\\t\\tFlexLayoutModule,\\r\\n\\t\\tMatTableModule,\\r\\n\\t\\tMatPaginatorModule,\\r\\n\\t\\tMatChipsModule,\\r\\n\\t\\tMatSortModule,\\r\\n\\t],\\r\\n\\tproviders: [],\\r\\n\\tbootstrap: [AppComponent],\\r\\n})\\r\\nexport class AppModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AppComponent"},{"name":"ButtonComponent"},{"name":"TelcoBarChartComponent"},{"name":"TelcoCardsComponent"},{"name":"TelcoListComponent"},{"name":"TelcoMapsComponent"},{"name":"TelcoPieChartComponent"},{"name":"TelcoSearchComponent"},{"name":"TelcoTableComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"args","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"IMap","defaultValue":"{\\r\\n\\tconfig: {\\r\\n\\t\\ticonDefault: \'SITE\',\\r\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\r\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\r\\n\\t\\ticonColor: pcolors[\'application\'][\'palette-2\'],\\r\\n\\t\\ticonAnchorX: 11,\\r\\n\\t\\ticonAnchorY: 11,\\r\\n\\t\\tzoomLevelToChangeIcon: 16,\\r\\n\\t\\tcenterOnMapUpdate: true,\\r\\n\\t\\tshowMesh: true,\\r\\n\\t},\\r\\n\\tmarkers: generateMarkers(1000, [18.6052695, 73.7522604], [18.431485, 73.9796919]),\\r\\n}"},{"name":"argsConfig","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"IMap","defaultValue":"{\\r\\n\\tconfig: {\\r\\n\\t\\ticonDefault: \'SITE\',\\r\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\r\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\r\\n\\t\\ticonColor: pcolors[\'application\'][\'palette-12\'],\\r\\n\\t\\ticonAnchorX: 15,\\r\\n\\t\\ticonAnchorY: 15,\\r\\n\\t\\tzoomLevelToChangeIcon: 10,\\r\\n\\t\\tcenterOnMapUpdate: true,\\r\\n\\t\\tshowMesh: true,\\r\\n\\t},\\r\\n\\tmarkers: generateMarkers(1000, [18.6052695, 73.7522604], [18.431485, 73.9796919]),\\r\\n}"},{"name":"argsMarkers","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"IMap","defaultValue":"{\\r\\n\\tconfig: {\\r\\n\\t\\ticonDefault: \'SITE\',\\r\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\r\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\r\\n\\t\\ticonColor: pcolors[\'application\'][\'palette-2\'],\\r\\n\\t\\ticonAnchorX: 11,\\r\\n\\t\\ticonAnchorY: 11,\\r\\n\\t\\tzoomLevelToChangeIcon: 16,\\r\\n\\t\\tcenterOnMapUpdate: true,\\r\\n\\t\\tshowMesh: true,\\r\\n\\t},\\r\\n\\tmarkers: generateMarkers(1000, [30.6052695, 33.7522604], [38.431485, 34.9796919]),\\r\\n}"},{"name":"Bar","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-bar-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Basic","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Basic","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Basic","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-search.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"BasicTable","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-table.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Config","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ELEMENT_DATA","ctype":"miscellaneous","subtype":"variable","file":"src/app/telco-table/telco-table.component.ts","deprecated":false,"deprecationMessage":"","type":"InputDataInterFace[]","defaultValue":"[\\n\\t{\\n\\t\\tSiteName: \'Site Name 1\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2022\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 2\',\\n\\t\\tCountofAlarm: \'09\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'Cell Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 4\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 5\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 6\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 7\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n]"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: false\\r\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: true\\r\\n}"},{"name":"MarkerClusterer","ctype":"miscellaneous","subtype":"variable","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"Markers","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"markersBackup","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\r\\n\\t{\\r\\n\\t\\tid: \'mark-1\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t\\tmesh: [\'mark-40\', \'mark-30\'],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-2\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-3\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-4\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-5\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-6\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-7\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t\\tcolor: \'#FFBF00\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-8\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t\\tcolor: \'#33B54D\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-9\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-10\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-11\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-12\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-13\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-14\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-15\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-16\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-17\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-18\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-19\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-20\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-21\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-22\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-23\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-24\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-25\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-26\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-27\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-28\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-29\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-30\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-31\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-32\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-33\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-34\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-35\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-36\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-37\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-38\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-39\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-40\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n]"},{"name":"OverlappingMarkerSpiderfier","ctype":"miscellaneous","subtype":"variable","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"pcolors","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"_palette"},{"name":"PieChart","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-pie-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"primaryButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-bar-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoBarChartComponent>","defaultValue":"(args: TelcoBarChartComponent) => ({\\r\\n\\tprops: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ButtonComponent>","defaultValue":"(args: ButtonComponent) => ({\\r\\n\\tComponent: ButtonComponent,\\r\\n\\tprops: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoListComponent>","defaultValue":"(args: TelcoListComponent) => ({\\r\\n\\tComponent: TelcoListComponent,\\r\\n\\tprops: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoCardsComponent>","defaultValue":"(args: TelcoCardsComponent) => ({\\r\\n\\tComponent: TelcoCardsComponent,\\r\\n\\tprops: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoMapsComponent>","defaultValue":"(args: TelcoMapsComponent) => ({\\r\\n\\tcomponent: TelcoMapsComponent,\\r\\n\\tprops: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-search.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoSearchComponent>","defaultValue":"(args: TelcoSearchComponent) => ({\\r\\n\\tComponent: TelcoSearchComponent,\\r\\n\\tprops: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-pie-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoPieChartComponent>","defaultValue":"(args: TelcoPieChartComponent) => ({\\r\\n\\tprops: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-table.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoTableComponent>","defaultValue":"(args: TelcoTableComponent) => ({\\r\\n\\tComponent: TelcoTableComponent,\\r\\n\\tprops: args,\\r\\n})"}],"functions":[{"name":"generateMarkers","file":"src/stories/telco-maps.stories.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"count","type":"","deprecated":false,"deprecationMessage":""},{"name":"start","type":"","deprecated":false,"deprecationMessage":""},{"name":"end","type":"","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"count","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"start","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"end","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[{"name":"IMapMarkers","ctype":"miscellaneous","subtype":"typealias","rawtype":"Array<IMapMarker>","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"enumerations":[],"groupedVariables":{"src/stories/telco-maps.stories.ts":[{"name":"args","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"IMap","defaultValue":"{\\r\\n\\tconfig: {\\r\\n\\t\\ticonDefault: \'SITE\',\\r\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\r\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\r\\n\\t\\ticonColor: pcolors[\'application\'][\'palette-2\'],\\r\\n\\t\\ticonAnchorX: 11,\\r\\n\\t\\ticonAnchorY: 11,\\r\\n\\t\\tzoomLevelToChangeIcon: 16,\\r\\n\\t\\tcenterOnMapUpdate: true,\\r\\n\\t\\tshowMesh: true,\\r\\n\\t},\\r\\n\\tmarkers: generateMarkers(1000, [18.6052695, 73.7522604], [18.431485, 73.9796919]),\\r\\n}"},{"name":"argsConfig","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"IMap","defaultValue":"{\\r\\n\\tconfig: {\\r\\n\\t\\ticonDefault: \'SITE\',\\r\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\r\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\r\\n\\t\\ticonColor: pcolors[\'application\'][\'palette-12\'],\\r\\n\\t\\ticonAnchorX: 15,\\r\\n\\t\\ticonAnchorY: 15,\\r\\n\\t\\tzoomLevelToChangeIcon: 10,\\r\\n\\t\\tcenterOnMapUpdate: true,\\r\\n\\t\\tshowMesh: true,\\r\\n\\t},\\r\\n\\tmarkers: generateMarkers(1000, [18.6052695, 73.7522604], [18.431485, 73.9796919]),\\r\\n}"},{"name":"argsMarkers","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"IMap","defaultValue":"{\\r\\n\\tconfig: {\\r\\n\\t\\ticonDefault: \'SITE\',\\r\\n\\t\\ticonZoomed: \'SITE_ZOOMED_ALT\',\\r\\n\\t\\ticonSpiderfied: \'NETWORK_ELEMENT\',\\r\\n\\t\\ticonColor: pcolors[\'application\'][\'palette-2\'],\\r\\n\\t\\ticonAnchorX: 11,\\r\\n\\t\\ticonAnchorY: 11,\\r\\n\\t\\tzoomLevelToChangeIcon: 16,\\r\\n\\t\\tcenterOnMapUpdate: true,\\r\\n\\t\\tshowMesh: true,\\r\\n\\t},\\r\\n\\tmarkers: generateMarkers(1000, [30.6052695, 33.7522604], [38.431485, 34.9796919]),\\r\\n}"},{"name":"Config","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Markers","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"markersBackup","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\r\\n\\t{\\r\\n\\t\\tid: \'mark-1\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t\\tmesh: [\'mark-40\', \'mark-30\'],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-2\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-3\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-4\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-5\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-6\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-7\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t\\tcolor: \'#FFBF00\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-8\',\\r\\n\\t\\tlat: \'60.393051\',\\r\\n\\t\\tlng: \'5.324171\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torgallmenningen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t\\tcolor: \'#33B54D\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-9\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-10\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-11\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-12\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-13\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-14\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-15\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-16\',\\r\\n\\t\\tlat: \'60.394998\',\\r\\n\\t\\tlng: \'5.325203\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Torget 2\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-17\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-18\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-19\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-20\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-21\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-22\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-23\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-24\',\\r\\n\\t\\tlat: \'60.342844\',\\r\\n\\t\\tlng: \'5.336836\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Gamlehaugen\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-25\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-26\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-27\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-28\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-29\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-30\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-31\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-32\',\\r\\n\\t\\tlat: \'59.908062\',\\r\\n\\t\\tlng: \'10.751341\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Operahuset\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-33\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-34\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-35\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-36\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-37\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-38\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-39\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tid: \'mark-40\',\\r\\n\\t\\tlat: \'59.948985\',\\r\\n\\t\\tlng: \'10.733869\',\\r\\n\\t\\ttitle: \'Name\',\\r\\n\\t\\tlabel: \'Ullevål\',\\r\\n\\t\\tlink: \'#thisisalink\',\\r\\n\\t},\\r\\n]"},{"name":"pcolors","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"_palette"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-maps.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoMapsComponent>","defaultValue":"(args: TelcoMapsComponent) => ({\\r\\n\\tcomponent: TelcoMapsComponent,\\r\\n\\tprops: args,\\r\\n})"}],"src/stories/telco-bar-chart.stories.ts":[{"name":"Bar","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-bar-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-bar-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoBarChartComponent>","defaultValue":"(args: TelcoBarChartComponent) => ({\\r\\n\\tprops: args,\\r\\n})"}],"src/stories/telco-list.stories.ts":[{"name":"Basic","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoListComponent>","defaultValue":"(args: TelcoListComponent) => ({\\r\\n\\tComponent: TelcoListComponent,\\r\\n\\tprops: args,\\r\\n})"}],"src/stories/telco-card.stories.ts":[{"name":"Basic","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoCardsComponent>","defaultValue":"(args: TelcoCardsComponent) => ({\\r\\n\\tComponent: TelcoCardsComponent,\\r\\n\\tprops: args,\\r\\n})"}],"src/stories/telco-search.stories.ts":[{"name":"Basic","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-search.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-search.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoSearchComponent>","defaultValue":"(args: TelcoSearchComponent) => ({\\r\\n\\tComponent: TelcoSearchComponent,\\r\\n\\tprops: args,\\r\\n})"}],"src/stories/telco-table.stories.ts":[{"name":"BasicTable","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-table.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-table.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoTableComponent>","defaultValue":"(args: TelcoTableComponent) => ({\\r\\n\\tComponent: TelcoTableComponent,\\r\\n\\tprops: args,\\r\\n})"}],"src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"src/app/telco-table/telco-table.component.ts":[{"name":"ELEMENT_DATA","ctype":"miscellaneous","subtype":"variable","file":"src/app/telco-table/telco-table.component.ts","deprecated":false,"deprecationMessage":"","type":"InputDataInterFace[]","defaultValue":"[\\n\\t{\\n\\t\\tSiteName: \'Site Name 1\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2022\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 2\',\\n\\t\\tCountofAlarm: \'09\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'Cell Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 3\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 4\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 5\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 6\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tSiteName: \'Site Name 7\',\\n\\t\\tCountofAlarm: \'08\',\\n\\t\\tTimestamp: {\\n\\t\\t\\tdate: \'05 Jan,2021\',\\n\\t\\t\\ttime: \'10:00 AM\',\\n\\t\\t},\\n\\t\\tRCA: {\\n\\t\\t\\ticonImg: \'../assets/table-icon.svg\',\\n\\t\\t\\tstatus: \'RAN - IP Connection Failure\',\\n\\t\\t},\\n\\t},\\n]"}],"src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: false\\r\\n}"}],"src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: true\\r\\n}"}],"src/app/telco-maps/telco-maps.component.ts":[{"name":"MarkerClusterer","ctype":"miscellaneous","subtype":"variable","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"OverlappingMarkerSpiderfier","ctype":"miscellaneous","subtype":"variable","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","type":"any"}],"src/stories/telco-pie-chart.stories.ts":[{"name":"PieChart","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-pie-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-pie-chart.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TelcoPieChartComponent>","defaultValue":"(args: TelcoPieChartComponent) => ({\\r\\n\\tprops: args,\\r\\n})"}],"src/stories/telco-button.stories.ts":[{"name":"primaryButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/telco-button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ButtonComponent>","defaultValue":"(args: ButtonComponent) => ({\\r\\n\\tComponent: ButtonComponent,\\r\\n\\tprops: args,\\r\\n})"}]},"groupedFunctions":{"src/stories/telco-maps.stories.ts":[{"name":"generateMarkers","file":"src/stories/telco-maps.stories.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"count","type":"","deprecated":false,"deprecationMessage":""},{"name":"start","type":"","deprecated":false,"deprecationMessage":""},{"name":"end","type":"","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"count","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"start","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"end","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{},"groupedTypeAliases":{"src/app/telco-maps/telco-maps.component.ts":[{"name":"IMapMarkers","ctype":"miscellaneous","subtype":"typealias","rawtype":"Array<IMapMarker>","file":"src/app/telco-maps/telco-maps.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}]}},"routes":[],"coverage":{"count":0,"status":"low","files":[{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/telco-cards/telco-cards.component.ts","type":"component","linktype":"component","name":"TelcoCardsComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.ts","type":"component","linktype":"component","name":"TelcoBarChartComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.ts","type":"component","linktype":"component","name":"TelcoPieChartComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/telco-list/telco-list.component.ts","type":"component","linktype":"component","name":"TelcoListComponent","coveragePercent":0,"coverageCount":"0/44","status":"low"},{"filePath":"src/app/telco-maps/map-icons.ts","type":"class","linktype":"classe","name":"mapIcons","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/telco-maps/telco-maps.component.ts","type":"component","linktype":"component","name":"TelcoMapsComponent","coveragePercent":0,"coverageCount":"0/45","status":"low"},{"filePath":"src/app/telco-maps/telco-maps.component.ts","type":"interface","linktype":"interface","name":"IMap","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/telco-maps/telco-maps.component.ts","type":"interface","linktype":"interface","name":"IMapBound","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/telco-maps/telco-maps.component.ts","type":"interface","linktype":"interface","name":"IMapConfig","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/telco-maps/telco-maps.component.ts","type":"interface","linktype":"interface","name":"IMapMarker","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/telco-maps/telco-maps.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MarkerClusterer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/telco-maps/telco-maps.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"OverlappingMarkerSpiderfier","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/telco-search/telco-search.component.ts","type":"component","linktype":"component","name":"TelcoSearchComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/telco-table/telco-table.component.ts","type":"component","linktype":"component","name":"TelcoTableComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/telco-table/telco-table.component.ts","type":"interface","linktype":"interface","name":"InputDataInterFace","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/telco-table/telco-table.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ELEMENT_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-bar-chart.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Bar","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-bar-chart.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"primaryButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Basic","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-list.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Basic","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-list.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"generateMarkers","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"args","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"argsConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"argsMarkers","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Markers","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"markersBackup","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"pcolors","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-maps.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-pie-chart.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PieChart","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-pie-chart.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-search.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Basic","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-search.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-table.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"BasicTable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/telco-table.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.setCompodocJson)(documentation_namespaceObject);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.kg.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?%21(?:^|[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?%21(?:^|[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)},"./src/app/telco-maps/theming/palette.js":module=>{module.exports={"mat-light-theme-background":{"status-bar":"map_get($mat-grey, 300)","app-bar":"map_get($mat-grey, 100)",background:" #f8f9fa",hover:"#f2f4f8",card:"#ffffff","card-accent":"#f0f7fd",dialog:"rgb(5, 5, 5)","disabled-button":"#d8d8d8","raised-button":"white","focused-button":"$dark-focused","selected-button":"map_get($mat-grey, 300)","selected-disabled-button":"map_get($mat-grey, 400)","disabled-button-toggle":"map_get($mat-grey, 200)","unselected-chip":"map_get($mat-grey, 300)","disabled-list-option":"map_get($mat-grey, 200)","card-hover":"#e1f2fa"},"mat-light-theme-foreground":{base:"#595959",divider:" #dadce0",dividers:"#dadce0",disabled:"#bec2c5","disabled-button":"rgba(black, 0.26)","disabled-text":"#bec2c5",elevation:"black","hint-text":"#bec2c5","secondary-text":"#acacac",icon:"rgba(black, 0.54)",icons:"rgba(black, 0.54)",text:"#595959","slider-min":"rgba(black, 0.87)","slider-off":"rgba(black, 0.26)","slider-off-active":"rgba(black, 0.38)"},"iro-primary":{50:"#ecf0fe",100:"#cfd9fc",200:"#afc0fa",300:"#8ea7f7",400:"#7694f6",500:"#5e81f4",600:"#5679f3",700:"#4c6ef1",800:"#4264ef",900:"#3151ec",A100:"#ffffff",A200:"#fcfdff",A400:"#c9d2ff",A700:"#b0bcff"},"iro-accent":{50:"#e1f9f4",100:"#b5efe3",200:"#84e5d0",300:"#53dbbd",400:"#2ed3ae",500:"#09cba0",600:"#08c698",700:"#06be8e",800:"#05b884",900:"#02ac73",A100:"#d5ffef",A200:"#a2ffdc",A400:"#6fffc9",A700:"#56ffbf"},"iro-warn":{50:"#fdeaea",100:"#facccc",200:"#f6aaaa",300:"#f28787",400:"#f06e6e",500:"#ed5454",600:"#eb4d4d",700:"#e84343",800:"#e53a3a",900:"#e02929",A100:"#ffffff",A200:"#ffebeb",A400:"#ffb8b8",A700:"#ff9f9f"},application:{"palette-1":"#5e81f4","palette-2":"#e04b4b","palette-3":"#ffbf00","palette-4":"#33b64d","palette-5":"#ccb025","palette-6":"#7db3f2","palette-7":"#d563d7","palette-8":"#28cb62","palette-9":"#5cbcdd","palette-10":"#d29d4d","palette-11":"#df68c5","palette-12":"#815daf",success:"#2ab847",fail:"#ed5454","text-light":"rgba(#597eb8, 0.5)","palette-bg-1":" #f4f4f4","palette-text-1":"#80868b","table-header-1-fg":"#f8f9ff","table-header-1-bg":" #9c9cc8"}}},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].rules[0].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].rules[0].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].rules[1].use[0]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].rules[1].use[1]!./src/styles.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__)()((function(i){return i[1]}));___CSS_LOADER_EXPORT___.push([module.id,'/* You can add global styles to this file, and also import other style files */\n.ng-select.ng-select-opened>.ng-select-container{background:#fff;border-color:#b3b3b3 #ccc #d9d9d9}\n.ng-select.ng-select-opened>.ng-select-container:hover{box-shadow:none}\n.ng-select.ng-select-opened>.ng-select-container .ng-arrow{top:-2px;border-color:transparent transparent #999;border-width:0 5px 5px}\n.ng-select.ng-select-opened>.ng-select-container .ng-arrow:hover{border-color:transparent transparent #333}\n.ng-select.ng-select-opened.ng-select-top>.ng-select-container{border-top-right-radius:0;border-top-left-radius:0}\n.ng-select.ng-select-opened.ng-select-right>.ng-select-container{border-top-right-radius:0;border-bottom-right-radius:0}\n.ng-select.ng-select-opened.ng-select-bottom>.ng-select-container{border-bottom-right-radius:0;border-bottom-left-radius:0}\n.ng-select.ng-select-opened.ng-select-left>.ng-select-container{border-top-left-radius:0;border-bottom-left-radius:0}\n.ng-select.ng-select-focused:not(.ng-select-opened)>.ng-select-container{border-color:#007eff;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075),0 0 0 3px rgba(0,126,255,0.1)}\n.ng-select.ng-select-disabled>.ng-select-container{background-color:#f9f9f9}\n.ng-select .ng-has-value .ng-placeholder{display:none}\n.ng-select .ng-select-container{color:#333;background-color:#fff;border-radius:4px;border:1px solid #ccc;min-height:36px;align-items:center}\n.ng-select .ng-select-container:hover{box-shadow:0 1px 0 rgba(0,0,0,0.06)}\n.ng-select .ng-select-container .ng-value-container{align-items:center;padding-left:10px}\n[dir="rtl"] .ng-select .ng-select-container .ng-value-container{padding-right:10px;padding-left:0}\n.ng-select .ng-select-container .ng-value-container .ng-placeholder{color:#999}\n.ng-select.ng-select-single .ng-select-container{height:36px}\n.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{top:5px;left:0;padding-left:10px;padding-right:50px}\n[dir="rtl"] .ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{padding-right:10px;padding-left:50px}\n.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value{background-color:#f9f9f9;border:1px solid #e6e6e6}\n.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-label{padding:0 5px}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container{padding-top:5px;padding-left:7px}\n[dir="rtl"] .ng-select.ng-select-multiple .ng-select-container .ng-value-container{padding-right:7px;padding-left:0}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{font-size:.9em;margin-bottom:5px;color:#333;background-color:#ebf5ff;border-radius:2px;margin-right:5px}\n[dir="rtl"] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{margin-right:0;margin-left:5px}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled{background-color:#f9f9f9}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-label{padding-left:5px}\n[dir="rtl"] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-label{padding-left:0;padding-right:5px}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-label{display:inline-block;padding:1px 5px}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:inline-block;padding:1px 5px}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon:hover{background-color:#d1e8ff}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.left{border-right:1px solid #b8dbff}\n[dir="rtl"] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.left{border-left:1px solid #b8dbff;border-right:none}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right{border-left:1px solid #b8dbff}\n[dir="rtl"] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right{border-left:0;border-right:1px solid #b8dbff}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{padding:0 0 3px 3px}\n[dir="rtl"] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{padding:0 3px 3px 0}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input>input{color:#000}\n.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{top:5px;padding-bottom:5px;padding-left:3px}\n[dir="rtl"] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{padding-right:3px;padding-left:0}\n.ng-select .ng-clear-wrapper{color:#999}\n.ng-select .ng-clear-wrapper:hover .ng-clear{color:#D0021B}\n.ng-select .ng-spinner-zone{padding:5px 5px 0 0}\n[dir="rtl"] .ng-select .ng-spinner-zone{padding:5px 0 0 5px}\n.ng-select .ng-arrow-wrapper{width:25px;padding-right:5px}\n[dir="rtl"] .ng-select .ng-arrow-wrapper{padding-left:5px;padding-right:0}\n.ng-select .ng-arrow-wrapper:hover .ng-arrow{border-top-color:#666}\n.ng-select .ng-arrow-wrapper .ng-arrow{border-color:#999 transparent transparent;border-style:solid;border-width:5px 5px 2.5px}\n.ng-dropdown-panel{background-color:#fff;border:1px solid #ccc;box-shadow:0 1px 0 rgba(0,0,0,0.06);left:0}\n.ng-dropdown-panel.ng-select-top{bottom:100%;border-top-right-radius:4px;border-top-left-radius:4px;border-bottom-color:#e6e6e6;margin-bottom:-1px}\n.ng-dropdown-panel.ng-select-top .ng-dropdown-panel-items .ng-option:first-child{border-top-right-radius:4px;border-top-left-radius:4px}\n.ng-dropdown-panel.ng-select-right{left:100%;top:0;border-top-right-radius:4px;border-bottom-right-radius:4px;border-bottom-left-radius:4px;border-bottom-color:#e6e6e6;margin-bottom:-1px}\n.ng-dropdown-panel.ng-select-right .ng-dropdown-panel-items .ng-option:first-child{border-top-right-radius:4px}\n.ng-dropdown-panel.ng-select-bottom{top:100%;border-bottom-right-radius:4px;border-bottom-left-radius:4px;border-top-color:#e6e6e6;margin-top:-1px}\n.ng-dropdown-panel.ng-select-bottom .ng-dropdown-panel-items .ng-option:last-child{border-bottom-right-radius:4px;border-bottom-left-radius:4px}\n.ng-dropdown-panel.ng-select-left{left:-100%;top:0;border-top-left-radius:4px;border-bottom-right-radius:4px;border-bottom-left-radius:4px;border-bottom-color:#e6e6e6;margin-bottom:-1px}\n.ng-dropdown-panel.ng-select-left .ng-dropdown-panel-items .ng-option:first-child{border-top-left-radius:4px}\n.ng-dropdown-panel .ng-dropdown-header{border-bottom:1px solid #ccc;padding:5px 7px}\n.ng-dropdown-panel .ng-dropdown-footer{border-top:1px solid #ccc;padding:5px 7px}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{-webkit-user-select:none;user-select:none;padding:8px 10px;font-weight:500;color:rgba(0,0,0,0.54);cursor:pointer}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-disabled{cursor:default}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-marked{background-color:#f5faff}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-selected,.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-selected.ng-option-marked{background-color:#ebf5ff;font-weight:600}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{background-color:#fff;color:rgba(0,0,0,0.87);padding:8px 10px}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected.ng-option-marked{color:#333;background-color:#ebf5ff}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected .ng-option-label,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected.ng-option-marked .ng-option-label{font-weight:600}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-marked{background-color:#f5faff;color:#333}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-disabled{color:#ccc}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-child{padding-left:22px}\n[dir="rtl"] .ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-child{padding-right:22px;padding-left:0}\n.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-tag-label{font-size:80%;font-weight:400;padding-right:5px}\n[dir="rtl"] .ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-tag-label{padding-left:5px;padding-right:0}\n[dir="rtl"] .ng-dropdown-panel{direction:rtl;text-align:right}\n.pointer {\n  cursor: pointer;\n}\n.hidden {\n  display: none;\n}\n.flex-horizontal {\n  display: flex;\n}\n* {\n  box-sizing: border-box;\n}\nhtml,\nbody {\n  height: 100%;\n}\nbody {\n  margin: 0;\n  font-family: "Noto Sans", sans-serif;\n  font-style: normal;\n}\nhtml, body {\n  height: 100%;\n}\nbody {\n  margin: 0;\n  font-family: Roboto, "Helvetica Neue", sans-serif;\n}',""]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/app/button/button.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<button\r\n\t[ngStyle]="{\r\n\t\t\'background-color\': backgroundColor\r\n\t}"\r\n\t(click)="buttonClicked()"\r\n\tclass="material-icons-outlined basic-layout pointer"\r\n\t[ngClass]="{\r\n\t\tprimary: primaryButton,\r\n\t\trounded: roundedButton,\r\n\t\tbasicStyle: !primaryButton,\r\n\t\ticonRightClass: iconRight\r\n\t}"\r\n>\r\n\r\n\r\n\t<img [src]="iconLink" alt="" [ngClass]="{ hidden: !displayIcon }" />\r\n\r\n\r\n\t<h2 [ngStyle]="{ \'font-size\': buttonFontSize }">{{ title }}</h2>\r\n\r\n\r\n</button>\r\n\r\n\r\n'},"./src/app/telco-cards/telco-cards.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<div fxLayout="row" fxLayoutAlign="center center" class="card">\n\t<div fxLayout="row" fxFlex="100" fxLayoutAlign="start center" class="card-items">\n\t\t<div class="card-item-1" fxFlex="20" fxLayoutAlign="center center">\n\t\t\t<img [src]="cardIcon" alt="" />\n\t\t</div>\n\n\t\t<div class="card-item-2" fxFlex="48" fxLayout="column" fxLayoutGap="4px">\n\t\t\t<div class="item-1-upper" fxFlex="53">\n\t\t\t\t<p>{{ cardTitle }}</p>\n\t\t\t</div>\n\n\t\t\t<div class="item-2-lower" fxLayout="row" fxLayoutGap="6px" fxFlex="47" fxLayoutAlign="start center">\n\t\t\t\t<div fxFlex="46" class="lower-left" fxLayout="start center">\n\t\t\t\t\t<p>{{ cardSubtitle }}</p>\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- if the given percentage is greater than 0 --\x3e\n\t\t\t\t<div fxFlex="52" class="lower-right" fxLayout="row" fxLayoutAlign="space-evenly center" *ngIf="cardSubtitlePercentage >= 0">\n\t\t\t\t\t<p>{{ cardSubtitlePercentage }}%</p>\n\t\t\t\t\t<img [src]="positivePercentageIcon" alt="" />\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- if it is less than 0 --\x3e\n\t\t\t\t<div fxFlex="52" class="lower-right red" fxLayout="row" fxLayoutAlign="space-evenly center" *ngIf="cardSubtitlePercentage < 0">\n\t\t\t\t\t<p>{{ cardSubtitlePercentage }}%</p>\n\t\t\t\t\t<img [src]="negativePercentageIcon" alt="" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class="card-item-3" fxFlex="32" fxLayout="row" fxLayoutAlign="end end">\n\t\t\t<p (click)="viewAllClick()">View All</p>\n\t\t</div>\n\t</div>\n</div>\n'},"./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<plotly-plot [data]="barChartData.data" [layout]="barChartData.layout"></plotly-plot>\n'},"./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<div class="anvil-role-semi_pie_chart">\n\t<plotly-plot\n\t\t[data]="pieChartData.data"\n\t\t[layout]="pieChartData.layout"\n\t\t[useResizeHandler]="true"\n\t\t[style]="{ position: \'relative\', width: \'100%\', height: \'100%\' }"></plotly-plot>\n</div>\n'},"./src/app/telco-list/telco-list.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<ng-container *ngIf="!showCustomOption" >\n  <ng-select (add)="onAddValue($event)" (change)="onChangeValue($event)" (paste)="onPasteSearch($event)"\n    (remove)="onRemoveValue($event)" (search)="onSearchValue($event)" [(ngModel)]="selectedDropdownlist"\n    [addTag]="addTag" [bindLabel]="bindLabel" [items]="dropdownlist" [multiple]="multiselect"\n    [ngClass]="{classes: true,insertSearchIcon:customDropdownIcon}" [placeholder]="placeholder" [virtualScroll]="true"\n    [readonly]="disableInput" class="multiselect-autocomplete" [ngStyle]="{\'font-family\':fontFamily }">\n    <ng-template let-clear="clear" let-items="items" ng-multi-label-tmp>\n      <div class="user-detail">\n        <div *ngFor="let item of items | slice:0:itemsLimit" class="ng-value">\n          <span class="ng-value-label" title="{{$any(item)[bindLabelArray[0]]}}"\n            [ngClass]="{\'wrap-text\':$any(item)[bindLabelArray[0]].length>4}"><em class="initial">\n              {{$any(item).symbol}}</em>\n            <span>{{$any(item)[bindLabelArray[0]]}}</span></span>\n          <span (click)="clear(item)" aria-hidden="true" class="ng-value-icon right">×</span>\n        </div>\n      </div>\n      <div *ngIf="items.length > itemsLimit" class="ng-value item-length">\n        <div class="inner-wrap">\n          <span class="ng-value-label">+{{items.length - itemsLimit}}</span>\n          <div class="exclude-items-container">\n            <ul class="items-other">\n              <li *ngFor="let item of items | slice:itemsLimit">\n                <div class="d-flex">\n                  <span *ngIf="withLimitInitial" class="tags tags-green mr-2">{{$any(item).symbol}}</span><span\n                    class="items-title">{{$any(item)[bindLabelArray[0]]}}</span>\n                  <span (click)="clear(item)" aria-hidden="true" class="ng-value-icon right">×</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ng-select>\n</ng-container>\n<ng-container *ngIf="showCustomOption">\n  <ng-select (change)="onAutoCompleteChange($event)" (click)="onOptionSelected($event)" (paste)="onPasteSearch($event)"\n    (search)="onDropdownSearch($event)" [(ngModel)]="selectedDropdownlist" [bindLabel]="bindLabel"\n    [items]="dropdownlist" [multiple]="multiselect" [ngClass]="{classes: true,insertSearchIcon:customDropdownIcon}"\n    [placeholder]="placeholder" [searchFn]="customSearch" [searchWhileComposing]="false" [virtualScroll]="true"\n    class="multiselect-autocomplete" [ngStyle]="{\'font-family\':fontFamily }">\n    <ng-template #labelTemplate *ngIf="showCustomOption" let-item="item" ng-option-tmp>\n      <div class="option-line-height">\n        <div>\n          <h6 class="font-weight-bold d-flex">{{item[bindLabelArray[0]]}}\n            <span *ngIf="multiLabelBinding && bindLabelArray?.length > 1" class="ml-2 option-line-height-code">({{\n              item[bindLabelArray[1]] }})</span>\n          </h6>\n        </div>\n        <span class="option-label-size">{{ item[bindLabelArray[2]] }}</span>\n      </div>\n    </ng-template>\n    <ng-template let-clear="clear" let-items="items" ng-multi-label-tmp>\n      <div class="user-detail">\n        <div *ngFor="let item of items | slice:0:itemsLimit" class="ng-value">\n          <span class="ng-value-label" title="{{$any(item)[bindLabelArray[0]]}}"\n            [ngClass]="{\'wrap-text\':$any(item)[bindLabelArray[0]].length>4}"><em class="initial">\n              {{$any(item).symbol}}</em>\n            <span>{{$any(item)[bindLabelArray[0]]}}</span></span>\n          <span (click)="clear(item)" aria-hidden="true" class="ng-value-icon right">×</span>\n        </div>\n      </div>\n      <div *ngIf="items.length > itemsLimit" class="ng-value item-length">\n        <div class="inner-wrap">\n          <span class="ng-value-label">+{{items.length - itemsLimit}}</span>\n          <div class="exclude-items-container">\n            <ul class="items-other">\n              <li *ngFor="let item of items | slice:itemsLimit">\n                <div class="d-flex">\n                  <span *ngIf="withLimitInitial" class="tags tags-green mr-2">{{$any(item).symbol}}</span><span\n                    class="items-title">{{$any(item)[bindLabelArray[0]]}}</span>\n                  <span (click)="clear(item)" aria-hidden="true" class="ng-value-icon right">×</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ng-select>\n</ng-container>\n'},"./src/app/telco-maps/telco-maps.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<div class="map-wrapper">\n\t<div fxFlex="1 1 100%" #map class="map-container"></div>\n</div>\n'},"./src/app/telco-search/telco-search.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<div class="search" [ngStyle]="{\'background\': backgroundColor,\'border-color\':borderColor,\'border-radius\':borderRadius}">\n  <img [src]="iconUrl" alt="icon" (click)="searchClick()">\n  <input type="text" [placeholder]="placeholder" [(ngModel)]="searchText" [ngStyle]="{\'background\': backgroundColor,\'font-family\':fontFamily}">\n</div>\n'},"./src/app/telco-table/telco-table.component.html":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__='<div class="mat-elevation-z8" *ngIf="dataSource">\r\n\t<table mat-table [dataSource]="dataSource" matSort (matSortChange)="announceSortChange($event)">\r\n\t\t<ng-container matColumnDef="SiteName">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by SiteName">SiteName</th>\r\n\t\t\t<td mat-cell *matCellDef="let element">\r\n\t\t\t\t{{ element.SiteName }}\r\n\t\t\t</td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef="CountofAlarm">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by CountofAlarm">Count of Alarm</th>\r\n\t\t\t<td mat-cell *matCellDef="let element">{{ element.CountofAlarm }}</td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef="Timestamp">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by Timestamp">Timestamp</th>\r\n\t\t\t<td mat-cell *matCellDef="let element">\r\n\t\t\t\t<p>{{ element.Timestamp.date }}</p>\r\n\t\t\t\t<p>{{ element.Timestamp.time }}</p>\r\n\t\t\t</td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef="RCA">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by RCA">RCA</th>\r\n\t\t\t<td mat-cell *matCellDef="let element" class="RCA1-cell">\r\n\t\t\t\t<img [src]="element.RCA.iconImg" alt="" />\r\n\t\t\t\t<p>{{ element.RCA.status }}</p>\r\n\t\t\t</td>\r\n\t\t</ng-container>\r\n\r\n\t\t<tr mat-header-row *matHeaderRowDef="displayedColumns; sticky: true"></tr>\r\n\t\t<tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\r\n\t</table>\r\n\r\n\t<mat-paginator [pageSizeOptions]="[5, 10, 20]" showFirstLastButtons aria-label="Select page of periodic elements"> </mat-paginator>\r\n</div>\r\n'},"./src/styles.scss":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_rules_1_use_0_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_rules_1_use_1_styles_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].rules[0].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].rules[0].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].rules[1].use[0]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].rules[1].use[1]!./src/styles.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_rules_1_use_0_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_rules_1_use_1_styles_scss__WEBPACK_IMPORTED_MODULE_6__.Z,options),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_rules_1_use_0_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_rules_1_use_1_styles_scss__WEBPACK_IMPORTED_MODULE_6__.Z&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_rules_1_use_0_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_rules_1_use_1_styles_scss__WEBPACK_IMPORTED_MODULE_6__.Z.locals&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_rules_0_oneOf_1_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_rules_1_use_0_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_rules_1_use_1_styles_scss__WEBPACK_IMPORTED_MODULE_6__.Z.locals},"./src/stories/telco-bar-chart.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bar:()=>Bar,default:()=>telco_bar_chart_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),angular_plotly_js=__webpack_require__("./node_modules/angular-plotly.js/__ivy_ngcc__/fesm2015/angular-plotly.js.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js"),plotly_min=__webpack_require__("./node_modules/plotly.js-dist-min/plotly.min.js");angular_plotly_js.XX.plotlyjs=plotly_min;let TelcoBarChartComponent=class TelcoBarChartComponent{constructor(){this.barChartData={}}ngOnInit(){}};(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoBarChartComponent.prototype,"barChartData",void 0),TelcoBarChartComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-telco-bar-chart",template:(__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.html").default||__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.html")).length?__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.html").default||__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.html"):"",styles:[(__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.scss").default||__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.scss")).length?__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.scss").default||__webpack_require__("./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.scss"):""]}),(0,tslib_es6.w6)("design:paramtypes",[])],TelcoBarChartComponent);angular_plotly_js.U4.setPlotlyVersion("latest");const telco_bar_chart_stories={title:"Iauro/Telco-Bar-chart",component:TelcoBarChartComponent,decorators:[(0,client.moduleMetadata)({declarations:[],imports:[common.ez,angular_plotly_js.U4]})]},Bar=(args=>({props:args})).bind({});Bar.args={barChartData:{data:[{x:[1,2,3],y:[2,6,3],type:"scatter",mode:"lines+points",marker:{color:"red"}},{x:[1,2,3],y:[2,5,3],type:"bar"}],layout:{width:"100%",height:"100%",title:"A Fancy Plot"}}},Bar.parameters=Object.assign({storySource:{source:"(args: TelcoBarChartComponent) => ({\r\n\tprops: args,\r\n})"}},Bar.parameters)},"./src/stories/telco-button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>telco_button_stories,primaryButton:()=>primaryButton});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");let ButtonComponent=class ButtonComponent{constructor(){this.title="",this.primaryButton=!1,this.displayIcon=!1,this.roundedButton=!0,this.iconLink="../../assets/perm_identity_white_48dp.svg",this.iconRight=!1,this.buttonClick=new core.EventEmitter,this.buttonFontSize="10px"}buttonClicked(){this.buttonClick.emit()}};(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],ButtonComponent.prototype,"title",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],ButtonComponent.prototype,"backgroundColor",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Boolean)],ButtonComponent.prototype,"primaryButton",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Boolean)],ButtonComponent.prototype,"displayIcon",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Boolean)],ButtonComponent.prototype,"roundedButton",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],ButtonComponent.prototype,"iconLink",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Boolean)],ButtonComponent.prototype,"iconRight",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],ButtonComponent.prototype,"buttonClick",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],ButtonComponent.prototype,"buttonFontSize",void 0),ButtonComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"telco-button",template:(__webpack_require__("./src/app/button/button.component.html").default||__webpack_require__("./src/app/button/button.component.html")).length?__webpack_require__("./src/app/button/button.component.html").default||__webpack_require__("./src/app/button/button.component.html"):"",styles:[(__webpack_require__("./src/app/button/button.component.scss").default||__webpack_require__("./src/app/button/button.component.scss")).length?__webpack_require__("./src/app/button/button.component.scss").default||__webpack_require__("./src/app/button/button.component.scss"):""]})],ButtonComponent);const telco_button_stories={title:"Iauro/Telco-Button",component:ButtonComponent},primaryButton=(args=>({Component:ButtonComponent,props:args})).bind({});primaryButton.args={title:"Primary Button",buttonFontSize:"15px",primaryButton:!0,displayIcon:!1,roundedButton:!0,iconLink:"../../assets/whiteLogo.svg",iconRight:!1},primaryButton.parameters=Object.assign({storySource:{source:"(args: ButtonComponent) => ({\r\n\tComponent: ButtonComponent,\r\n\tprops: args,\r\n})"}},primaryButton.parameters)},"./src/stories/telco-card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,default:()=>telco_card_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js"),icon=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js"),fesm2015_button=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js"),fesm2015_forms=__webpack_require__("./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");let TelcoCardsComponent=class TelcoCardsComponent{constructor(){this.cardIcon="../../assets/cards-icon/Social_notifications.svg",this.cardTitle="Total Alarm",this.cardSubtitle="1390",this.cardSubtitlePercentage=12,this.positivePercentageIcon="../../assets/cards-icon/green-thumbs-up.svg",this.negativePercentageIcon="../../assets/cards-icon/red-arrow-up.svg",this.viewAllClicked=new core.EventEmitter}viewAllClick(){this.viewAllClicked.emit()}};(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoCardsComponent.prototype,"cardIcon",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoCardsComponent.prototype,"cardTitle",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoCardsComponent.prototype,"cardSubtitle",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Number)],TelcoCardsComponent.prototype,"cardSubtitlePercentage",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoCardsComponent.prototype,"positivePercentageIcon",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoCardsComponent.prototype,"negativePercentageIcon",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoCardsComponent.prototype,"viewAllClicked",void 0),TelcoCardsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-telco-cards",template:(__webpack_require__("./src/app/telco-cards/telco-cards.component.html").default||__webpack_require__("./src/app/telco-cards/telco-cards.component.html")).length?__webpack_require__("./src/app/telco-cards/telco-cards.component.html").default||__webpack_require__("./src/app/telco-cards/telco-cards.component.html"):"",styles:[(__webpack_require__("./src/app/telco-cards/telco-cards.component.scss").default||__webpack_require__("./src/app/telco-cards/telco-cards.component.scss")).length?__webpack_require__("./src/app/telco-cards/telco-cards.component.scss").default||__webpack_require__("./src/app/telco-cards/telco-cards.component.scss"):""]}),(0,tslib_es6.w6)("design:paramtypes",[])],TelcoCardsComponent);var flex_layout=__webpack_require__("./node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/flex-layout.js");const telco_card_stories={title:"Iauro/Telco-Card",component:TelcoCardsComponent,decorators:[(0,client.moduleMetadata)({declarations:[TelcoCardsComponent],imports:[common.ez,platform_browser.BrowserModule,icon.Ps,fesm2015_button.ot,fesm2015_forms.FormsModule,fesm2015_forms.ReactiveFormsModule,flex_layout.o9]})]},Basic=(args=>({Component:TelcoCardsComponent,props:args})).bind({});Basic.args={cardIcon:"../../assets/cards-icon/Social_notifications.svg",cardTitle:"Total Alarm",cardSubtitle:"1390",cardSubtitlePercentage:12,positivePercentageIcon:"../../assets/cards-icon/green-thumbs-up.svg",negativePercentageIcon:"../../assets/cards-icon/red-arrow-up.svg"},Basic.parameters=Object.assign({storySource:{source:"(args: TelcoCardsComponent) => ({\r\n\tComponent: TelcoCardsComponent,\r\n\tprops: args,\r\n})"}},Basic.parameters)},"./src/stories/telco-list.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,default:()=>telco_list_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js"),Subject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/Subject.js"),debounceTime=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js");let TelcoListComponent=class TelcoListComponent{constructor(){this.dropdownlist=[],this.multiselect=!0,this.addTag=!0,this.disableInput=!1,this.selectedDropdownlist=[],this.showCustomOption=!1,this.bindLabel="name",this.withInitial=!1,this.itemsLimit=1,this.multiLabelBinding=!1,this.bindLabelArray=["name","value"],this.placeholder="",this.customDropdownIcon=!1,this.withLimitInitial=!1,this.fontFamily="Noto Sans, sans-serif",this.onAdd=new core.EventEmitter,this.onRemove=new core.EventEmitter,this.onChange=new core.EventEmitter,this.onClear=new core.EventEmitter,this.onSearch=new core.EventEmitter,this.searchedItem=new core.EventEmitter,this.onPasteSearchedItem=new core.EventEmitter,this.autocompleteChange=new core.EventEmitter,this.autocompleteOptionSelect=new core.EventEmitter,this.insertSearchIcon="",this.isPaste=!1,this.actionSource=new Subject.xQ,this.currentAction=this.actionSource.asObservable()}get classes(){return[this.withInitial?"with-initial":""]}ngOnInit(){this.subscription=this.currentAction.pipe((0,debounceTime.b)(500)).subscribe((value=>{this.searchedItem.emit(value),this.onSearch.emit(value)}))}ngOnDestroy(){this.subscription.unsubscribe()}ngOnChanges(){switch(this.bindCustomLabel(),this.bindLabelArray.length){case 1:this.bindLabelArray=[this.bindLabelArray[0],"name","value"];break;case 2:this.bindLabelArray=[this.bindLabelArray[0],this.bindLabelArray[1],"value"];break;default:this.bindLabelArray=["name","value","id"]}}toggleDisabled(){const item=this.dropdownlist[0];item.disabled=!item.disabled}onAddValue(event){this.onAdd.emit(event)}onRemoveValue(event){this.onRemove.emit(event)}onChangeValue(event){this.onChange.emit(event)}onSearchValue(event){this.isPaste?this.isPaste=!1:this.onSearch.emit(event)}onPasteSearch(event){this.isPaste=!0,this.onPasteSearchedItem.emit(event.clipboardData.getData("Text")),setTimeout((()=>{event.target.value=null}),0)}onDropdownSearch(event){this.isPaste?this.isPaste=!1:this.actionSource.next(event.term)}onAutoCompleteChange(event){this.autocompleteChange.emit(event)}onOptionSelected(event){this.bindCustomLabel(),this.autocompleteOptionSelect.emit(event)}bindCustomLabel(){var _a,_b;this.multiLabelBinding&&this.showCustomOption&&(null===(_a=this.bindLabelArray)||void 0===_a?void 0:_a.length)>0&&(null===(_b=this.dropdownlist)||void 0===_b?void 0:_b.length)>0&&(this.dropdownlist=this.dropdownlist.map((bindLabelValue=>(bindLabelValue.bindLabel="",bindLabelValue.bindLabel=this.bindLabelArray.map((element=>bindLabelValue[element])).join(""),bindLabelValue))))}customSearch(term,item){const terms=term.toLowerCase().split(" ").filter(Boolean),search=item.bindLabel?item.bindLabel.toLowerCase():"";return terms.every((termValue=>-1!==search.indexOf(termValue)))}};(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Array)],TelcoListComponent.prototype,"dropdownlist",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"multiselect",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"addTag",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"disableInput",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Array)],TelcoListComponent.prototype,"selectedDropdownlist",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"showCustomOption",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"bindLabel",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"withInitial",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"itemsLimit",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"multiLabelBinding",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"bindLabelArray",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"placeholder",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"customDropdownIcon",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"withLimitInitial",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"fontFamily",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"onAdd",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"onRemove",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"onChange",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"onClear",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"onSearch",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"searchedItem",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"onPasteSearchedItem",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"autocompleteChange",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoListComponent.prototype,"autocompleteOptionSelect",void 0),TelcoListComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-telco-list",template:(__webpack_require__("./src/app/telco-list/telco-list.component.html").default||__webpack_require__("./src/app/telco-list/telco-list.component.html")).length?__webpack_require__("./src/app/telco-list/telco-list.component.html").default||__webpack_require__("./src/app/telco-list/telco-list.component.html"):"",styles:[(__webpack_require__("./src/app/telco-list/telco-list.component.scss").default||__webpack_require__("./src/app/telco-list/telco-list.component.scss")).length?__webpack_require__("./src/app/telco-list/telco-list.component.scss").default||__webpack_require__("./src/app/telco-list/telco-list.component.scss"):""]})],TelcoListComponent);var fesm2015_forms=__webpack_require__("./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js"),ng_select_ng_select=__webpack_require__("./node_modules/@ng-select/ng-select/__ivy_ngcc__/fesm2015/ng-select-ng-select.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");const telco_list_stories={title:"Iauro/Telco-List",component:TelcoListComponent,decorators:[(0,client.moduleMetadata)({declarations:[TelcoListComponent],imports:[common.ez,platform_browser.BrowserModule,fesm2015_forms.FormsModule,fesm2015_forms.ReactiveFormsModule,ng_select_ng_select.A0]})]},Basic=(args=>({Component:TelcoListComponent,props:args})).bind({});Basic.args={placeholder:"Select Severity",dropdownlist:[{name:"All",value:"All",id:1},{name:"Critical",value:"Critical",id:2},{name:"Major",value:"Major",id:3},{name:"Clear",value:"Clear",id:4}],selectedDropdownlist:[],bindLabel:"name",showCustomOption:!1,withInitial:!1,itemsLimit:2,multiLabelBinding:!1,customDropdownIcon:!1,multiselect:!1,withLimitInitial:!1,bindLabelArray:["name","value","id"],fontFamily:"Noto Sans, sans-serif"},Basic.parameters=Object.assign({storySource:{source:"(args: TelcoListComponent) => ({\r\n\tComponent: TelcoListComponent,\r\n\tprops: args,\r\n})"}},Basic.parameters)},"./src/stories/telco-maps.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Config:()=>Config,Default:()=>Default,Markers:()=>Markers,default:()=>telco_maps_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),flex=__webpack_require__("./node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/flex.js"),fesm2015_forms=__webpack_require__("./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),animations=__webpack_require__("./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/animations.js"),palette=__webpack_require__("./src/app/telco-maps/theming/palette.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");const map_icons=new class mapIcons{constructor(){this.markers={SITE:"M 4, 11 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0",SITE_ACTIVE:"M155,90 C161.627417,90 167,95.372583 167,102 C167,108.627417 161.627417,114 155,114 C148.372583,114 143,108.627417 143,102 C143,95.372583 148.372583,90 155,90 Z M155.126316,92.2736842 C149.684858,92.2736842 145.273684,96.6848576 145.273684,102.126316 C145.273684,107.567774 149.684858,111.978947 155.126316,111.978947 C160.567774,111.978947 164.978947,107.567774 164.978947,102.126316 C164.978947,96.6848576 160.567774,92.2736842 155.126316,92.2736842 Z M155.126316,95.3052632 C158.893479,95.3052632 161.947368,98.3591524 161.947368,102.126316 C161.947368,105.893479 158.893479,108.947368 155.126316,108.947368 C151.359152,108.947368 148.305263,105.893479 148.305263,102.126316 C148.305263,98.3591524 151.359152,95.3052632 155.126316,95.3052632 Z",SITE_ZOOMED_ALT:"M19.644 24.168C19.156 26.35 17.035 28 14.5 28s-4.656-1.65-5.143-3.832h10.287zM15.9 0c4.74.623 8.4 4.344 8.4 8.84v3.56c0 2.529 1.214 4.915 3.33 6.547.558.436.87 1.054.87 1.708 0 1.233-1.099 2.236-2.45 2.236H2.95C1.6 22.89.5 21.888.5 20.655c0-.654.312-1.272.857-1.698C3.487 17.315 4.7 14.93 4.7 12.401V8.839C4.7 4.344 8.358.623 13.1 0h2.8z",SITE_ZOOMED:"M 0, 11 a 11,11 0 1,0 22,0 a 11,11 0 1,0 -22,0",NETWORK_ELEMENT:"M17.2301946,0.366381323 C17.6684825,-0.0719066148 18.3259144,-0.0719066148 18.7642023,0.366381323 C23.0375097,5.07797665 23.0375097,12.6384436 18.7642023,17.2404669 C18.3259144,17.7883268 17.5589105,17.7883268 17.2301946,17.2404669 C16.7919066,16.802179 16.7919066,16.0351751 17.2301946,15.5968872 C20.6269261,11.8714397 20.6269261,5.84498054 17.2301946,2.00996109 C16.7919066,1.57167315 16.7919066,0.804669261 17.2301946,0.366381323 Z M3.20498054,0.366381323 C3.64326848,-0.0719066148 4.30070039,-0.0719066148 4.73898833,0.366381323 C5.17727626,0.804669261 5.17727626,1.57167315 4.73898833,2.00996109 C1.34225681,5.73540856 1.34225681,11.7618677 4.73898833,15.5968872 C5.17727626,16.0351751 5.17727626,16.802179 4.73898833,17.2404669 C4.41027237,17.7883268 3.64326848,17.7883268 3.20498054,17.2404669 C-1.06832685,12.6384436 -1.06832685,4.96840467 3.20498054,0.366381323 Z M14.052607,3.76311284 C14.4908949,3.3248249 15.1483268,3.3248249 15.5866148,3.76311284 C18.1067704,6.61198444 18.1067704,11.1044358 15.5866148,13.9533074 C15.2578988,14.3915953 14.4908949,14.3915953 14.052607,13.8437354 C13.6143191,13.4054475 13.6143191,12.6384436 14.052607,12.2001556 C15.8057588,10.3374319 15.8057588,7.26941634 14.052607,5.40669261 C13.6143191,4.96840467 13.6143191,4.20140078 14.052607,3.76311284 Z M6.38256809,3.65354086 C6.82085603,3.21525292 7.47828794,3.21525292 7.91657588,3.65354086 C8.35486381,4.09182879 8.35486381,4.85883268 7.91657588,5.29712062 C6.16342412,7.15984436 6.16342412,10.2278599 7.91657588,12.0905837 C8.35486381,12.5288716 8.35486381,13.2958755 7.91657588,13.7341634 C7.47828794,14.3915953 6.71128405,14.3915953 6.38256809,13.8437354 C3.86241245,10.9948638 3.86241245,6.50241245 6.38256809,3.65354086 Z M10.9845914,6.61198443 C12.1948901,6.61198443 13.1760311,7.5931254 13.1760311,8.80342412 C13.1760311,10.0137228 12.1948901,10.9948638 10.9845914,10.9948638 C9.77429268,10.9948638 8.79315171,10.0137228 8.79315171,8.80342412 C8.79315171,7.5931254 9.77429268,6.61198443 10.9845914,6.61198443 Z"}}};var _a,_b,_c,_d,_e;let TelcoMapsComponent=class TelcoMapsComponent{constructor(zone){this.zone=zone,this.zoomLevel=1,this.markersHash={},this._mapDefaultConfig={iconDefault:"SITE",iconZoomed:"SITE_ZOOMED_ALT",iconSpiderfied:"NETWORK_ELEMENT",iconColor:"#E04B4B",iconAnchorX:31,iconAnchorY:-33,zoomLevelToChangeIcon:14,centerOnMapUpdate:!0,centerOnBounds:!0,showMesh:!0,filterMarkersOutsideBounds:!1},this.viewInit=!1,this.neId="ne_135",this.ticketid="ticket-123",this.data2=[{title:"CE-id-123",actions:["Edit","Delete"]},{title:"CE-id-124",actions:["Edit","Delete"]},{title:"CE-id-125",actions:["Edit","Delete"]},{title:"CE-id-126",actions:["Edit","Delete"]},{title:"CE-id-124",actions:["Edit","Delete"]},{title:"CE-id-125",actions:["Edit","Delete"]},{title:"CE-id-126",actions:["Edit","Delete"]},{title:"CE-id-124",actions:["Edit","Delete"]},{title:"CE-id-125",actions:["Edit","Delete"]},{title:"CE-id-126",actions:["Edit","Delete"]}],this.showDialog=new core.EventEmitter,this.hideDialog=new core.EventEmitter}onResize(){this.centerMap(this.map,this.map.markers)}set config(value){this._mapConfig=Object.assign(Object.assign({},this._mapDefaultConfig),value),this.viewInit&&this.resetMarkers()}set markers(value){let filteredMarkers=value;this._mapConfig.bounds&&this._mapConfig.filterMarkersOutsideBounds&&(filteredMarkers=this.filterMarkers(value,this._mapConfig.bounds)),this._markers=filteredMarkers,this.viewInit&&this.resetMarkers()}ngAfterViewInit(){this._markers&&this._markers.length>0?(this.oneTimeSetup(),this.resetMarkers(),this.viewInit=!0):this.oneTimeSetup()}oneTimeSetup(){const mapProperties={center:new google.maps.LatLng(0,0),zoom:10,mapTypeId:google.maps.MapTypeId.ROADMAP,fullscreenControl:!1},latLngBounds=new google.maps.LatLngBounds;this._mapConfig&&this._mapConfig.bounds&&(latLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat,+this._mapConfig.bounds.start.lng)),latLngBounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat,+this._mapConfig.bounds.end.lng)),mapProperties.restriction={latLngBounds,strictBounds:!1}),this.zone.runOutsideAngular((()=>{this.map=new google.maps.Map(this.mapElement.nativeElement,mapProperties)})),this._mapConfig&&this._mapConfig.bounds&&this._mapConfig.centerOnBounds&&this.map.fitBounds(latLngBounds),this.map.markers=[],this.map.markerListeners=[],this.map.mesh=[],this.map.markerCluster=null,this.listenToZoomChange(this.map)}resetMarkers(){this.map&&this.map.markers&&this.map.markers.length>0&&(this.map.markerCluster.clearMarkers(),this.map.mesh.forEach((e=>{this.removeLine(e)})),this.map.markerListeners.forEach((e=>{google.maps.event.clearInstanceListeners(e.mouseover),google.maps.event.clearInstanceListeners(e.mouseout)})),this.map.markers=[],this.map.markerListeners=[],this.map.mesh=[],this.markersHash={}),this._markers&&this._markers.length>0&&(this._mapConfig.bounds&&this._mapConfig.filterMarkersOutsideBounds&&(this._markers=this.filterMarkers(this._markers,this._mapConfig.bounds)),this._markers.forEach((e=>{this.addMarker(e,this.map,this.oms,this.iw,this.map.markers)})));this.map.markerCluster=new MarkerClusterer(this.map,this.map.markers,{styles:[{textColor:"white",height:32,url:"assets/images/map-markers/marker.png",width:32},{textColor:"white",height:32,url:"assets/images/map-markers/marker.png",width:32},{textColor:"white",height:32,url:"assets/images/map-markers/marker.png",width:32},{textColor:"white",height:32,url:"assets/images/map-markers/marker.png",width:32},{textColor:"white",height:32,url:"assets/images/map-markers/marker.png",width:32}]}),this._mapConfig.showMesh&&this._markers.forEach((e=>{e.mesh&&e.mesh.length>0&&e.mesh.forEach((m=>{this.addLine(this.map,e.id,m)}))})),this._mapConfig.centerOnMapUpdate&&this.centerMap(this.map,this.map.markers)}addMarker(marker,map,oms=this.oms,iw=this.iw,markers){const mapMarker=this.getMapMarker(map,marker);markers.push(mapMarker),this.listenToMarkerHover(mapMarker),this.markersHash[marker.id]={lat:marker.lat,lng:marker.lng}}addLine(map,sourceId,destinationId){const sMarker=this.markersHash[sourceId],dMarker=this.markersHash[destinationId];if(!sMarker||!dMarker)return;const source=new google.maps.LatLng(sMarker.lat,sMarker.lng),destination=new google.maps.LatLng(dMarker.lat,dMarker.lng),line=new google.maps.Polyline({map,path:[source,destination],strokeColor:"#444",strokeWeight:1.5,zIndex:+google.maps.Marker.MAX_ZINDEX+1});map.mesh.push(line)}removeLine(line){line.setMap(null)}getMapMarker(map,marker){const locationAddressLatLng=new google.maps.LatLng(marker.lat,marker.lng),iconDefault=this.getMapMarkerIcon(marker,marker.iconDefault?marker.iconDefault:this._mapConfig.iconDefault),iconZoomed=this.getMapMarkerIcon(marker,marker.iconZoomed?marker.iconZoomed:this._mapConfig.iconZoomed),iconSpiderfied=this.getMapMarkerIcon(marker,marker.iconSpiderfied?marker.iconSpiderfied:this._mapConfig.iconSpiderfied),mapMarker=new google.maps.Marker({map,position:locationAddressLatLng,icon:map.getZoom()<this._mapConfig.zoomLevelToChangeIcon?iconDefault:iconZoomed});return mapMarker.set("iconDefault",iconDefault),mapMarker.set("iconZoomed",iconZoomed),mapMarker.set("iconSpiderfied",iconSpiderfied),mapMarker}getinfoContent(){return'<div id="map-content-box">\n      <div class="header-wrapper">\n        <div class="left-box">\n          <div class="line1">\n            <p id="pid">'+this.neId+'</p>\n      </div>\n      <div class="line2">\n        <p id="pid" class=" opacity50 margin10"> Alarms:300</p>\n      <p id="pid" class="opacity50">Ticket:200</p>\n      </div>\n    </div>\n    <div class="right-box">\n      <div class="icon-box margin10 "></div>\n      <div class="icon-box"></div>\n    </div>\n  </div>\n  <div class="body-wrapper">'+this.generateLayout()+"  </div>\n      </div>\n      "}generateLayout(){let str="";for(let i=0;i<this.data2.length;i+=1)str+=' <div class="row">\n        <div class="body-row">\n          <p id="pid" class="text">'+this.data2[i].title+'</p>\n        </div>\n        <div class="right-box">'+this.getActions(this.data2[i].actions)+"</div>\n        </div>";return str}getActions(data){let str="";for(let i=0;i<data.length;i+=1)return str+='<div class="icon-box margin10">\n        </div>',str}getMapMarkerIcon(marker,icon){return{path:map_icons.markers[icon.toUpperCase()],fillColor:marker.color?marker.color:this._mapConfig.iconColor,fillOpacity:1,strokeColor:"transparent",anchor:new google.maps.Point(this._mapConfig.iconAnchorX,this._mapConfig.iconAnchorY),scale:1}}onSpiderfierEvent(map,markers,type){switch(type){case"pre-spiderfy":if(this.preSpiderfyTimerref)return;this.preSpiderfyTimerref=setTimeout((()=>{this.preSpiderfyTimerref=null}),1),this.staticMarker&&(this.staticMarker.setMap(null),this.staticMarker=null),this.staticMarker=new google.maps.Marker({map,position:new google.maps.LatLng(markers[0].position.lat(),markers[0].position.lng()),icon:markers[0].iconZoomed});break;case"spiderfy":if(this.spiderfyTimerref)return;this.spiderfyTimerref=setTimeout((()=>{this.spiderfyTimerref=null}),1),markers.forEach((e=>{e.setIcon(e.iconSpiderfied)}));break;case"unspiderfy":if(this.unspiderfyTimerref)return;this.unspiderfyTimerref=setTimeout((()=>{this.unspiderfyTimerref=null}),1),this.staticMarker&&(this.staticMarker.setMap(null),this.staticMarker=null),setTimeout((()=>{const zoomed=!(this.zoomLevel<this._mapConfig.zoomLevelToChangeIcon);markers.forEach((e=>{e.setIcon(zoomed?e.iconZoomed:e.iconDefault)}))}),1)}}centerMap(map,markers){this.bounds=new google.maps.LatLngBounds,this._mapConfig.bounds&&this._mapConfig.centerOnBounds?(this.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.start.lat,+this._mapConfig.bounds.start.lng)),this.bounds.extend(new google.maps.LatLng(+this._mapConfig.bounds.end.lat,+this._mapConfig.bounds.end.lng))):markers.forEach((marker=>{const latlng=new google.maps.LatLng(marker.position.lat(),marker.position.lng());this.bounds.extend(latlng)})),map.fitBounds(this.bounds),setTimeout((_=>{!(map.getZoom()<=this._mapConfig.zoomLevelToChangeIcon)&&map.setZoom(this._mapConfig.zoomLevelToChangeIcon)}),1)}listenToZoomChange(map){google.maps.event.addListener(map,"zoom_changed",(()=>{this.updateMapIcon(map)}))}listenToMarkerHover(marker){const mouseover=marker.addListener("mouseover",(e=>{const index=this._markers.findIndex((marker=>+marker.lat==+e.latLng.lat()&&+marker.lng==+e.latLng.lng()));this.zone.run((()=>{this.showDialog.emit({marker:this._markers[index],event:e.domEvent})}))})),mouseout=marker.addListener("mouseout",(e=>{this.zone.run((()=>{this.hideDialog.emit(e.domEvent)}))}));this.map.markerListeners.push({mouseover,mouseout})}updateMapIcon(map){if(!this.map||!this.map.markers||!this.map.markers.length)return;const prevZoomLevel=this.zoomLevel;this.zoomLevel=this.map.getZoom();const showZoomedIcon=!(this.zoomLevel<this._mapConfig.zoomLevelToChangeIcon);prevZoomLevel<this._mapConfig.zoomLevelToChangeIcon&&this.zoomLevel<this._mapConfig.zoomLevelToChangeIcon||prevZoomLevel>=this._mapConfig.zoomLevelToChangeIcon&&this.zoomLevel>=this._mapConfig.zoomLevelToChangeIcon||(showZoomedIcon?map.markers.forEach((e=>{e.setIcon(e.iconZoomed)})):map.markers.forEach((e=>{e.setIcon(e.iconDefault)})))}filterMarkers(markers,bounds){return markers.filter((marker=>{const latS=Math.min(+bounds.start.lat,+bounds.end.lat),latE=Math.max(+bounds.start.lat,+bounds.end.lat),lngS=Math.min(+bounds.start.lng,+bounds.end.lng),lngE=Math.max(+bounds.start.lng,+bounds.end.lng);if(+marker.lat>=latS&&+marker.lat<=latE&&+marker.lng>=lngS&&+marker.lng<=lngE)return!0}))}};(0,tslib_es6.gn)([(0,core.ViewChild)("map"),(0,tslib_es6.w6)("design:type",Object)],TelcoMapsComponent.prototype,"mapElement",void 0),(0,tslib_es6.gn)([(0,core.HostListener)("window:resize",["$event"]),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[]),(0,tslib_es6.w6)("design:returntype",void 0)],TelcoMapsComponent.prototype,"onResize",null),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object),(0,tslib_es6.w6)("design:paramtypes",[Object])],TelcoMapsComponent.prototype,"config",null),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type","function"==typeof(_a="undefined"!=typeof IMapMarkers&&IMapMarkers)?_a:Object),(0,tslib_es6.w6)("design:paramtypes",["function"==typeof(_b="undefined"!=typeof IMapMarkers&&IMapMarkers)?_b:Object])],TelcoMapsComponent.prototype,"markers",null),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type","function"==typeof(_c=void 0!==core.EventEmitter&&core.EventEmitter)?_c:Object)],TelcoMapsComponent.prototype,"showDialog",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type","function"==typeof(_d=void 0!==core.EventEmitter&&core.EventEmitter)?_d:Object)],TelcoMapsComponent.prototype,"hideDialog",void 0),TelcoMapsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-telco-maps",template:(__webpack_require__("./src/app/telco-maps/telco-maps.component.html").default||__webpack_require__("./src/app/telco-maps/telco-maps.component.html")).length?__webpack_require__("./src/app/telco-maps/telco-maps.component.html").default||__webpack_require__("./src/app/telco-maps/telco-maps.component.html"):"",styles:[(__webpack_require__("./src/app/telco-maps/telco-maps.component.scss").default||__webpack_require__("./src/app/telco-maps/telco-maps.component.scss")).length?__webpack_require__("./src/app/telco-maps/telco-maps.component.scss").default||__webpack_require__("./src/app/telco-maps/telco-maps.component.scss"):""]}),(0,tslib_es6.w6)("design:paramtypes",["function"==typeof(_e=void 0!==core.NgZone&&core.NgZone)?_e:Object])],TelcoMapsComponent);const telco_maps_stories={title:"Iauro/Telco-Map",decorators:[(0,client.moduleMetadata)({imports:[animations.PW,common.ez,fesm2015_forms.FormsModule,flex.ae],declarations:[]})],component:TelcoMapsComponent,argTypes:{config:{type:"object"},markers:{type:"array"}}},pcolors=palette,Template=args=>({component:TelcoMapsComponent,props:args}),Default=Template.bind({});function generateMarkers(count,start,end){const markers=[];for(let i=0;i<count;i++){const latlan=getLatLng(start,end),obj={id:"mark-"+i+1,lat:latlan[0],lng:latlan[1],title:"Name-"+i+1,label:"Torgallmenningen"+i+1,color:pcolors.application["palette-"+Math.floor(7*Math.random())],link:"#thisisalink",mesh:Math.random()<.1?["mark-"+i+1,"mark-"+Math.round(Math.random()*i+1)]:null};markers.push(obj)}function getLatLng(start,end){return[Math.random()*(end[0]-start[0])+start[0],Math.random()*(end[1]-start[1])+start[1]]}return markers}const args={config:{iconDefault:"SITE",iconZoomed:"SITE_ZOOMED_ALT",iconSpiderfied:"NETWORK_ELEMENT",iconColor:pcolors.application["palette-2"],iconAnchorX:11,iconAnchorY:11,zoomLevelToChangeIcon:16,centerOnMapUpdate:!0,showMesh:!0},markers:generateMarkers(1e3,[18.6052695,73.7522604],[18.431485,73.9796919])};Default.args=args;const Config=Template.bind({}),argsConfig={config:{iconDefault:"SITE",iconZoomed:"SITE_ZOOMED_ALT",iconSpiderfied:"NETWORK_ELEMENT",iconColor:pcolors.application["palette-12"],iconAnchorX:15,iconAnchorY:15,zoomLevelToChangeIcon:10,centerOnMapUpdate:!0,showMesh:!0},markers:generateMarkers(1e3,[18.6052695,73.7522604],[18.431485,73.9796919])};Config.args=argsConfig;const Markers=Template.bind({}),argsMarkers={config:{iconDefault:"SITE",iconZoomed:"SITE_ZOOMED_ALT",iconSpiderfied:"NETWORK_ELEMENT",iconColor:pcolors.application["palette-2"],iconAnchorX:11,iconAnchorY:11,zoomLevelToChangeIcon:16,centerOnMapUpdate:!0,showMesh:!0},markers:generateMarkers(1e3,[30.6052695,33.7522604],[38.431485,34.9796919])};Markers.args=argsMarkers,Default.parameters=Object.assign({storySource:{source:"(args: TelcoMapsComponent) => ({\r\n\tcomponent: TelcoMapsComponent,\r\n\tprops: args,\r\n})"}},Default.parameters),Config.parameters=Object.assign({storySource:{source:"(args: TelcoMapsComponent) => ({\r\n\tcomponent: TelcoMapsComponent,\r\n\tprops: args,\r\n})"}},Config.parameters),Markers.parameters=Object.assign({storySource:{source:"(args: TelcoMapsComponent) => ({\r\n\tcomponent: TelcoMapsComponent,\r\n\tprops: args,\r\n})"}},Markers.parameters)},"./src/stories/telco-pie-chart.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{PieChart:()=>PieChart,default:()=>telco_pie_chart_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");let TelcoPieChartComponent=class TelcoPieChartComponent{constructor(){this.pieChartData={}}};(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Object)],TelcoPieChartComponent.prototype,"pieChartData",void 0),TelcoPieChartComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-telco-pie-chart",template:(__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.html").default||__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.html")).length?__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.html").default||__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.html"):"",styles:[(__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.scss").default||__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.scss")).length?__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.scss").default||__webpack_require__("./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.scss"):""]}),(0,tslib_es6.w6)("design:paramtypes",[])],TelcoPieChartComponent);var angular_plotly_js=__webpack_require__("./node_modules/angular-plotly.js/__ivy_ngcc__/fesm2015/angular-plotly.js.js");angular_plotly_js.U4.setPlotlyVersion("latest");const telco_pie_chart_stories={title:"Iauro/Telco-Pie-Chart",component:TelcoPieChartComponent,decorators:[(0,client.moduleMetadata)({declarations:[],imports:[common.ez,angular_plotly_js.U4]})]},PieChart=(args=>({props:args})).bind({});PieChart.args={pieChartData:{data:[{values:[5,4,3,1,2,15],rotation:90,text:["ML5","ML4","ML3","ML2","ML1",""],textinfo:"text",textposition:"inside",marker:{colors:["rgba(14, 127, 0, .5)","rgba(110, 154, 22, .5)","rgba(170, 202, 42, .5)","rgba(202, 209, 95, .5)","rgba(210, 206, 145, .5)","rgba(255, 255, 255, 0)"]},labels:["4.5-5","3.5-4.49","2.5-3.49","1.5-2.49","1-1.49"],sort:!1,hoverinfo:"label",hole:.5,type:"pie",showlegend:!0}],layout:{title:"",height:400,width:500,legend:{visible:!0,orientation:"h",font:{color:"black",size:11,family:"Calibri",bold:!0},hoverlabel:{bgcolor:"transparent"},x:0,y:0,tracetoggle:!0},annotations:[{font:{size:14},showarrow:!1,text:"Health Score - 70%",x:.5,y:.52}],margin:{l:0,r:0,b:0,t:0},xaxis:{type:"category",zeroline:!1,showticklabels:!1,showgrid:!1},yaxis:{type:"category",zeroline:!1,showticklabels:!1,showgrid:!1}}}},PieChart.parameters=Object.assign({storySource:{source:"(args: TelcoPieChartComponent) => ({\r\n\tprops: args,\r\n})"}},PieChart.parameters)},"./src/stories/telco-search.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,default:()=>telco_search_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");let TelcoSearchComponent=class TelcoSearchComponent{constructor(){this.iconUrl="../../assets/search-icon.svg",this.searchText="",this.backgroundColor="#f5f7fb",this.borderColor="#e2e7ef",this.fontFamily="Noto Sans, sans-serif",this.placeholder="Search",this.borderRadius="0px 4px 4px 0px",this.searchClicked=new core.EventEmitter}ngOnInit(){}searchClick(){this.searchClicked.emit()}};(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoSearchComponent.prototype,"backgroundColor",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoSearchComponent.prototype,"borderColor",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoSearchComponent.prototype,"fontFamily",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoSearchComponent.prototype,"placeholder",void 0),(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",String)],TelcoSearchComponent.prototype,"borderRadius",void 0),(0,tslib_es6.gn)([(0,core.Output)(),(0,tslib_es6.w6)("design:type",Object)],TelcoSearchComponent.prototype,"searchClicked",void 0),TelcoSearchComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-telco-search",template:(__webpack_require__("./src/app/telco-search/telco-search.component.html").default||__webpack_require__("./src/app/telco-search/telco-search.component.html")).length?__webpack_require__("./src/app/telco-search/telco-search.component.html").default||__webpack_require__("./src/app/telco-search/telco-search.component.html"):"",styles:[(__webpack_require__("./src/app/telco-search/telco-search.component.scss").default||__webpack_require__("./src/app/telco-search/telco-search.component.scss")).length?__webpack_require__("./src/app/telco-search/telco-search.component.scss").default||__webpack_require__("./src/app/telco-search/telco-search.component.scss"):""]}),(0,tslib_es6.w6)("design:paramtypes",[])],TelcoSearchComponent);var icon=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js"),fesm2015_button=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js"),fesm2015_forms=__webpack_require__("./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");const telco_search_stories={title:"Iauro/Telco-Search",component:TelcoSearchComponent,decorators:[(0,client.moduleMetadata)({declarations:[TelcoSearchComponent],imports:[common.ez,platform_browser.BrowserModule,icon.Ps,fesm2015_button.ot,fesm2015_forms.FormsModule,fesm2015_forms.ReactiveFormsModule]})]},Basic=(args=>({Component:TelcoSearchComponent,props:args})).bind({});Basic.args={placeholder:"Search",borderColor:"#e2e7ef",backgroundColor:"#f5f7fb",fontFamily:"Noto Sans, sans-serif",borderRadius:"0px 4px 4px 0px"},Basic.parameters=Object.assign({storySource:{source:"(args: TelcoSearchComponent) => ({\r\n\tComponent: TelcoSearchComponent,\r\n\tprops: args,\r\n})"}},Basic.parameters)},"./src/stories/telco-table.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTable:()=>BasicTable,default:()=>telco_table_stories});var _a,_b,_c,client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),a11y=__webpack_require__("./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js"),paginator=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js"),table=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js"),sort=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js");const ELEMENT_DATA=[{SiteName:"Site Name 1",CountofAlarm:"08",Timestamp:{date:"05 Jan,2022",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"RAN - IP Connection Failure"}},{SiteName:"Site Name 2",CountofAlarm:"09",Timestamp:{date:"05 Jan,2021",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"Cell Failure"}},{SiteName:"Site Name 3",CountofAlarm:"08",Timestamp:{date:"05 Jan,2021",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"RAN - IP Connection Failure"}},{SiteName:"Site Name 3",CountofAlarm:"08",Timestamp:{date:"05 Jan,2021",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"RAN - IP Connection Failure"}},{SiteName:"Site Name 4",CountofAlarm:"08",Timestamp:{date:"05 Jan,2021",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"RAN - IP Connection Failure"}},{SiteName:"Site Name 5",CountofAlarm:"08",Timestamp:{date:"05 Jan,2021",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"RAN - IP Connection Failure"}},{SiteName:"Site Name 6",CountofAlarm:"08",Timestamp:{date:"05 Jan,2021",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"RAN - IP Connection Failure"}},{SiteName:"Site Name 7",CountofAlarm:"08",Timestamp:{date:"05 Jan,2021",time:"10:00 AM"},RCA:{iconImg:"../assets/table-icon.svg",status:"RAN - IP Connection Failure"}}];let TelcoTableComponent=class TelcoTableComponent{constructor(_liveAnnouncer){this._liveAnnouncer=_liveAnnouncer,this.PaginationShow=!1,this.displayedColumns=["SiteName","CountofAlarm","Timestamp","RCA"],this.dataSource=new table.by(ELEMENT_DATA)}ngOnInit(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort,this.dataSource.sortingDataAccessor=(item,property)=>{switch(property){case"RCA":return item.RCA.status;case"Timestamp":return new Date(item.Timestamp.date);default:return item[property]}}}announceSortChange(sortState){sortState.direction?this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`):this._liveAnnouncer.announce("Sorting cleared")}};(0,tslib_es6.gn)([(0,core.Input)(),(0,tslib_es6.w6)("design:type",Boolean)],TelcoTableComponent.prototype,"PaginationShow",void 0),(0,tslib_es6.gn)([(0,core.ViewChild)(sort.YE),(0,tslib_es6.w6)("design:type","function"==typeof(_a=void 0!==sort.YE&&sort.YE)?_a:Object)],TelcoTableComponent.prototype,"sort",void 0),(0,tslib_es6.gn)([(0,core.ViewChild)(paginator.NW),(0,tslib_es6.w6)("design:type","function"==typeof(_b=void 0!==paginator.NW&&paginator.NW)?_b:Object)],TelcoTableComponent.prototype,"paginator",void 0),TelcoTableComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-telco-table",template:(__webpack_require__("./src/app/telco-table/telco-table.component.html").default||__webpack_require__("./src/app/telco-table/telco-table.component.html")).length?__webpack_require__("./src/app/telco-table/telco-table.component.html").default||__webpack_require__("./src/app/telco-table/telco-table.component.html"):"",styles:[(__webpack_require__("./src/app/telco-table/telco-table.component.scss").default||__webpack_require__("./src/app/telco-table/telco-table.component.scss")).length?__webpack_require__("./src/app/telco-table/telco-table.component.scss").default||__webpack_require__("./src/app/telco-table/telco-table.component.scss"):""]}),(0,tslib_es6.w6)("design:paramtypes",["function"==typeof(_c=void 0!==a11y.Kd&&a11y.Kd)?_c:Object])],TelcoTableComponent);var fesm2015_core=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js"),chips=__webpack_require__("./node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js"),animations=__webpack_require__("./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/animations.js");const telco_table_stories={title:"Iauro/Telco-Table",component:TelcoTableComponent,decorators:[(0,client.moduleMetadata)({declarations:[TelcoTableComponent],imports:[common.ez,platform_browser.BrowserModule,fesm2015_core.XK,table.p0,paginator.TU,chips.Hi,sort.JX,animations.PW]})]},BasicTable=(args=>({Component:TelcoTableComponent,props:args})).bind({});BasicTable.args={PaginationShow:!0},BasicTable.parameters=Object.assign({storySource:{source:"(args: TelcoTableComponent) => ({\r\n\tComponent: TelcoTableComponent,\r\n\tprops: args,\r\n})"}},BasicTable.parameters)},"./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?%21(?:^|[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/telco-bar-chart.stories.ts":"./src/stories/telco-bar-chart.stories.ts","./stories/telco-button.stories.ts":"./src/stories/telco-button.stories.ts","./stories/telco-card.stories.ts":"./src/stories/telco-card.stories.ts","./stories/telco-list.stories.ts":"./src/stories/telco-list.stories.ts","./stories/telco-maps.stories.ts":"./src/stories/telco-maps.stories.ts","./stories/telco-pie-chart.stories.ts":"./src/stories/telco-pie-chart.stories.ts","./stories/telco-search.stories.ts":"./src/stories/telco-search.stories.ts","./stories/telco-table.stories.ts":"./src/stories/telco-table.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?%21(?:^|[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?%21(?:^|[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/Introduction.stories.mdx":"./src/stories/Introduction.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?%21(?:^|[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"},"./src/stories/assets/code-brackets.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/code-brackets.2e1112d7.svg"},"./src/stories/assets/colors.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/colors.a4bd0486.svg"},"./src/stories/assets/comments.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/comments.a3859089.svg"},"./src/stories/assets/direction.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/direction.b770f9af.svg"},"./src/stories/assets/flow.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/flow.edad2ac1.svg"},"./src/stories/assets/plugin.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/plugin.d494b228.svg"},"./src/stories/assets/repo.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/repo.6d496322.svg"},"./src/stories/assets/stackalt.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/stackalt.dba9fbb3.svg"},"./src/app/button/button.component.scss":module=>{"use strict";module.exports="button {\n  padding: 0 0.5rem;\n}\n\n.primary {\n  background-color: #660099;\n  color: white;\n}\n\n.basicStyle {\n  color: black;\n  background-color: aqua;\n}\n\n.basic-layout {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.rounded {\n  border-radius: 4rem;\n}\n\n.iconRightClass {\n  flex-direction: row-reverse;\n}"},"./src/app/telco-cards/telco-cards.component.scss":module=>{"use strict";module.exports='html {\n  font-size: 14px;\n  font-family: "Noto Sans", sans-serif;\n  font-style: normal;\n}\n\np {\n  margin: 0;\n}\n\n.card {\n  padding: 1rem 1.5rem;\n  background: #ffffff;\n  border: 1px solid #e2e7ef;\n  border-radius: 0.2rem;\n  width: 291px;\n  height: 86px;\n}\n\n.item-1-upper {\n  height: -moz-fit-content;\n  height: fit-content;\n}\n\n.item-1-upper p {\n  font-size: 1rem;\n  font-weight: 400;\n  color: #636a75;\n}\n\n.lower-left p {\n  font-weight: 700;\n  font-size: 1.5rem;\n  color: #660099;\n}\n\n.lower-right {\n  background: #e0f2ee;\n  border-radius: 0.1rem;\n  height: 1.8rem;\n}\n\n.lower-right p {\n  font-weight: 700;\n  font-size: 1rem;\n  text-align: center;\n  color: #36947d;\n}\n\n.red {\n  background: rgba(225, 38, 38, 0.1);\n}\n\n.red p {\n  color: #e12626;\n}\n\n.card-item-3 {\n  min-height: 54px;\n}\n\n.card-item-3 p {\n  padding: 0.2rem;\n  font-weight: 400;\n  font-size: 1rem;\n  text-align: center;\n  color: #2f54eb;\n}'},"./src/app/telco-charts/telco-bar-chart/telco-bar-chart.component.scss":module=>{"use strict";module.exports=""},"./src/app/telco-charts/telco-pie-chart/telco-pie-chart.component.scss":module=>{"use strict";module.exports=""},"./src/app/telco-list/telco-list.component.scss":module=>{"use strict";module.exports='::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container {\n  flex-flow: nowrap row !important;\n  flex-direction: row-reverse !important;\n}\n\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value {\n  display: flex;\n  background: #e6e6e6;\n  border-radius: 4px;\n}\n\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right {\n  order: 2;\n  border-left: 0;\n}\n\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right:hover {\n  background: #e6e6e6;\n}\n\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-label {\n  order: 1;\n  padding: 1px 3px;\n  color: #000000;\n}\n\n::ng-deep .ng-select.insertSearchIcon.ng-select-multiple .ng-select-container .ng-arrow-wrapper .ng-arrow,\n::ng-deep .ng-select.insertSearchIcon.ng-select-single .ng-select-container .ng-arrow-wrapper .ng-arrow {\n  border-color: none;\n  border-style: none;\n  border-width: 0;\n}\n\n::ng-deep .ng-select.insertSearchIcon.ng-select-multiple .ng-select-container .ng-arrow-wrapper,\n::ng-deep .ng-select.insertSearchIcon.ng-select-single .ng-select-container .ng-arrow-wrapper {\n  background-image: url("https://assets.dds.iata.org/assets/icons/SearchIcon.svg");\n  background-repeat: no-repeat;\n  background-size: 14px 14px;\n  margin-top: 6px;\n}\n\n::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder {\n  top: 8px;\n  left: 5px;\n}\n\n::ng-deep .multiselect-autocomplete.ng-select .ng-select-container {\n  overflow: inherit !important;\n}\n\n::ng-deep .multiselect-autocomplete .exclude-items-container {\n  display: none;\n  position: absolute;\n  justify-content: space-between;\n  padding-left: 0.4rem;\n  padding-right: 0.4rem;\n  left: auto;\n  right: -20px;\n  top: 30px;\n  z-index: 9999;\n}\n\n::ng-deep .multiselect-autocomplete .ng-value.item-length .inner-wrap {\n  position: relative;\n}\n\n::ng-deep .multiselect-autocomplete .ng-value.item-length {\n  cursor: pointer;\n  z-index: 9;\n}\n\n::ng-deep .multiselect-autocomplete .ng-value.item-length:hover .exclude-items-container {\n  display: flex;\n}\n\n::ng-deep .exclude-items-container > ul.items-other {\n  padding: 0.1rem;\n  background: rgba(0, 0, 0, 0.8);\n  border-radius: 8px;\n  box-shadow: 0px 0px 4px 0px #c3c3c3;\n  color: #fff;\n  min-width: 153px;\n}\n\n::ng-deep .exclude-items-container > ul.items-other:after {\n  position: absolute;\n  content: " ";\n  top: -8px;\n  right: 14%;\n  margin-left: -4px;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-bottom: 8px solid rgba(0, 0, 0, 0.8);\n}\n\n::ng-deep .exclude-items-container > ul.items-other li > span {\n  font-size: 12px;\n}\n\n::ng-deep .exclude-items-container > ul.items-other li {\n  list-style: none;\n  display: flex;\n  justify-content: space-evenly;\n  padding: 8px 0px;\n}\n\n::ng-deep .exclude-items-container > ul.items-other li span {\n  margin-left: 0.2rem;\n}\n\n::ng-deep .exclude-items-container > .tags.tags-blue:hover ~ ul.items-other {\n  display: flex;\n  flex-direction: column;\n}\n\n::ng-deep .exclude-items-container ul.items-other .items-title {\n  word-break: break-word;\n  min-width: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n  line-height: 22px;\n  margin-left: 0px;\n  text-overflow: ellipsis;\n  margin-right: 4px;\n}\n\n::ng-deep .exclude-items-container .tags {\n  width: 24px;\n  height: 24px;\n  line-height: 22px;\n  text-align: center;\n  font-size: 9.6px !important;\n  border-radius: 50px;\n}\n\n::ng-deep .exclude-items-container .tags.tags-red {\n  color: #b34195;\n  background-color: #fdeef9;\n}\n\n::ng-deep .exclude-items-container .tags.tags-green {\n  color: #23702a;\n  background-color: #eaf4eb;\n}\n\n::ng-deep .exclude-items-container .tags.tags-purple {\n  color: #511c8e;\n  background-color: #efe9f5;\n}\n\n::ng-deep .exclude-items-container .tags.tags-blue {\n  width: 30px;\n  height: 30px;\n  color: #0f197b;\n  font-weight: 500;\n  font-size: 12px !important;\n  line-height: 30px;\n  margin-top: -4px;\n  background-color: #f4f5ff;\n}\n\n.option-label-size {\n  font-size: 12px;\n}\n\n.option-line-height {\n  line-height: 10px;\n}\n\n.item-length {\n  position: absolute;\n  right: 45px;\n}\n\n.wrap-text {\n  display: block;\n  white-space: nowrap;\n  width: 70px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.initial {\n  display: none;\n}\n\n.with-initial .initial {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  background-color: #fdeef9;\n  color: #c162a8;\n  font-size: 7px;\n  padding: 0;\n  height: 18px;\n  width: 18px;\n  margin: 2px;\n  font-style: normal;\n  overflow: hidden;\n}\n\n.with-initial .ng-value {\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #0f197b;\n  border-radius: 50px !important;\n  background: #fff !important;\n}\n\n.with-initial .ng-value .ng-value-label {\n  display: flex;\n}\n\n.with-initial .item-length {\n  background-color: #f4f5ff !important;\n  border-color: #f4f5ff;\n  font-size: 10px !important;\n  min-width: 27px;\n}\n\n.with-initial .ng-value.item-length .ng-value-label {\n  padding: 0;\n  color: #0f197b;\n}\n\n.with-initial .ng-value .ng-value-icon.right {\n  background-color: #0f197b;\n  border-radius: 50px;\n  color: #fff;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 4px;\n  font-size: 13px;\n  padding: 0;\n}\n\n.option-line-height-code {\n  font-weight: 400;\n  font-size: 13px;\n  margin-top: 2px;\n}\n\n.user-detail {\n  display: flex;\n  margin-right: 2em;\n}\n\n@media (max-width: 480px) {\n  .with-initial .item-length {\n    right: 30px;\n  }\n}'},"./src/app/telco-maps/telco-maps.component.scss":module=>{"use strict";module.exports=".map-wrapper .map-container {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  padding: 0px;\n  border-radius: 8px;\n}"},"./src/app/telco-search/telco-search.component.scss":module=>{"use strict";module.exports=".search {\n  display: flex;\n  align-items: center;\n  border: 1px solid;\n  width: 100%;\n  height: 2rem;\n}\n.search img {\n  width: 10%;\n  height: 100%;\n}\n.search input {\n  width: 90%;\n  border: none;\n  font-size: 1rem;\n}\n.search input:focus {\n  outline: none;\n}"},"./src/app/telco-table/telco-table.component.scss":module=>{"use strict";module.exports='html {\n  font-size: 14px;\n  font-family: "Noto Sans", sans-serif;\n  font-style: normal;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-table {\n  width: 100%;\n  height: 100%;\n}\n\n.hidden {\n  display: none;\n}\n\n.mat-body p,\n.mat-body-1 p,\n::ng-deep.mat-typography p {\n  margin: revert !important;\n}\n\n.mat-header-cell {\n  color: #333333;\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.mat-cell {\n  color: #594e4e;\n  font-weight: 400;\n  font-size: 1rem;\n}\n\n.mat-column-select {\n  overflow: initial;\n}\n\n.mat-paginator-sticky {\n  bottom: 0;\n  position: sticky;\n  z-index: 10;\n}'},"?4f7e":()=>{}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[88],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/dist/esm/preset/argsEnhancers.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.js"),__webpack_exec__("./node_modules/@angular/material/prebuilt-themes/indigo-pink.css"),__webpack_exec__("./src/styles.scss"))));__webpack_require__.O()}]);